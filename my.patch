diff --git a/drake/examples/KukaArm/KukaArm.m b/drake/examples/KukaArm/KukaArm.m
index 4f0400fcb..b2756a967 100644
--- a/drake/examples/KukaArm/KukaArm.m
+++ b/drake/examples/KukaArm/KukaArm.m
@@ -191,7 +191,7 @@
             u0 = B(1:Nq_arm,:)\C(1:Nq_arm);
         end
         
-        function [phi,normal,d,xA,xB,idxA,idxB,mu,n,D,dn,dD] = contactConstraints2(obj,kinsol,allow_multiple_contacts,active_collision_options)
+        function [phi,normal,d,xA,xB,idxA,idxB,mu,n,D,dn,dD] = contactConstraints_old(obj,kinsol,allow_multiple_contacts,active_collision_options)
             
             % @retval phi (m x 1) Vector of gap function values (typically contact distance), for m possible contacts
             % @retval normal (3 x m) Contact normal vector in world coordinates, points from B to A
@@ -261,9 +261,35 @@
                 kinsol = doKinematics(obj, kinsol, []);
             end
             
-            terrain_options=struct();
-            terrain_options.active_collision_options.terrain_only = true;
-            [phi_ground,normal_ground,d_ground,xA_ground,xB_ground,~,~,~,~,~,~,~] = obj.contactConstraints(kinsol.q,false,terrain_options.active_collision_options);
+            %%
+            normal_ground = repmat([0;0;1],1,4);
+            d_ground{1} = repmat([1;0;0],1,4);
+            d_ground{2} = repmat([0;-1;0],1,4);
+            
+            obj_pos = kinsol.q(9:11);
+            obj_ori = kinsol.q(12:14);
+            cylinder_radius = 0.03;
+            cylinder_height_half = 0.09;
+            R_world_to_obj = rpy2rotmat(obj_ori);
+            
+            xA_ground = [cylinder_radius, -cylinder_radius, 0, 0;
+                             0, 0, cylinder_radius, -cylinder_radius;
+                             -cylinder_height_half, -cylinder_height_half, -cylinder_height_half, -cylinder_height_half];
+            
+            xB_ground(:,1) = obj_pos + R_world_to_obj*[cylinder_radius;0;-cylinder_height_half];
+            xB_ground(:,2) = obj_pos + R_world_to_obj*[-cylinder_radius;0;-cylinder_height_half];
+            xB_ground(:,3) = obj_pos + R_world_to_obj*[0;cylinder_radius;-cylinder_height_half];
+            xB_ground(:,4) = obj_pos + R_world_to_obj*[0;-cylinder_radius;-cylinder_height_half];
+            
+            phi_ground = xB_ground(3,:)';
+            xB_ground(3,:) = zeros(1,4);
+            
+            %% pieces of code above compute the ground contact constraint manually
+            % terrain_options=struct();
+            % terrain_options.active_collision_options.terrain_only = true;
+            % [phi_ground,normal_ground,d_ground,xA_ground,xB_ground] = obj.contactConstraints(kinsol.q,false,terrain_options.active_collision_options);
+            %% 
+            
             n_ground_contact_point = 4;
             % note that, here A and B are inverted 
             phi_ground = phi_ground(1:n_ground_contact_point);
@@ -277,29 +303,57 @@
             xA_ground = xB_ground_tmp;
             
             % modified object and four contact points on each finger stick
-            cylinder_radius = 0.03;
-            cylinder_height = 0.18;
             finger_contact_delta = 0.01;
+            right_finger_y_shift = 0.04;
             finger_contact_left1 = [finger_contact_delta;0;.04];
             finger_contact_left2 = [finger_contact_delta;0;.02];
             finger_contact_left3 = [-finger_contact_delta;0;.04];
             finger_contact_left4 = [-finger_contact_delta;0;.02];
-            finger_contact_right1 = [finger_contact_delta;0.04;0.1225];
-            finger_contact_right2 = [finger_contact_delta;0.04;0.1025];
-            finger_contact_right3 = [-finger_contact_delta;0.04;0.1225];
-            finger_contact_right4 = [-finger_contact_delta;0.04;0.1025];
+            finger_contact_right1 = [finger_contact_delta;right_finger_y_shift;0.1225];
+            finger_contact_right2 = [finger_contact_delta;right_finger_y_shift;0.1025];
+            finger_contact_right3 = [-finger_contact_delta;right_finger_y_shift;0.1225];
+            finger_contact_right4 = [-finger_contact_delta;right_finger_y_shift;0.1025];
             
-            b = obj.forwardKin(kinsol,obj.cylinder_id,[0;0;0],1);
-            iiwa_link_7 = obj.forwardKin(kinsol,obj.iiwa_link_7_id,[0;0;0],1);
+            b = kinsol.q(9:14);%obj.forwardKin(kinsol,obj.cylinder_id,[0;0;0],1);
             R_world_to_B = rpy2rotmat(b(4:6));
-            fl1 = obj.forwardKin(kinsol,obj.left_finger_id,finger_contact_left1,0);
-            fl2 = obj.forwardKin(kinsol,obj.left_finger_id,finger_contact_left2,0);
-            fl3 = obj.forwardKin(kinsol,obj.left_finger_id,finger_contact_left3,0);
-            fl4 = obj.forwardKin(kinsol,obj.left_finger_id,finger_contact_left4,0);
-            fr1 = obj.forwardKin(kinsol,obj.right_finger_id,finger_contact_right1,0);
-            fr2 = obj.forwardKin(kinsol,obj.right_finger_id,finger_contact_right2,0);
-            fr3 = obj.forwardKin(kinsol,obj.right_finger_id,finger_contact_right3,0);
-            fr4 = obj.forwardKin(kinsol,obj.right_finger_id,finger_contact_right4,0);
+            
+            %% D-H parameters of kuka arm
+            theta = kinsol.q(1:7);
+            % d1 = 0.4200;
+            % d2 = 0.4000;
+            % a = zeros(1,7);
+            % alpha = [pi/2,-pi/2,-pi/2,pi/2,pi/2,-pi/2,0];
+            % d = [0,0,d1,0,d2,0,0];
+            % T = eye(4);
+            % for i=1:7
+            %     A(:,:,i) = [cos(theta(i)),-sin(theta(i))*cos(alpha(i)),sin(theta(i))*sin(alpha(i)),a(i)*cos(theta(i));
+            %                 sin(theta(i)),cos(theta(i))*cos(alpha(i)),-cos(theta(i))*sin(alpha(i)),a(i)*sin(theta(i));
+            %                 0,sin(alpha(i)),cos(alpha(i)),d(i);
+            %                 0,0,0,1];
+            %     T = T*A(:,:,i);
+            % end
+            
+            % pieces of code above are embedded into the analytical solution below
+            T = [sin(theta(7))*(sin(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) - cos(theta(7))*(sin(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3))))),   cos(theta(7))*(sin(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) + sin(theta(7))*(sin(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3))))), sin(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) - cos(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))), - (21*cos(theta(1))*sin(theta(2)))/50 - (2*sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))))/5 - (2*cos(theta(1))*cos(theta(4))*sin(theta(2)))/5;
+                cos(theta(7))*(sin(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3))))) - sin(theta(7))*(sin(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))), - cos(theta(7))*(sin(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))) - sin(theta(7))*(sin(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3))))), cos(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) - sin(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))),   (2*sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))))/5 - (21*sin(theta(1))*sin(theta(2)))/50 - (2*cos(theta(4))*sin(theta(1))*sin(theta(2)))/5;
+                sin(theta(7))*(sin(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) - cos(theta(5))*sin(theta(2))*sin(theta(3))) - cos(theta(7))*(cos(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) - sin(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4)))),                                                                                                                                                                                                                                                                 cos(theta(7))*(sin(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) - cos(theta(5))*sin(theta(2))*sin(theta(3))) + sin(theta(7))*(cos(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) - sin(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4)))),                                                                                                                                                            sin(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) + cos(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4))),                                                                        (21*cos(theta(2)))/50 + (2*cos(theta(2))*cos(theta(4)))/5 + (2*cos(theta(3))*sin(theta(2))*sin(theta(4)))/5;

+
+            R_DHbase_world = [-1,0,0;0,-1,0;0,0,1];% rotation from DH base coordinate to world coordinate (rotation around z axis)
+            pos_ee = R_DHbase_world*[T(1,4);T(2,4);T(3,4)+0.36];%0.36 is the base vertical position w.r.t. world coordinate
+            %R_ee = R_DHbase_world*T(1:3,1:3)*R_DHbase_world;
+            %R_ee_fwdkin = rpy2rotmat(iiwa_link_7_init(4:6));
+            
+            fr1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+            fr2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+            fr3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+            fr4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+            
+            fl1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1225];
+            fl2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1025];
+            fl3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1225];
+            fl4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1025];            
+            %%
             
             fl1 = R_world_to_B'*fl1;
             fl2 = R_world_to_B'*fl2;
@@ -339,31 +393,29 @@
                       left_normal3, left_normal4];
             
             d = cell(1,2);
-            Tr11 = cross(right_normal1,[0;0;1]);
-            Tr11 = Tr11/norm(Tr11);
-            Tr12 = cross(right_normal1,Tr11);
-            Tr21 = cross(right_normal2,[0;0;1]);
-            Tr21 = Tr21/norm(Tr21);
-            Tr22 = cross(right_normal2,Tr21);
-            Tr31 = cross(right_normal3,[0;0;1]);
-            Tr31 = Tr31/norm(Tr31);
-            Tr32 = cross(right_normal3,Tr31);
-            Tr41 = cross(right_normal4,[0;0;1]);
-            Tr41 = Tr41/norm(Tr41);
-            Tr42 = cross(right_normal4,Tr41);
-            
-            Tl11 = cross(left_normal1,[0;0;1]);
-            Tl11 = Tl11/norm(Tl11);
-            Tl12 = cross(left_normal1,Tl11);
-            Tl21 = cross(left_normal2,[0;0;1]);
-            Tl21 = Tl21/norm(Tl21);
-            Tl22 = cross(left_normal2,Tl21);
-            Tl31 = cross(left_normal3,[0;0;1]);
-            Tl31 = Tl31/norm(Tl31);
-            Tl32 = cross(left_normal3,Tl31);
-            Tl41 = cross(left_normal4,[0;0;1]);
-            Tl41 = Tl41/norm(Tl41);
-            Tl42 = cross(left_normal4,Tl41);
+            Tr11 = [right_normal1(2), -right_normal1(1) ,0]'/sqrt(right_normal1(1)^2 + right_normal1(2)^2);
+            Tr12 = [0,0,-1]';
+            
+            Tr21 = [right_normal2(2), -right_normal2(1) ,0]'/sqrt(right_normal2(1)^2 + right_normal2(2)^2);
+            Tr22 = [0,0,-1]';
+            
+            Tr31 = [right_normal3(2), -right_normal3(1) ,0]'/sqrt(right_normal3(1)^2 + right_normal3(2)^2);
+            Tr32 = [0,0,-1]';
+            
+            Tr41 = [right_normal4(2), -right_normal4(1) ,0]'/sqrt(right_normal4(1)^2 + right_normal4(2)^2);
+            Tr42 = [0,0,-1]';
+            
+            Tl11 = [left_normal1(2), -left_normal1(1) ,0]'/sqrt(left_normal1(1)^2 + left_normal1(2)^2);
+            Tl12 = [0,0,-1]';
+            
+            Tl21 = [left_normal2(2), -left_normal2(1) ,0]'/sqrt(left_normal2(1)^2 + left_normal2(2)^2);
+            Tl22 = [0,0,-1]';
+            
+            Tl31 = [left_normal3(2), -left_normal3(1) ,0]'/sqrt(left_normal3(1)^2 + left_normal3(2)^2);
+            Tl32 = [0,0,-1]';
+            
+            Tl41 = [left_normal4(2), -left_normal4(1) ,0]'/sqrt(left_normal4(1)^2 + left_normal4(2)^2);
+            Tl42 = [0,0,-1]';
             
             d{1} = [R_world_to_B'*[-ones(1,n_ground_contact_point);zeros(2,n_ground_contact_point)],Tr11,Tr21,Tr31,Tr41,Tl11,Tl21,Tl31,Tl41];
             d{2} = [R_world_to_B'*[zeros(1,n_ground_contact_point);ones(1,n_ground_contact_point);zeros(1,n_ground_contact_point)],Tr12,Tr22,Tr32,Tr42,Tl12,Tl22,Tl32,Tl42];
@@ -407,6 +459,350 @@
             mu = 1.0*ones(nC,1);
         end
         
+        function [normal,d,mu] = worldContactConstraints_v2(obj,kinsol)
+            if ~isstruct(kinsol)
+                % treat input as contactPositions(obj,q)
+                kinsol = doKinematics(obj, kinsol, []);
+            end
+            
+            %%
+%             normal_ground = repmat([0;0;1],1,4);
+%             d_ground{1} = repmat([1;0;0],1,4);
+%             d_ground{2} = repmat([0;-1;0],1,4);
+            
+            obj_pos = kinsol.q(9:11);
+            obj_ori = kinsol.q(12:14);
+            cylinder_radius = 0.03;
+            cylinder_height_half = 0.09;
+            R_world_to_obj = rpy2rotmat(obj_ori);
+            
+%             xA_ground = [cylinder_radius, -cylinder_radius, 0, 0;
+%                              0, 0, cylinder_radius, -cylinder_radius;
+%                              -cylinder_height_half, -cylinder_height_half, -cylinder_height_half, -cylinder_height_half];
+            
+            xB_ground(:,1) = obj_pos + R_world_to_obj*[cylinder_radius;0;-cylinder_height_half];
+            xB_ground(:,2) = obj_pos + R_world_to_obj*[-cylinder_radius;0;-cylinder_height_half];
+            xB_ground(:,3) = obj_pos + R_world_to_obj*[0;cylinder_radius;-cylinder_height_half];
+            xB_ground(:,4) = obj_pos + R_world_to_obj*[0;-cylinder_radius;-cylinder_height_half];
+            
+%             phi_ground = xB_ground(3,:)';
+%             xB_ground(3,:) = zeros(1,4);
+            
+            %% pieces of code above compute the ground contact constraint manually
+            % terrain_options=struct();
+            % terrain_options.active_collision_options.terrain_only = true;
+            % [phi_ground,normal_ground,d_ground,xA_ground,xB_ground] = obj.contactConstraints(kinsol.q,false,terrain_options.active_collision_options);
+            %% 
+            
+            n_ground_contact_point = 4;
+            % note that, here A and B are inverted 
+%             phi_ground = phi_ground(1:n_ground_contact_point);
+%             normal_ground = -normal_ground(:,1:n_ground_contact_point);
+%             d_ground{1} = -d_ground{1}(:,1:n_ground_contact_point);
+%             d_ground{2} = -d_ground{2}(:,1:n_ground_contact_point);
+%             xA_ground = xA_ground(:,1:n_ground_contact_point);
+%             xB_ground = xB_ground(:,1:n_ground_contact_point);
+%             xB_ground_tmp = xB_ground;
+%             xB_ground = xA_ground;
+%             xA_ground = xB_ground_tmp;
+%             
+            % modified object and four contact points on each finger stick
+            finger_contact_delta = 0.01;
+            right_finger_y_shift = 0.04;
+            
+            b = kinsol.q(9:14);%obj.forwardKin(kinsol,obj.cylinder_id,[0;0;0],1);
+            R_world_to_B = rpy2rotmat(b(4:6));
+            
+            %% D-H parameters of kuka arm
+            theta = kinsol.q(1:7);
+            % d1 = 0.4200;
+            % d2 = 0.4000;
+            % a = zeros(1,7);
+            % alpha = [pi/2,-pi/2,-pi/2,pi/2,pi/2,-pi/2,0];
+            % d = [0,0,d1,0,d2,0,0];
+            % T = eye(4);
+            % for i=1:7
+            %     A(:,:,i) = [cos(theta(i)),-sin(theta(i))*cos(alpha(i)),sin(theta(i))*sin(alpha(i)),a(i)*cos(theta(i));
+            %                 sin(theta(i)),cos(theta(i))*cos(alpha(i)),-cos(theta(i))*sin(alpha(i)),a(i)*sin(theta(i));
+            %                 0,sin(alpha(i)),cos(alpha(i)),d(i);
+            %                 0,0,0,1];
+            %     T = T*A(:,:,i);
+            % end
+            
+            % pieces of code above are embedded into the analytical solution below
+            T = [sin(theta(7))*(sin(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) - cos(theta(7))*(sin(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3))))),   cos(theta(7))*(sin(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) + sin(theta(7))*(sin(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3))))), sin(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) - cos(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))), - (21*cos(theta(1))*sin(theta(2)))/50 - (2*sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))))/5 - (2*cos(theta(1))*cos(theta(4))*sin(theta(2)))/5;
+                cos(theta(7))*(sin(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3))))) - sin(theta(7))*(sin(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))), - cos(theta(7))*(sin(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))) - sin(theta(7))*(sin(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3))))), cos(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) - sin(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))),   (2*sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))))/5 - (21*sin(theta(1))*sin(theta(2)))/50 - (2*cos(theta(4))*sin(theta(1))*sin(theta(2)))/5;
+                sin(theta(7))*(sin(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) - cos(theta(5))*sin(theta(2))*sin(theta(3))) - cos(theta(7))*(cos(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) - sin(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4)))),                                                                                                                                                                                                                                                                 cos(theta(7))*(sin(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) - cos(theta(5))*sin(theta(2))*sin(theta(3))) + sin(theta(7))*(cos(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) - sin(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4)))),                                                                                                                                                            sin(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) + cos(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4))),                                                                        (21*cos(theta(2)))/50 + (2*cos(theta(2))*cos(theta(4)))/5 + (2*cos(theta(3))*sin(theta(2))*sin(theta(4)))/5;

+
+            R_DHbase_world = [-1,0,0;0,-1,0;0,0,1];% rotation from DH base coordinate to world coordinate (rotation around z axis)
+            pos_ee = R_DHbase_world*[T(1,4);T(2,4);T(3,4)+0.36];%0.36 is the base vertical position w.r.t. world coordinate
+            %R_ee = R_DHbase_world*T(1:3,1:3)*R_DHbase_world;
+            %R_ee_fwdkin = rpy2rotmat(iiwa_link_7_init(4:6));
+            
+            fr1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+            fr2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+            fr3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+            fr4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+            
+            fl1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1225];
+            fl2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1025];
+            fl3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1225];
+            fl4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1025];            
+            
+            %%
+            fl1 = R_world_to_B'*fl1;
+            fl2 = R_world_to_B'*fl2;
+            fl3 = R_world_to_B'*fl3;
+            fl4 = R_world_to_B'*fl4;
+            
+            fr1 = R_world_to_B'*fr1;
+            fr2 = R_world_to_B'*fr2;
+            fr3 = R_world_to_B'*fr3;
+            fr4 = R_world_to_B'*fr4;
+            
+            b_local = R_world_to_B'*b(1:3);            
+            cylinder_normal = R_world_to_B'*[zeros(2,n_ground_contact_point);-ones(1,n_ground_contact_point)];%cylinder normal expressed in cylinder coordinate
+            right_normal1 = [fr1(1:2) - b_local(1:2);0];
+            right_normal1 = right_normal1./sqrt(right_normal1'*right_normal1);
+            right_normal2 = [fr2(1:2) - b_local(1:2);0];
+            right_normal2 = right_normal2./sqrt(right_normal2'*right_normal2);
+            right_normal3 = [fr3(1:2) - b_local(1:2);0];
+            right_normal3 = right_normal3./sqrt(right_normal3'*right_normal3);
+            right_normal4 = [fr4(1:2) - b_local(1:2);0];
+            right_normal4 = right_normal4./sqrt(right_normal4'*right_normal4);
+            left_normal1 = [fl1(1:2) - b_local(1:2);0];
+            left_normal1 = left_normal1./sqrt(left_normal1'*left_normal1);
+            left_normal2 = [fl2(1:2) - b_local(1:2);0];
+            left_normal2 = left_normal2./sqrt(left_normal2'*left_normal2);
+            left_normal3 = [fl3(1:2) - b_local(1:2);0];
+            left_normal3 = left_normal3./sqrt(left_normal3'*left_normal3);
+            left_normal4 = [fl4(1:2) - b_local(1:2);0];
+            left_normal4 = left_normal4./sqrt(left_normal4'*left_normal4);
+            normal = [cylinder_normal, right_normal1, right_normal2, ...
+                      right_normal3, right_normal4, left_normal1, left_normal2, ...
+                      left_normal3, left_normal4];
+            
+            d = cell(1,2);
+%             Tr11 = cross(right_normal1,[0;0;1]);
+%             Tr11 = Tr11/norm(Tr11);
+%             Tr12 = cross(right_normal1,Tr11);
+%                
+%             Tr21 = cross(right_normal2,[0;0;1]);
+%             Tr21 = Tr21/norm(Tr21);
+%             Tr22 = cross(right_normal2,Tr21);
+%             
+%             Tr31 = cross(right_normal3,[0;0;1]);
+%             Tr31 = Tr31/norm(Tr31);
+%             Tr32 = cross(right_normal3,Tr31);
+%             
+%             Tr41 = cross(right_normal4,[0;0;1]);
+%             Tr41 = Tr41/norm(Tr41);
+%             Tr42 = cross(right_normal4,Tr41);
+%             
+%             Tl11 = cross(left_normal1,[0;0;1]);
+%             Tl11 = Tl11/norm(Tl11);
+%             Tl12 = cross(left_normal1,Tl11);
+%             
+%             Tl21 = cross(left_normal2,[0;0;1]);
+%             Tl21 = Tl21/norm(Tl21);
+%             Tl22 = cross(left_normal2,Tl21);
+%             
+%             Tl31 = cross(left_normal3,[0;0;1]);
+%             Tl31 = Tl31/norm(Tl31);
+%             Tl32 = cross(left_normal3,Tl31);
+%             
+%             Tl41 = cross(left_normal4,[0;0;1]);
+%             Tl41 = Tl41/norm(Tl41);
+%             Tl42 = cross(left_normal4,Tl41);             
+
+            Tr11 = [right_normal1(2), -right_normal1(1) ,0]'/sqrt(right_normal1(1)^2 + right_normal1(2)^2);
+            Tr12 = [0,0,-1]';
+            
+            Tr21 = [right_normal2(2), -right_normal2(1) ,0]'/sqrt(right_normal2(1)^2 + right_normal2(2)^2);
+            Tr22 = [0,0,-1]';
+            
+            Tr31 = [right_normal3(2), -right_normal3(1) ,0]'/sqrt(right_normal3(1)^2 + right_normal3(2)^2);
+            Tr32 = [0,0,-1]';
+            
+            Tr41 = [right_normal4(2), -right_normal4(1) ,0]'/sqrt(right_normal4(1)^2 + right_normal4(2)^2);
+            Tr42 = [0,0,-1]';
+            
+            Tl11 = [left_normal1(2), -left_normal1(1) ,0]'/sqrt(left_normal1(1)^2 + left_normal1(2)^2);
+            Tl12 = [0,0,-1]';
+            
+            Tl21 = [left_normal2(2), -left_normal2(1) ,0]'/sqrt(left_normal2(1)^2 + left_normal2(2)^2);
+            Tl22 = [0,0,-1]';
+            
+            Tl31 = [left_normal3(2), -left_normal3(1) ,0]'/sqrt(left_normal3(1)^2 + left_normal3(2)^2);
+            Tl32 = [0,0,-1]';
+            
+            Tl41 = [left_normal4(2), -left_normal4(1) ,0]'/sqrt(left_normal4(1)^2 + left_normal4(2)^2);
+            Tl42 = [0,0,-1]';
+            
+            d{1} = [R_world_to_B'*[-ones(1,n_ground_contact_point);zeros(2,n_ground_contact_point)],Tr11,Tr21,Tr31,Tr41,Tl11,Tl21,Tl31,Tl41];
+            d{2} = [R_world_to_B'*[zeros(1,n_ground_contact_point);ones(1,n_ground_contact_point);zeros(1,n_ground_contact_point)],Tr12,Tr22,Tr32,Tr42,Tl12,Tl22,Tl32,Tl42];
+            
+            d{1} = R_world_to_B*d{1};
+            d{2} = R_world_to_B*d{2};
+            
+%             if ((abs(sum(sum(d_test{1} - d{1}))) > 1e-7) | (abs(sum(sum(d_test{2} - d{2}))) > 1e-7))
+%                 keyboard
+%             end
+            
+%             xA = [xA_ground, finger_contact_right1, finger_contact_right2, ...
+%                 finger_contact_right3, finger_contact_right4, ...
+%                 finger_contact_left1, finger_contact_left2, ...
+%                 finger_contact_left3, finger_contact_left4];
+%             
+%             %define horizontal 2D position on the cylinder surface
+%             xB = cylinder_radius*normal;
+%             %define vertical heights of closest point on the cylinder w.r.t cylinder coordinate
+%             %cylinder_local = R_world_to_B'*[0;0;cylinder_height/2];
+%             %xB(3,1) = - cylinder_local(3);
+%             xB(:,1:n_ground_contact_point) = xB_ground;
+%             % x and y direction is not accurate, currently assume the central point. It should be a point on the edge 
+%             xB(3,n_ground_contact_point+1) = fr1(3) - b_local(3);
+%             xB(3,n_ground_contact_point+2) = fr2(3) - b_local(3);
+%             xB(3,n_ground_contact_point+3) = fr3(3) - b_local(3);
+%             xB(3,n_ground_contact_point+4) = fr4(3) - b_local(3);
+%             
+%             xB(3,n_ground_contact_point+5) = fl1(3) - b_local(3);
+%             xB(3,n_ground_contact_point+6) = fl2(3) - b_local(3);
+%             xB(3,n_ground_contact_point+7) = fl3(3) - b_local(3);
+%             xB(3,n_ground_contact_point+8) = fl4(3) - b_local(3);
+            
+            normal = R_world_to_B*normal;
+            
+            % todo: when the object is not betwen two finger tips.
+            % todo: add caps at the end of cylinders
+            nC = 8+n_ground_contact_point;
+            
+            mu = 1.0*ones(nC,1);
+        end
+        
+        function [xB] = computexB(obj,kinsol)
+            if ~isstruct(kinsol)
+                % treat input as contactPositions(obj,q)
+                kinsol = doKinematics(obj, kinsol, []);
+            end
+            
+            obj_pos = kinsol.q(9:11);
+            obj_ori = kinsol.q(12:14);
+            cylinder_radius = 0.03;
+            cylinder_height_half = 0.09;
+            R_world_to_obj = rpy2rotmat(obj_ori);
+            
+            xA_ground = [cylinder_radius, -cylinder_radius, 0, 0;
+                             0, 0, cylinder_radius, -cylinder_radius;
+                             -cylinder_height_half, -cylinder_height_half, -cylinder_height_half, -cylinder_height_half];
+                        
+            %% pieces of code above compute the ground contact constraint manually
+            % terrain_options=struct();
+            % terrain_options.active_collision_options.terrain_only = true;
+            % [phi_ground,normal_ground,d_ground,xA_ground,xB_ground] = obj.contactConstraints(kinsol.q,false,terrain_options.active_collision_options);
+            %% 
+            
+            n_ground_contact_point = 4;
+            % note that, here A and B are inverted 
+            xA_ground = xA_ground(:,1:n_ground_contact_point);
+            xB_ground = xA_ground;
+            
+            % modified object and four contact points on each finger stick
+            finger_contact_delta = 0.01;
+            right_finger_y_shift = 0.04;
+            
+            b = kinsol.q(9:14);%obj.forwardKin(kinsol,obj.cylinder_id,[0;0;0],1);
+            R_world_to_B = rpy2rotmat(b(4:6));
+            
+            %% D-H parameters of kuka arm
+            theta = kinsol.q(1:7);
+            % d1 = 0.4200;
+            % d2 = 0.4000;
+            % a = zeros(1,7);
+            % alpha = [pi/2,-pi/2,-pi/2,pi/2,pi/2,-pi/2,0];
+            % d = [0,0,d1,0,d2,0,0];
+            % T = eye(4);
+            % for i=1:7
+            %     A(:,:,i) = [cos(theta(i)),-sin(theta(i))*cos(alpha(i)),sin(theta(i))*sin(alpha(i)),a(i)*cos(theta(i));
+            %                 sin(theta(i)),cos(theta(i))*cos(alpha(i)),-cos(theta(i))*sin(alpha(i)),a(i)*sin(theta(i));
+            %                 0,sin(alpha(i)),cos(alpha(i)),d(i);
+            %                 0,0,0,1];
+            %     T = T*A(:,:,i);
+            % end
+            
+            % pieces of code above are embedded into the analytical solution below
+            T = [sin(theta(7))*(sin(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) - cos(theta(7))*(sin(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3))))),   cos(theta(7))*(sin(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) + sin(theta(7))*(sin(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3))))), sin(theta(6))*(cos(theta(5))*(cos(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) - cos(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(3))*sin(theta(1)) + cos(theta(1))*cos(theta(2))*sin(theta(3)))) - cos(theta(6))*(sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))) + cos(theta(1))*cos(theta(4))*sin(theta(2))), - (21*cos(theta(1))*sin(theta(2)))/50 - (2*sin(theta(4))*(sin(theta(1))*sin(theta(3)) - cos(theta(1))*cos(theta(2))*cos(theta(3))))/5 - (2*cos(theta(1))*cos(theta(4))*sin(theta(2)))/5;
+                cos(theta(7))*(sin(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3))))) - sin(theta(7))*(sin(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))), - cos(theta(7))*(sin(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) - cos(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))) - sin(theta(7))*(sin(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) + cos(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3))))), cos(theta(6))*(sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) - cos(theta(4))*sin(theta(1))*sin(theta(2))) - sin(theta(6))*(cos(theta(5))*(cos(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))) + sin(theta(1))*sin(theta(2))*sin(theta(4))) + sin(theta(5))*(cos(theta(1))*cos(theta(3)) - cos(theta(2))*sin(theta(1))*sin(theta(3)))),   (2*sin(theta(4))*(cos(theta(1))*sin(theta(3)) + cos(theta(2))*cos(theta(3))*sin(theta(1))))/5 - (21*sin(theta(1))*sin(theta(2)))/50 - (2*cos(theta(4))*sin(theta(1))*sin(theta(2)))/5;
+                sin(theta(7))*(sin(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) - cos(theta(5))*sin(theta(2))*sin(theta(3))) - cos(theta(7))*(cos(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) - sin(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4)))),                                                                                                                                                                                                                                                                 cos(theta(7))*(sin(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) - cos(theta(5))*sin(theta(2))*sin(theta(3))) + sin(theta(7))*(cos(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) - sin(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4)))),                                                                                                                                                            sin(theta(6))*(cos(theta(5))*(cos(theta(2))*sin(theta(4)) - cos(theta(3))*cos(theta(4))*sin(theta(2))) + sin(theta(2))*sin(theta(3))*sin(theta(5))) + cos(theta(6))*(cos(theta(2))*cos(theta(4)) + cos(theta(3))*sin(theta(2))*sin(theta(4))),                                                                        (21*cos(theta(2)))/50 + (2*cos(theta(2))*cos(theta(4)))/5 + (2*cos(theta(3))*sin(theta(2))*sin(theta(4)))/5;
+                0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        0,                                                                                                                                                                                                                                                                                                                                                                                        0,                                                                                                                                                                            1];
+
+            R_DHbase_world = [-1,0,0;0,-1,0;0,0,1];% rotation from DH base coordinate to world coordinate (rotation around z axis)
+            pos_ee = R_DHbase_world*[T(1,4);T(2,4);T(3,4)+0.36];%0.36 is the base vertical position w.r.t. world coordinate
+            %R_ee = R_DHbase_world*T(1:3,1:3)*R_DHbase_world;
+            %R_ee_fwdkin = rpy2rotmat(iiwa_link_7_init(4:6));
+            
+            fr1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+            fr2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+            fr3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+            fr4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+            
+            fl1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1225];
+            fl2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1025];
+            fl3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1225];
+            fl4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(kinsol.q(8)-0.04);0.081+0.1025];            
+            %%
+            
+            fl1 = R_world_to_B'*fl1;
+            fl2 = R_world_to_B'*fl2;
+            fl3 = R_world_to_B'*fl3;
+            fl4 = R_world_to_B'*fl4;
+            
+            fr1 = R_world_to_B'*fr1;
+            fr2 = R_world_to_B'*fr2;
+            fr3 = R_world_to_B'*fr3;
+            fr4 = R_world_to_B'*fr4;
+            
+            b_local = R_world_to_B'*b(1:3);            
+            cylinder_normal = R_world_to_B'*[zeros(2,n_ground_contact_point);-ones(1,n_ground_contact_point)];%cylinder normal expressed in cylinder coordinate
+            right_normal1 = [fr1(1:2) - b_local(1:2);0];
+            right_normal1 = right_normal1./sqrt(right_normal1'*right_normal1);
+            right_normal2 = [fr2(1:2) - b_local(1:2);0];
+            right_normal2 = right_normal2./sqrt(right_normal2'*right_normal2);
+            right_normal3 = [fr3(1:2) - b_local(1:2);0];
+            right_normal3 = right_normal3./sqrt(right_normal3'*right_normal3);
+            right_normal4 = [fr4(1:2) - b_local(1:2);0];
+            right_normal4 = right_normal4./sqrt(right_normal4'*right_normal4);
+            left_normal1 = [fl1(1:2) - b_local(1:2);0];
+            left_normal1 = left_normal1./sqrt(left_normal1'*left_normal1);
+            left_normal2 = [fl2(1:2) - b_local(1:2);0];
+            left_normal2 = left_normal2./sqrt(left_normal2'*left_normal2);
+            left_normal3 = [fl3(1:2) - b_local(1:2);0];
+            left_normal3 = left_normal3./sqrt(left_normal3'*left_normal3);
+            left_normal4 = [fl4(1:2) - b_local(1:2);0];
+            left_normal4 = left_normal4./sqrt(left_normal4'*left_normal4);
+            normal = [cylinder_normal, right_normal1, right_normal2, ...
+                      right_normal3, right_normal4, left_normal1, left_normal2, ...
+                      left_normal3, left_normal4];
+                  
+            %define horizontal 2D position on the cylinder surface
+            xB = cylinder_radius*normal;
+            %define vertical heights of closest point on the cylinder w.r.t cylinder coordinate
+            %cylinder_local = R_world_to_B'*[0;0;cylinder_height/2];
+            %xB(3,1) = - cylinder_local(3);
+            xB(:,1:n_ground_contact_point) = xB_ground;
+            % x and y direction is not accurate, currently assume the central point. It should be a point on the edge 
+            xB(3,n_ground_contact_point+1) = fr1(3) - b_local(3);
+            xB(3,n_ground_contact_point+2) = fr2(3) - b_local(3);
+            xB(3,n_ground_contact_point+3) = fr3(3) - b_local(3);
+            xB(3,n_ground_contact_point+4) = fr4(3) - b_local(3);
+            
+            xB(3,n_ground_contact_point+5) = fl1(3) - b_local(3);
+            xB(3,n_ground_contact_point+6) = fl2(3) - b_local(3);
+            xB(3,n_ground_contact_point+7) = fl3(3) - b_local(3);
+            xB(3,n_ground_contact_point+8) = fl4(3) - b_local(3);
+        end
+        
         function [n,D] = jointContactJacobians(obj,kinsol)
             if ~isstruct(kinsol)
                 % treat input as contactPositions(obj,q)
@@ -443,9 +839,17 @@
             [phi,normal,d,xA,xB,idxA,idxB,mu] = worldContactConstraints(obj,kinsol);
             
             if compute_first_derivative
-                [n,D] = jointContactJacobians(obj,kinsol);
+                if ~isstruct(kinsol)
+                    % treat input as contactPositions(obj,q)
+                    kinsol = doKinematics(obj, kinsol, []);
+                end                
+                [n, D] = contactConstraintDerivatives(obj, normal, kinsol, idxA, idxB, xA, xB, d);
             end
             
+            % if compute_first_derivative
+            %     [n_old,D_old] = jointContactJacobians(obj,kinsol);
+            % end
+            
             if compute_kinematics_gradients
                 %finite diff since we don't trust this
                 %[~, ~, dn, dD] = contactConstraintDerivatives(obj, normal, kinsol, idxA, idxB, xA, xB, d);
@@ -456,21 +860,32 @@
                 dD{2} = dn;
                 dD{3} = dn;
                 dD{4} = dn;
-                dq = diag(sqrt(eps(kinsol.q)))*1e-2;
+                %dq = diag(sqrt(eps(kinsol.q)))*1e-2;
                 
-%                 tic
-%                 for k = 1:14
-%                     [np,Dp] = jointContactJacobians(obj,kinsol.q+dq(:,k));
-%                     [nm,Dm] = jointContactJacobians(obj,kinsol.q-dq(:,k));
-%                     dn(:,k) = vec(np-nm)/(2*dq(k,k));
-%                     dD{1}(:,k) = vec(Dp{1}-Dm{1})/(2*dq(k,k));
-%                     dD{2}(:,k) = vec(Dp{2}-Dm{2})/(2*dq(k,k));
-%                     dD{3}(:,k) = vec(Dp{3}-Dm{3})/(2*dq(k,k));
-%                     dD{4}(:,k) = vec(Dp{4}-Dm{4})/(2*dq(k,k));
-%                 end
-%                 toc
+                % for k = 1:14
+                %     [np,Dp] = jointContactJacobians(obj,kinsol.q+dq(:,k));
+                %     [nm,Dm] = jointContactJacobians(obj,kinsol.q-dq(:,k));
+                %     dn(:,k) = vec(np-nm)/(2*dq(k,k));
+                %     dD{1}(:,k) = vec(Dp{1}-Dm{1})/(2*dq(k,k));
+                %     dD{2}(:,k) = vec(Dp{2}-Dm{2})/(2*dq(k,k));
+                %     dD{3}(:,k) = vec(Dp{3}-Dm{3})/(2*dq(k,k));
+                %     dD{4}(:,k) = vec(Dp{4}-Dm{4})/(2*dq(k,k));
+                % end
             end
         end
+        
+        function [normal,d,mu] = contactConstraints_manual_v2(obj,kinsol)
+            % @retval normal (3 x m) Contact normal vector in world coordinates, points from B to A
+            % @retval d {k} (3 x m) Contact friction basis vectors in world coordinates, points from B to A
+            % @retval mu (m x 1) Coefficients of friction
+                        
+            if ~isstruct(kinsol)
+                % treat input as contactPositions(obj,q)
+                kinsol = doKinematics(obj, kinsol, []);
+            end
+            
+            [normal,d,mu] = worldContactConstraints_v2(obj,kinsol);
+        end
     end
 end
 
diff --git a/drake/examples/KukaArm/Sig_data.dat b/drake/examples/KukaArm/Sig_data.dat
deleted file mode 100644
index db8e6aad2..000000000
--- a/drake/examples/KukaArm/Sig_data.dat
+++ /dev/null
@@ -1,29 +0,0 @@
-  -1.5954377e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.6017623e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00  -1.5986000e+00
-  -1.2044895e+00  -1.2013272e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2076518e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00  -1.2044895e+00
-  -2.1812859e-02  -2.1812859e-02  -1.8650581e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.4975137e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02  -2.1812859e-02
-   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5953387e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5890141e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00   1.5921764e+00
-   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.5155497e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   8.8830942e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02   9.1993219e-02
-   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1777107e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1713862e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00   1.1745485e+00
-   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.3498705e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   2.7174150e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02   3.0336428e-02
-   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8385923e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.7753468e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01   1.8069695e-01
-  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.5321144e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -5.1645699e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02  -4.8483421e-02
-   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.8007665e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7375210e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01   7.7691438e-01
-   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.5814368e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   7.9489812e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02   8.2652090e-02
-   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   5.0368107e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03  -1.2877446e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03   1.8745331e-03
-  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.5321872e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -3.1646427e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02  -2.8484149e-02
-   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   3.7856510e-03   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04  -2.5389044e-03   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04   6.2337329e-04
-  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0091878e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0724334e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01  -1.0408106e-01
-   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.9565159e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.3240604e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02   8.6402881e-02
-  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3123795e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3756251e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01  -2.3440023e-01
-  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -7.9517256e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.5841812e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02  -8.2679534e-02
-   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   2.0119608e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.3795052e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02   1.6957330e-02
-   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   6.2981267e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.6656712e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02   5.9818989e-02
-   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.6511929e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.0187374e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02   4.3349652e-02
-   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   2.1099306e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.4774751e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02   1.7937028e-02
-  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.1160513e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.7485068e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02  -1.4322791e-02
-  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.4906699e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5539154e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01  -1.5222926e-01
-  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -7.9796424e-03  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.4304198e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02  -1.1141920e-02
-   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.3528645e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02   4.7204089e-02   5.0366367e-02   5.0366367e-02   5.0366367e-02
-   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.8297215e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.5134938e-02   9.1972660e-02   9.5134938e-02   9.5134938e-02
-   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   2.2171680e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.9009402e-02   1.5847124e-02   1.9009402e-02
-   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1613946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1603946e+00   1.1593946e+00
diff --git a/drake/examples/KukaArm/dJA_analytical.m b/drake/examples/KukaArm/dJA_analytical.m
new file mode 100644
index 000000000..f51a9f035
--- /dev/null
+++ b/drake/examples/KukaArm/dJA_analytical.m
@@ -0,0 +1,1542 @@
+function dJA_finger = dJA_analytical(q,contact_index,state_dimension)
+theta_1 = q(1);theta_2 = q(2);theta_3 = q(3);theta_4 = q(4);theta_5 = q(5);theta_6 = q(6);theta_7 = q(7);theta_8 = q(8);
+obj_x = q(9); obj_y = q(10); obj_z = q(11); obj_yaw = q(12); obj_pitch = q(13); obj_roll = q(14);
+
+switch state_dimension
+    case 1
+        switch contact_index
+            case 1
+                
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000;
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100;
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    0;
+                    0;
+                    0];
+            case 2
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000;
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100;
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    0;
+                    0;
+                    0];
+            case 3
+                dJA_finger = [ (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (21*cos(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25;
+                    0;
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100;
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    0;
+                    0;
+                    0];
+            case 4
+                dJA_finger = [(367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (21*cos(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25;
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (367*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25;
+                    0;
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100;
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25;
+                    0;
+                    0;
+                    0;
+                    0];
+            case 5
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (21*cos(theta_2)*sin(theta_1))/50 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100;
+                    (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100;
+                    0;
+                    - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))));
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))));
+                    0];
+            case 6
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (21*cos(theta_2)*sin(theta_1))/50 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100;
+                    (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100;
+                    0;
+                    - (367*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    - (367*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))));
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))));
+                    0];
+                
+            case 7
+                dJA_finger = [(407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (21*cos(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (21*cos(theta_2)*sin(theta_1))/50 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100;
+                    (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))));
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))));
+                    0];
+            case 8
+                dJA_finger = [(367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (21*cos(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (21*cos(theta_2)*sin(theta_1))/50 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5;
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;
+                    0;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000;
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000;
+                    0;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100;
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100;
+                    0;
+                    (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100;
+                    (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100;
+                    0;
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (367*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25);
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25);
+                    0;
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))));
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))));
+                    0];
+        end
+    case 2
+        switch contact_index
+            case 1
+                dJA_finger = [(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 + (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/25 - (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (21*sin(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (2*cos(theta_2)*cos(theta_4))/5 - (21*cos(theta_2))/50 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 2
+                dJA_finger = [(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 + (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/25 - (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (21*sin(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (2*cos(theta_2)*cos(theta_4))/5 - (21*cos(theta_2))/50 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (367*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 3
+                dJA_finger = [(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 + (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/25 - (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (21*sin(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (2*cos(theta_2)*cos(theta_4))/5 - (21*cos(theta_2))/50 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 4
+                dJA_finger = [(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (21*cos(theta_2)*sin(theta_1))/50 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 + (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/25 - (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (21*sin(theta_1)*sin(theta_2))/50 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (2*cos(theta_2)*cos(theta_4))/5 - (21*cos(theta_2))/50 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (367*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 5
+                dJA_finger = [(sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (21*cos(theta_2)*sin(theta_1))/50 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (407*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 + (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5
+                    (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 - (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (21*sin(theta_1)*sin(theta_2))/50 - (407*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (2*cos(theta_2)*cos(theta_4))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (21*cos(theta_2))/50 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))];
+            case 6
+                dJA_finger = [(sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (21*cos(theta_2)*sin(theta_1))/50 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (367*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 + (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5
+                    (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 - (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (21*sin(theta_1)*sin(theta_2))/50 - (367*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (2*cos(theta_2)*cos(theta_4))/5 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (21*cos(theta_2))/50 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (367*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (367*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (367*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))];
+            case 7
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (21*cos(theta_2)*sin(theta_1))/50 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (407*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 - (21*cos(theta_1)*sin(theta_2))/50
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 - (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 - (407*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_2)*cos(theta_4))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (21*cos(theta_2))/50 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))];
+            case 8
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (21*cos(theta_2)*sin(theta_1))/50 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_2)*cos(theta_4)*sin(theta_1))/5 - (2*cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))/5
+                    (21*cos(theta_1)*cos(theta_2))/50 + (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (2*cos(theta_1)*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    0
+                    (2*cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4))/5 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))*(theta_8 - 1/25) - (367*cos(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_4)*sin(theta_2) - cos(theta_1)*cos(theta_2)*cos(theta_3)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_1)*cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_1)*cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_1)*cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5 - (21*cos(theta_1)*sin(theta_2))/50
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)))/100 - (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 - (367*cos(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) + cos(theta_2)*cos(theta_5)*sin(theta_1)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)*sin(theta_1)) - cos(theta_2)*sin(theta_1)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_1)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 + (2*cos(theta_2)*cos(theta_3)*sin(theta_1)*sin(theta_4))/5
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_2)*cos(theta_4))/5 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (21*cos(theta_2))/50 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5
+                    (367*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (367*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (367*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))];
+        end
+    case 3
+        switch contact_index
+            case 1
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (407*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/25 - (407*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 - (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    0
+                    0
+                    0];
+            case 2
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (367*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/25 - (367*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 - (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (367*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (367*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (367*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (367*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (367*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (367*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (367*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (367*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (367*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    0
+                    0
+                    0];
+            case 3
+                dJA_finger = [(2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (407*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/25 - (407*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 + (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    0
+                    0
+                    0];
+            case 4
+                dJA_finger = [(2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/25 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (367*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/25 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/25 - (367*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (367*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (367*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (367*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (367*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (367*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (367*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (367*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 + (367*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (367*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    0
+                    0
+                    0];
+            case 5
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))*(theta_8 - 1/25) - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (407*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    - (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5))) - (407*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 - (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))];
+            case 6
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))*(theta_8 - 1/25) - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (407*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    - (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5))) - (407*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 - (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))];
+            case 7
+                dJA_finger = [(sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (407*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (407*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (407*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (407*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5))) - (407*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))];
+            case 8
+                dJA_finger = [(sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    0
+                    (367*sin(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_1)*cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_1)*cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_1)*cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_1)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (367*sin(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_1)*sin(theta_2) - cos(theta_4)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_6)*sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_4))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_7)*(cos(theta_2)*cos(theta_3)*cos(theta_5) - cos(theta_2)*cos(theta_4)*sin(theta_3)*sin(theta_5)) - sin(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*cos(theta_3)*sin(theta_5) + cos(theta_2)*cos(theta_4)*cos(theta_5)*sin(theta_3)) + cos(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (2*cos(theta_2)*sin(theta_3)*sin(theta_4))/5 - (367*cos(theta_2)*cos(theta_6)*sin(theta_3)*sin(theta_4))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))) + sin(theta_4)*sin(theta_6)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3))))/100 - (367*cos(theta_6)*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) + sin(theta_4)*sin(theta_6)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))) - cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))*(theta_8 - 1/25) + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) + cos(theta_4)*cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_4)*sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1))))/100 + (367*cos(theta_6)*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)) - cos(theta_3)*sin(theta_2)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5))) - (367*sin(theta_6)*(sin(theta_2)*sin(theta_3)*sin(theta_5) - cos(theta_3)*cos(theta_4)*cos(theta_5)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_5)*sin(theta_2)*sin(theta_3) + cos(theta_3)*cos(theta_4)*sin(theta_2)*sin(theta_5)))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (367*cos(theta_3)*cos(theta_6)*sin(theta_2)*sin(theta_4))/2000
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (367*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (367*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (367*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (367*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (367*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (367*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (367*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))];
+        end
+    case 4
+        switch contact_index
+            case 1
+                dJA_finger = [(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    0
+                    0
+                    0];
+            case 2
+                dJA_finger = [(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (367*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (367*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (367*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (367*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (2*cos(theta_2)*cos(theta_4))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (367*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (367*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (367*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    0
+                    0
+                    0];
+            case 3
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 + (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/25 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (2*cos(theta_2)*cos(theta_4))/5 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    0
+                    0
+                    0];
+            case 4
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 + (367*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/25 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (367*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))/25 - (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (367*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (367*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/25 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 + (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/25 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/25 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (2*cos(theta_2)*cos(theta_4))/5 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (367*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (367*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    0
+                    0
+                    0];
+            case 5
+                dJA_finger = [(407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) + (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - (2*cos(theta_2)*cos(theta_4))/5 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) + (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))];
+            case 6
+                dJA_finger = [(367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (367*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 + (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (367*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (367*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (367*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 + (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) + (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - (2*cos(theta_2)*cos(theta_4))/5 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) + (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (367*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (367*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (367*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))];
+            case 7
+                dJA_finger = [ (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (407*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (407*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (407*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (407*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (407*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (407*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (407*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - (2*cos(theta_2)*cos(theta_4))/5 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (407*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))];
+            case 8
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (367*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (2*sin(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (367*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (2*cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (2*cos(theta_1)*sin(theta_2)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    0
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))) - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_2)*sin(theta_4))/5 + (2*cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2))/5
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (367*cos(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (2*cos(theta_2)*sin(theta_1)*sin(theta_4))/5 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/100 + (2*cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2))/5
+                    (2*sin(theta_2)*sin(theta_4))/5 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))) + (367*cos(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/100 + (2*cos(theta_2)*cos(theta_3)*cos(theta_4))/5
+                    (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*cos(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/5 - (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (367*cos(theta_4)*cos(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 + (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_7)*sin(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (2*cos(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/5 - (cos(theta_7)*(cos(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)) - cos(theta_5)*cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_4)*cos(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (367*cos(theta_5)*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_4)*sin(theta_5)*sin(theta_7)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) - cos(theta_7)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_6) - cos(theta_5)*cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - (2*cos(theta_4)*sin(theta_2)*sin(theta_3))/5 - (367*cos(theta_4)*cos(theta_6)*sin(theta_2)*sin(theta_3))/2000 - (367*cos(theta_5)*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000 - (sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_5)*sin(theta_7))/100
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/100 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4))) + (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/100
+                    (theta_8 - 1/25)*(sin(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))) - (2*cos(theta_2)*cos(theta_4))/5 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2))))/100 - (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 - (367*cos(theta_5)*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_5)*sin(theta_7)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (367*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (367*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (367*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))];
+        end
+    case 5
+        switch contact_index
+            case 1
+                dJA_finger = [(cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    0
+                    0
+                    0];
+            case 2
+                dJA_finger = [(cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (367*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    0
+                    0
+                    0];
+            case 3
+                dJA_finger = [(cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    0
+                    0
+                    0];
+            case 4
+                dJA_finger = [(cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25
+                    (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (367*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 + (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    0
+                    0
+                    0];
+            case 5
+                dJA_finger = [(407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    0
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) + (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5))) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+            case 6
+                dJA_finger = [(367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    0
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) + (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (367*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) + (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) - (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5))) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+            case 7
+                dJA_finger = [(407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (407*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    0
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (407*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (407*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (407*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (407*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (407*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+            case 8
+                dJA_finger = [(367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (367*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    0
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/2000 + (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100
+                    (367*sin(theta_6)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/2000 - (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3))) - (sin(theta_7)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) + (367*sin(theta_6)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    (cos(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25) + (367*sin(theta_6)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_6)*cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (367*sin(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (cos(theta_5)*cos(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (cos(theta_5)*cos(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25) + (cos(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (367*sin(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_6)*cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000
+                    (cos(theta_6)*cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + cos(theta_6)*sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+        end
+    case 6
+        switch contact_index
+            case 1
+                dJA_finger = [(sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    0
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 2
+                dJA_finger = [(sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    0
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (367*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000
+                    (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (367*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (367*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (367*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (367*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (367*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 + (367*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (367*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 3
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25
+                    0
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 + (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 4
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (367*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25
+                    0
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (367*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000
+                    (367*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (367*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (367*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (367*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000
+                    (367*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (sin(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (sin(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/25 + (367*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + (367*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (367*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (sin(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (367*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000
+                    (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25
+                    (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    0
+                    0
+                    0];
+            case 5
+                dJA_finger = [- (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))];
+            case 6
+                dJA_finger = [- (367*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (367*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (367*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (367*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (367*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (367*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (367*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (367*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (367*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (367*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (367*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (367*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (367*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (367*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (367*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (367*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25)
+                    (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (367*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 + sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (367*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (367*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (367*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (367*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))];
+            case 7
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000
+                    (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))];
+            case 8
+                dJA_finger = [(cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (407*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (407*cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (407*sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - sin(theta_7)*(cos(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) + sin(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (407*sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    (407*sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))/2000 - (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)))/2000 + sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (407*cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (407*sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    (407*sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))/2000 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*sin(theta_4)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)))/100 + (407*cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(sin(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_6)*sin(theta_2)*sin(theta_3)*sin(theta_4)) + (407*sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6))/2000
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (407*sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)))/2000 + (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    (407*sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + sin(theta_7)*(theta_8 - 1/25)*(cos(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + cos(theta_5)*sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (407*cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000
+                    (407*sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (407*cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + sin(theta_7)*(cos(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000
+                    sin(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (407*cos(theta_6)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/2000
+                    (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))];
+        end
+    case 7
+        switch contact_index
+            case 1
+                dJA_finger = [ (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    0
+                    0
+                    0];
+            case 2
+                dJA_finger = [(cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    0
+                    0
+                    0];
+            case 3
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    0
+                    0
+                    0];
+            case 4
+                dJA_finger = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/25 + (sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/25 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/25 - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 - (cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/25 - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 + (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/25 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100 - (sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/25
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100 + (sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/25
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/25 + (cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25
+                    0
+                    0
+                    0];
+            case 5
+                dJA_finger = [(cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+            case 6
+                dJA_finger = [(cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25)
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 + (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 + (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100
+                    (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+            case 7
+                dJA_finger = [- (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+            case 8
+                dJA_finger = [- (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    0
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))) + sin(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5))))/100
+                    (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)))/100 + (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))*(theta_8 - 1/25) - (cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4))))/100
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)))/100 + (theta_8 - 1/25)*(cos(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) + sin(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))) - (cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5)))/100
+                    (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/100 - (cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2))))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + sin(theta_5)*sin(theta_7)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))))/100 - (cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/100
+                    (theta_8 - 1/25)*(cos(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_5)*sin(theta_7)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + (sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 + (cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/100
+                    (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100
+                    (cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/100 - (theta_8 - 1/25)*(sin(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))) - (cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    - (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))*(theta_8 - 1/25)
+                    (sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + cos(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))*(theta_8 - 1/25)
+                    - (sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - cos(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))*(theta_8 - 1/25)
+                    (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))*(theta_8 - 1/25)
+                    (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))*(theta_8 - 1/25) - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))];
+        end
+    case 8
+        switch contact_index
+            case 1
+                dJA_finger = zeros(24,1);
+            case 2
+                dJA_finger = zeros(24,1);
+            case 3
+                dJA_finger = zeros(24,1);
+            case 4
+                dJA_finger = zeros(24,1);
+            case 5
+                dJA_finger = [- cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    0
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    0
+                    0
+                    0];
+            case 6
+                dJA_finger = [ - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    0
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    0
+                    0
+                    0];
+            case 7
+                dJA_finger = [ - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    0
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    0
+                    0
+                    0];
+            case 8
+                dJA_finger = [ - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    0
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_1)*cos(theta_5)*sin(theta_2)*sin(theta_3)) - sin(theta_7)*(sin(theta_6)*(cos(theta_1)*cos(theta_2)*cos(theta_4) + cos(theta_1)*cos(theta_3)*sin(theta_2)*sin(theta_4)) - cos(theta_6)*(cos(theta_5)*(cos(theta_1)*cos(theta_2)*sin(theta_4) - cos(theta_1)*cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)))
+                    cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) - cos(theta_5)*sin(theta_1)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_1)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_1)*sin(theta_2)) + sin(theta_1)*sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4)*sin(theta_1) + cos(theta_3)*sin(theta_1)*sin(theta_2)*sin(theta_4)))
+                    - cos(theta_7)*(sin(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) + cos(theta_2)*cos(theta_5)*sin(theta_3)) - sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(sin(theta_2)*sin(theta_4) + cos(theta_2)*cos(theta_3)*cos(theta_4)) - cos(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_4)*sin(theta_2) - cos(theta_2)*cos(theta_3)*sin(theta_4)))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_4)*cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_4)*sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + cos(theta_4)*sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(cos(theta_6)*(sin(theta_5)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_4)*sin(theta_6)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    sin(theta_7)*(cos(theta_6)*(cos(theta_3)*sin(theta_2)*sin(theta_5) + cos(theta_4)*cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_2)*sin(theta_3)*sin(theta_4)*sin(theta_6)) - cos(theta_7)*(cos(theta_3)*cos(theta_5)*sin(theta_2) - cos(theta_4)*sin(theta_2)*sin(theta_3)*sin(theta_5))
+                    cos(theta_7)*sin(theta_5)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))) - cos(theta_7)*sin(theta_5)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2))
+                    sin(theta_7)*(sin(theta_6)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + cos(theta_5)*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) + cos(theta_7)*sin(theta_5)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))
+                    cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - cos(theta_6)*sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    -sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    sin(theta_7)*(cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))
+                    -sin(theta_7)*(sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))
+                    sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))
+                    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))
+                    cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))) - sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3))
+                    0
+                    0
+                    0];
+        end
+%     case 9
+%         dJA_finger = [];
+end
\ No newline at end of file
diff --git a/drake/examples/KukaArm/dJB_finger_obj_ori_analytical.m b/drake/examples/KukaArm/dJB_finger_obj_ori_analytical.m
new file mode 100644
index 000000000..714425c73
--- /dev/null
+++ b/drake/examples/KukaArm/dJB_finger_obj_ori_analytical.m
@@ -0,0 +1,9 @@
+function dJB_finger_obj_ori = dJB_finger_obj_ori_analytical(q,xB_x,xB_y,xB_z)
+theta_1 = q(1);theta_2 = q(2);theta_3 = q(3);theta_4 = q(4);theta_5 = q(5);theta_6 = q(6);theta_7 = q(7);theta_8 = q(8);
+obj_x = q(9); obj_y = q(10); obj_z = q(11); obj_yaw = q(12); obj_pitch = q(13); obj_roll = q(14);
+
+dJB_finger_obj_ori = [ xB_y*(sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch)) + xB_z*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)), cos(obj_yaw)*cos(obj_roll)*cos(obj_pitch)*xB_z - cos(obj_roll)*sin(obj_pitch)*xB_x + cos(obj_roll)*cos(obj_pitch)*sin(obj_yaw)*xB_y, xB_z*(cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - xB_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - cos(obj_pitch)*sin(obj_roll)*xB_x;
+    - xB_y*(cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - xB_z*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)), cos(obj_yaw)*cos(obj_pitch)*sin(obj_roll)*xB_z - sin(obj_roll)*sin(obj_pitch)*xB_x + cos(obj_pitch)*sin(obj_yaw)*sin(obj_roll)*xB_y, xB_z*(sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch)) - xB_y*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + cos(obj_roll)*cos(obj_pitch)*xB_x;
+    cos(obj_yaw)*cos(obj_pitch)*xB_y - cos(obj_pitch)*sin(obj_yaw)*xB_z,                                                           - cos(obj_pitch)*xB_x - cos(obj_yaw)*sin(obj_pitch)*xB_z - sin(obj_yaw)*sin(obj_pitch)*xB_y,                                                                                                                                                                                                                                                                                           0];
+
+end
\ No newline at end of file
diff --git a/drake/examples/KukaArm/dJB_fr1_theta1_theta1_func_compose.m b/drake/examples/KukaArm/dJB_fr1_theta1_theta1_func_compose.m
new file mode 100644
index 000000000..4431da17b
--- /dev/null
+++ b/drake/examples/KukaArm/dJB_fr1_theta1_theta1_func_compose.m
@@ -0,0 +1,72 @@
+function dJB_fr1_theta1_theta1 = dJB_fr1_theta1_theta1_func_compose(kinsol,q)
+theta_1 = q(1);theta_2 = q(2);theta_3 = q(3);theta_4 = q(4);theta_5 = q(5);theta_6 = q(6);theta_7 = q(7);theta_8 = q(8);
+obj_x = q(9); obj_y = q(10); obj_z = q(11); obj_yaw = q(12); obj_pitch = q(13); obj_roll = q(14);
+
+tic
+J_fr1_theta_1 = [(407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+ (21*cos(theta_1)*sin(theta_2))/50 + (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;

+
+dJ_fr1_theta_1_theta_1 = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+ (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   0];
+
+fr1 = [(21*cos(theta_1)*sin(theta_2))/50 + (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+ (21*sin(theta_1)*sin(theta_2))/50 - (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 + (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
cos(theta_2))/50 + (2*cos(theta_2)*cos(theta_4))/5 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 + 9/25];
+fr1x = fr1(1);
+fr1y = fr1(2);
+fr1z = fr1(3);
+toc
+
+tic
+%this is JB_fr1_B_fr1orignial
+JB_fr1 = [                                                                                                                                                           (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch))^2 + (3*cos(obj_roll)^2*cos(obj_pitch)^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)), (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch))*(cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) + (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)), cos(obj_yaw)*cos(obj_pitch)*(sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch)) - (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2));
+ (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch))*(cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) + (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)),                                                                                                                                                           (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2 + (3*cos(obj_pitch)^2*sin(obj_roll)^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)), (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - cos(obj_yaw)*cos(obj_pitch)*(cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) + (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2));
+                                                                                                                                                       cos(obj_yaw)*cos(obj_pitch)*(sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch)) - (3*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)),                                                                                                                                                       (3*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - cos(obj_yaw)*cos(obj_pitch)*(cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)),                                                                                                                                                                                                                                 cos(obj_yaw)^2*cos(obj_pitch)^2 + (3*sin(obj_pitch)^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (3*cos(obj_pitch)^2*sin(obj_yaw)^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2))];
+
+toc
+tic
+dright_normal1_dfr1 = [                                                                                                                                                                                                                                                     ((2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (cos(obj_roll)*cos(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2),                                                                                                                                                                                                                                                     (cos(obj_pitch)*sin(obj_roll))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2) - ((2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)),                                                                                                                                                                                                                          ((2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - sin(obj_pitch)/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2);
+ ((2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2), (cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2) - ((2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)), (cos(obj_pitch)*sin(obj_yaw))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2) + ((2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2));

+
+
+ddright_normal1_ddfr1x = [                                                                                                                                                                                                                                                    ((2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (cos(obj_roll)*cos(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)
+ ((2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)

+
+
+dfr1_B_dright_normal = [ (3*cos(obj_roll)*cos(obj_pitch))/100, (3*cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))/100 - (3*cos(obj_yaw)*sin(obj_roll))/100, 0;
+ (3*cos(obj_pitch)*sin(obj_roll))/100, (3*cos(obj_yaw)*cos(obj_roll))/100 + (3*sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))/100, 0;
+              -(3*sin(obj_pitch))/100,                                                    (3*cos(obj_pitch)*sin(obj_yaw))/100, 0];
+ 
+new_value = dfr1_B_dright_normal*ddright_normal1_ddfr1x;
+toc
+tic
+JB_fr1_B_fr1x = [                                                                                                                                                          (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch))^2 + (3*cos(obj_roll)^2*cos(obj_pitch)^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2))
+ (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch))*(cos(obj_roll)*sin(obj_yaw) - cos(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) + (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2))
+                                                                                                                                                       cos(obj_yaw)*cos(obj_pitch)*(sin(obj_yaw)*sin(obj_roll) + cos(obj_yaw)*cos(obj_roll)*sin(obj_pitch)) - (3*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2))];
+
+toc
+
+tic
+dJB_fr1_B_fr1orignial1 = [                                                                                    (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_roll)^2*cos(obj_pitch)^2*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(2*cos(obj_roll)^2*cos(obj_pitch)^2 + 2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*cos(obj_roll)^2*cos(obj_pitch)^2 + 2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)), (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)^2*cos(obj_pitch)^2*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                    (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)^2*cos(obj_pitch)^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2));
+(3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*(2*cos(obj_roll)^2*cos(obj_pitch)^2 + 2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*cos(obj_roll)^2*cos(obj_pitch)^2 + 2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)), (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_pitch)^2*sin(obj_roll)^2*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2)/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)), (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_roll)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2));
+                                                                                                                                                                     (9*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*sin(obj_pitch)*(2*cos(obj_roll)^2*cos(obj_pitch)^2 + 2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*cos(obj_roll)^2*cos(obj_pitch)^2 + 2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)),                                                                                                                                (3*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                                                                                                                                                                                                     (3*sin(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)^2*sin(obj_yaw)^2*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*sin(obj_pitch)^2*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2))];
+
+toc
+
+dJB_fr1_B_fr1orignial2 = [ (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2)/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)^2*cos(obj_pitch)^2*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)), (9*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2 + 2*cos(obj_pitch)^2*sin(obj_roll)^2)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2 + 2*cos(obj_pitch)^2*sin(obj_roll)^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)), (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2));
+ (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_pitch)^2*sin(obj_roll)^2*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2)/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                    (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2)/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)^2*sin(obj_roll)^2*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2 + 2*cos(obj_pitch)^2*sin(obj_roll)^2)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2 + 2*cos(obj_pitch)^2*sin(obj_roll)^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                    (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)^2*sin(obj_roll)^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2));
+                                                                                                                                (3*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - 2*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                                                                                                     (9*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2 + 2*cos(obj_pitch)^2*sin(obj_roll)^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))^2*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2 + 2*cos(obj_pitch)^2*sin(obj_roll)^2)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)),                                                                                                                                                                                                                                                                     (3*sin(obj_pitch)^2*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*sin(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)^2*sin(obj_yaw)^2*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2))];
+ 
+dJB_fr1_B_fr1orignial3 = [                                                                                    (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)^2*cos(obj_pitch)^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)), (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (9*cos(obj_roll)*cos(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)), (9*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))^2*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)^2 + 2*cos(obj_pitch)^2*sin(obj_yaw)^2)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_roll)*cos(obj_pitch)*(2*sin(obj_pitch)^2 + 2*cos(obj_pitch)^2*sin(obj_yaw)^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_roll)*cos(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2));
+ (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_roll)*cos(obj_pitch)^2*sin(obj_roll)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_roll)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                    (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)^2*sin(obj_roll)^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (9*cos(obj_pitch)*sin(obj_roll)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)), (3*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)^2 + 2*cos(obj_pitch)^2*sin(obj_yaw)^2)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))^2*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_roll)*(2*sin(obj_pitch)^2 + 2*cos(obj_pitch)^2*sin(obj_yaw)^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_roll)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2));
+                                                                                                                                                                                                                                                                     (3*sin(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)^2*sin(obj_yaw)^2*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*sin(obj_pitch)^2*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + 2*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*sin(obj_pitch)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_roll)*cos(obj_pitch)*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                                                                                                                                                                                                     (3*sin(obj_pitch)^2*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*sin(obj_pitch)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)^2*sin(obj_yaw)^2*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*cos(obj_pitch)*sin(obj_yaw)*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - 2*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*sin(obj_pitch)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) + (3*cos(obj_pitch)*sin(obj_roll)*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (9*cos(obj_pitch)*sin(obj_yaw)*(2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)),                                                                                                                                                                                                                       (9*sin(obj_pitch)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))^2*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2)) - (3*sin(obj_pitch)*(2*sin(obj_pitch)^2 + 2*cos(obj_pitch)^2*sin(obj_yaw)^2)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*sin(obj_pitch)^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (3*cos(obj_pitch)^2*sin(obj_yaw)^2*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))))/(100*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (3*cos(obj_pitch)*sin(obj_yaw)*(2*sin(obj_pitch)^2 + 2*cos(obj_pitch)^2*sin(obj_yaw)^2)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(200*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (9*cos(obj_pitch)*sin(obj_yaw)*(2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))^2*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(400*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(5/2))];
+
+
+toc
+dJB_fr1_theta1_theta1 = JB_fr1*dJ_fr1_theta_1_theta_1 ...
+    + [dJB_fr1_B_fr1orignial1*J_fr1_theta_1,dJB_fr1_B_fr1orignial2*J_fr1_theta_1,dJB_fr1_B_fr1orignial3*J_fr1_theta_1]*J_fr1_theta_1;
+end
\ No newline at end of file
diff --git a/drake/examples/KukaArm/dJB_new.m b/drake/examples/KukaArm/dJB_new.m
new file mode 100644
index 000000000..0d75e640f
--- /dev/null
+++ b/drake/examples/KukaArm/dJB_new.m
@@ -0,0 +1,42 @@
+function ddJB_new = dJB_new(q)
+theta_1 = q(1);theta_2 = q(2);theta_3 = q(3);theta_4 = q(4);theta_5 = q(5);theta_6 = q(6);theta_7 = q(7);theta_8 = q(8);
+obj_x = q(9); obj_y = q(10); obj_z = q(11); obj_yaw = q(12); obj_pitch = q(13); obj_roll = q(14);
+
+J_fr1_theta_1 = [(407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+ (21*cos(theta_1)*sin(theta_2))/50 + (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;

+
+dJ_fr1_theta_1_theta_1 = [(cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 - (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (21*cos(theta_1)*sin(theta_2))/50 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+ (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (21*sin(theta_1)*sin(theta_2))/50 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 + (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;

+
+fr1 = [(21*cos(theta_1)*sin(theta_2))/50 + (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+ (21*sin(theta_1)*sin(theta_2))/50 - (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 + (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
cos(theta_2))/50 + (2*cos(theta_2)*cos(theta_4))/5 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 + 9/25];
+fr1x = fr1(1);
+fr1y = fr1(2);
+fr1z = fr1(3);
+
+tic
+dfr1_B_dright_normal = [ (3*cos(obj_roll)*cos(obj_pitch))/100, (3*cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))/100 - (3*cos(obj_yaw)*sin(obj_roll))/100, 0;
+ (3*cos(obj_pitch)*sin(obj_roll))/100, (3*cos(obj_yaw)*cos(obj_roll))/100 + (3*sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))/100, 0;
+              -(3*sin(obj_pitch))/100,                                                    (3*cos(obj_pitch)*sin(obj_yaw))/100, 0];
+ 
+dvecAdx = 0;
+
+ddright_normal1_ddfr1x = [                                                                                                                                                                                                                                                    ((2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) + (cos(obj_roll)*cos(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2);
+ ((2*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) - 2*cos(obj_roll)*cos(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - (cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2);

+
+ddright_normal1_ddfr1y = [                                                                                                                                                                                                                                                    (cos(obj_pitch)*sin(obj_roll))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2) - ((2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2))
+ (cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2) - ((2*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)) + 2*cos(obj_pitch)*sin(obj_roll)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2))

+
+
+ddright_normal1_ddfr1z = [                                                                                                                                                                                                                          ((2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2)) - sin(obj_pitch)/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2)
+ (cos(obj_pitch)*sin(obj_yaw))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2) + ((2*sin(obj_pitch)*(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll)) - 2*cos(obj_pitch)*sin(obj_yaw)*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))*(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw)))/(2*((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(3/2))

+];
+ddJB_new = [dfr1_B_dright_normal*ddright_normal1_ddfr1x, dfr1_B_dright_normal*ddright_normal1_ddfr1y, dfr1_B_dright_normal*ddright_normal1_ddfr1z]*J_fr1_theta_1;
+toc
+end
diff --git a/drake/examples/KukaArm/df_nonpar1.dat b/drake/examples/KukaArm/df_nonpar1.dat
deleted file mode 100644
index 379c620e5..000000000
--- a/drake/examples/KukaArm/df_nonpar1.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-   0.0000000e+00   1.0020031e+00  -1.5189282e-02   2.9430134e-02   4.2505667e-04  -3.3800673e-03  -6.7347788e-04  -2.2891476e-03   5.3997420e-03   3.8674527e-03  -5.0347493e-03   2.1102436e-02   1.6360357e-03  -6.5182063e-03   4.0429918e-04   2.6550116e-02  -4.0550696e-03   1.1665603e-02   5.7784529e-04  -1.2038039e-03  -1.7383656e-04   7.9736775e-05   1.9581787e-04  -2.7079534e-03  -6.1484980e-04  -7.4443167e-04   4.3891346e-05  -8.3176261e-05  -5.3922901e-06   2.7083656e-03  -3.0145657e-04  -1.3521319e-03  -4.0102289e-05   6.5154683e-04  -1.4434871e-04  -1.9406496e-04  -2.5872044e-04
-   0.0000000e+00  -1.2745808e-03   1.0316979e+00   1.0682109e-02  -3.0211651e-03   1.6838915e-03  -7.5691266e-04   1.5814030e-03  -6.6278644e-03  -1.8215880e-03   8.6762071e-04  -4.6229947e-03  -1.5113884e-04   4.9125313e-04  -1.7037286e-04  -6.1663032e-03   1.3556456e-02  -2.5751830e-03  -4.9814665e-04   2.9604194e-04   8.2584164e-04   1.6462248e-04  -1.3573662e-04   1.7309669e-03  -4.5985443e-04   7.8118121e-04  -6.2906505e-06   5.6067344e-05   7.7805955e-06  -3.0734937e-04   1.4256894e-03  -4.4423091e-04   1.3322356e-03  -7.8262693e-05  -8.8941066e-04  -3.1853063e-04  -2.2873990e-04
-   0.0000000e+00   3.9304869e-03   8.5099186e-03   9.2535741e-01  -1.5033391e-02   9.5748364e-03  -9.9374818e-03   2.0441419e-03  -7.3389706e-03   5.8982301e-03  -7.7805648e-03  -5.1943357e-03   3.0850249e-04  -2.6196594e-03   1.8800174e-04   3.9571711e-03  -5.9901308e-03   3.9604396e-03   1.7852409e-03  -5.4473967e-04  -2.8961113e-04   2.7561984e-04   7.0116929e-05  -9.5349288e-04  -3.6104205e-04  -2.4189665e-04   2.1907749e-05  -2.8590822e-05  -2.4877434e-06  -1.3375041e-03  -4.3293434e-04   3.5192879e-03   6.9121869e-05   2.2439205e-04  -1.6173565e-04  -5.3078173e-04  -3.4705883e-04
-   0.0000000e+00  -7.3854623e-03   7.7347359e-02  -6.3055208e-03   9.4407962e-01   4.3180273e-03  -2.6843593e-04  -2.9788394e-03  -2.0648522e-02  -4.0946953e-03   8.4669780e-03   1.2280757e-02   9.5417000e-03   1.1395376e-03   2.8505531e-03   1.6832392e-03   1.2429082e-03   1.0962988e-03   8.8117929e-03  -2.4902700e-04  -4.5489004e-04  -6.9835664e-05   1.9285473e-05   2.6920307e-04  -3.2632660e-03   6.4864208e-05   1.4327899e-04   1.0732651e-05  -8.2645150e-06  -5.4786170e-05   1.3278067e-03   4.7880712e-05   3.9877319e-03   1.2445470e-04   3.9568369e-04   1.2329666e-04   1.7143892e-04
-   0.0000000e+00  -1.5928279e-01   4.6755536e-01   3.7841856e-02  -1.9689273e-01   1.2005265e+00   1.3560739e-01   1.3327672e-01   1.1722027e-01   1.0005831e-02   1.1221506e-02  -6.5799857e-01  -1.2949147e-02   9.2657474e-03  -4.2434274e-03   2.1947778e-02   3.4888374e-03   1.1020906e-02  -6.1006145e-04  -2.4852584e-03  -3.6678735e-05  -4.7595348e-05  -1.9481582e-04   2.8423799e-03   2.0903882e-04   8.9128151e-04  -2.9855984e-05   8.7786723e-05   6.1950874e-06   1.4225055e-03   3.2396957e-04   9.4653768e-04   3.6664948e-04   3.9754365e-03   1.0371729e-04   1.4018716e-04  -1.6980177e-03
-   0.0000000e+00  -1.4380892e-02   9.5371848e-02  -5.7367951e-02  -9.1811909e-02  -3.8077801e-03   1.0682066e+00   1.3221371e-01   4.3339299e-02   1.0528353e-03   4.4177312e-05  -4.7199609e-02   1.5081583e-03   1.0890862e-03   2.5596040e-04  -1.6107578e-03  -1.1665471e-02  -1.4063868e-03   3.9004661e-03   3.1579934e-05  -2.3829568e-03   4.3633064e-05  -7.2368005e-05   9.4397387e-04  -1.0032588e-03   4.1788173e-04   2.9956376e-05   3.1110861e-05   2.4185960e-06  -9.8225786e-05  -8.6629081e-04  -1.2123680e-04   4.1560744e-04  -1.2107883e-05   4.6026083e-03  -9.1987224e-05  -1.8278200e-04
-   0.0000000e+00   7.9321382e-02   6.1561658e-01  -7.8646161e-01  -6.5535632e-01  -3.6306766e-01   6.0397081e-01   1.4887376e-01  -2.8565893e-01   1.2686328e-03  -3.2293740e-03   5.7629317e-02   1.3808230e-03   1.8697802e-03   4.7387262e-04  -7.2834323e-03  -5.8577136e-03  -4.1686767e-03   1.9768915e-03   3.8552470e-04  -1.2345192e-04  -2.2189233e-03  -9.5481063e-05   1.1920390e-03  -2.1277885e-04   4.0221043e-04  -2.5704942e-06   3.8503410e-05   2.9930131e-06  -2.8663711e-04  -3.7186128e-04  -6.2532251e-04   1.1180634e-04  -9.2372628e-05  -1.2132545e-04   4.4840527e-03   5.6373202e-05
-   0.0000000e+00   1.8728783e-04  -3.1517723e-05  -4.5073915e-05  -1.3420205e-04  -4.5155029e-06   3.6810263e-05  -4.8406325e-06   9.9887477e-01  -2.2007910e-04  -7.3199092e-04   4.3499402e-05  -1.8849105e-05   7.1708408e-06  -3.3448719e-06  -1.3709098e-09  -9.9007681e-10  -1.4890399e-09  -4.5086581e-10  -2.0113700e-09   1.3277292e-09   3.3903449e-08  -1.0032727e-09  -8.3480265e-10  -4.4040839e-09   2.9049201e-09   1.4415835e-10   2.3915888e-11   7.1172462e-11  -1.5511554e-11  -1.2209998e-11   3.5387902e-10  -4.2821035e-10   5.1528434e-09  -3.6764443e-09  -6.8775870e-08  -3.1373909e-09
-   0.0000000e+00   1.1671694e-02  -3.9694621e-02   1.2336681e-03   2.4578458e-02  -1.7509325e-02  -1.1669425e-02  -1.0400332e-02  -4.2479223e-02   9.9418775e-01   5.2926926e-03   5.5029572e-02  -1.9263685e-04   4.7838628e-03   3.4042409e-04  -1.0569266e-02   4.7685493e-03  -5.0886348e-03  -1.0745733e-03   3.9836288e-04   1.6893482e-04  -1.4761167e-04  -1.7681075e-04   2.5449194e-03   3.2102062e-04   6.4522766e-04  -2.5602392e-05   7.6152515e-05   2.3761096e-06  -6.7160264e-04   3.5352634e-04  -2.8211032e-04   3.9727501e-05   1.4823217e-04   1.7410231e-04   3.1435653e-04  -1.8714500e-04
-   0.0000000e+00   1.2676173e-02  -4.3686511e-02   1.0298747e-03   2.4778263e-02  -1.4221833e-02  -8.2657667e-03  -7.8653044e-03  -2.8198238e-02  -1.1168677e-03   9.9901058e-01   3.8404926e-02  -1.8962105e-03  -5.7727224e-04  -5.2245881e-04  -3.6537967e-03   1.3776393e-03  -1.8339977e-03  -2.0450288e-03   9.3688375e-05   2.2693365e-04   4.2745796e-05  -1.7598848e-05   1.2276126e-04   9.6494412e-04   5.8084664e-05  -4.3341758e-05   3.8264853e-06   3.4439625e-06  -1.8521624e-04  -1.2697640e-04  -1.2058992e-04  -7.4736106e-04   2.1962346e-04  -2.1830208e-04  -7.9134090e-05   1.2799255e-04
-   0.0000000e+00   3.3494613e-03   4.9210856e-02   9.1295611e-03  -1.8492773e-02  -1.9828648e-03   1.4433398e-02   9.1960830e-03  -1.2125141e-02  -3.6009389e-03   7.0530577e-03   9.2757313e-01   1.7054072e-03  -4.4822761e-03  -1.2255522e-03  -3.0355004e-03   1.8198628e-03  -1.4509278e-03  -8.0184742e-04   1.1512770e-04   9.7127720e-05  -3.0471816e-05  -4.7406299e-05   5.6803205e-04   2.8805573e-04   2.2021911e-04  -2.0832375e-05   1.8315302e-05   3.3825985e-06  -1.8390412e-04   8.4477886e-05  -8.3679852e-05  -1.4941764e-04   5.4741624e-05   7.4638949e-06   6.7835087e-05  -4.6213103e-05
-   0.0000000e+00  -1.0495169e-01  -1.5050477e+00  -2.7783727e-01   5.6483339e-01   6.1222379e-02  -4.4126217e-01  -2.8099337e-01   3.7094984e-01   1.1067882e-01  -2.1712014e-01   2.2137231e+00   1.1267563e+00  -1.1604426e-01   3.7471204e-02   9.2777971e-02  -5.5622856e-02   4.4346601e-02   2.4507914e-02  -3.5188006e-03  -2.9686418e-03   9.3142651e-04   1.4489314e-03  -1.7361509e-02  -8.8042215e-03  -6.7308340e-03   6.3672817e-04  -5.5979599e-04  -1.0338739e-04   5.6209031e-03  -2.5820085e-03   2.5576170e-03   4.5668467e-03  -1.6731332e-03  -2.2812983e-04  -2.0734876e-03   1.4124318e-03
-   0.0000000e+00   1.0209051e-01   1.5048269e+00   2.7674332e-01  -5.6539094e-01  -6.0711411e-02   4.4121238e-01   2.8105591e-01  -3.7068995e-01  -1.0977580e-01   2.1608347e-01  -2.2134130e+00  -1.2965534e-01   1.1153946e+00  -3.7491428e-02  -9.2772860e-02   5.5619780e-02  -4.4344161e-02  -2.4506559e-02   3.5186013e-03   2.9684872e-03  -9.3135723e-04  -1.4488548e-03   1.7360538e-02   8.8037320e-03   6.7304935e-03  -6.3669330e-04   5.5976418e-04   1.0338117e-04  -5.6205929e-03   2.5818663e-03  -2.5574758e-03  -4.5665950e-03   1.6730561e-03   2.2809434e-04   2.0733369e-03  -1.4123658e-03
-   0.0000000e+00  -5.8818388e+00  -3.1131631e+00  -4.2624520e+00   5.3440044e+00   4.5275671e-01  -1.0211463e-01  -8.3900447e-02  -1.1136062e+01  -9.6332679e+00   1.3532769e+01  -3.4843687e-01  -3.4476730e-02  -1.3588972e-01   9.6908925e-01  -8.7912499e-02   1.0281673e-01  -3.9693761e-02  -4.4008864e-02   4.4445675e-03   4.8205081e-03  -1.3985667e-03  -2.0961729e-03   1.6094552e-02   1.4297767e-02   1.1569377e-02  -1.4279215e-03   6.1277168e-04   3.8028390e-04  -5.2149962e-03   5.0398346e-03  -2.3458757e-03  -7.3925061e-03  -6.9587756e-04   7.0056532e-04   3.1455707e-03  -5.3739128e-03
-   0.0000000e+00   9.0231656e-03  -6.8420191e-02   1.3256817e-01   1.9146697e-03  -1.5225529e-02  -3.0336841e-03  -1.0311476e-02   2.4323162e-02   1.7420958e-02  -2.2679051e-02   9.5056016e-02   7.3695300e-03  -2.9361290e-02   1.8211675e-03   1.1959512e-01  -1.8266079e-02   5.2547763e-02   2.6029067e-03  -5.4225400e-03  -7.8304757e-04   3.5917466e-04   8.8206248e-04  -1.2197988e-02  -2.7695937e-03  -3.3532958e-03   1.9770877e-04  -3.7466784e-04  -2.4289595e-05   1.2199845e-02  -1.3579125e-03  -6.0906841e-03  -1.8064094e-04   2.9348956e-03  -6.5021942e-04  -8.7416650e-04  -1.1654074e-03
-   0.0000000e+00  -5.7413551e-03   1.4278324e-01   4.8117609e-02  -1.3608852e-02   7.5850967e-03  -3.4095165e-03   7.1234368e-03  -2.9855245e-02  -8.2053515e-03   3.9082014e-03  -2.0824300e-02  -6.8080557e-04   2.2128520e-03  -7.6744533e-04  -2.7776140e-02   6.1065115e-02  -1.1599923e-02  -2.2439038e-03   1.3335222e-03   3.7200074e-03   7.4154272e-04  -6.1142621e-04   7.7971480e-03  -2.0714164e-03   3.5188343e-03  -2.8336263e-05   2.5255561e-04   3.5047727e-05  -1.3844566e-03   6.4220245e-03  -2.0010401e-03   6.0010612e-03  -3.5253465e-04  -4.0063543e-03  -1.4348226e-03  -1.0303599e-03
-   0.0000000e+00   1.7704896e-02   3.8332967e-02  -3.3622787e-01  -6.7717980e-02   4.3129894e-02  -4.4763432e-02   9.2078465e-03  -3.3058426e-02   2.6568604e-02  -3.5047589e-02  -2.3397909e-02   1.3896509e-03  -1.1800268e-02   8.4685467e-04   1.7825095e-02  -2.6982571e-02   1.7839818e-02   8.0416255e-03  -2.4537823e-03  -1.3045546e-03   1.2415308e-03   3.1584202e-04  -4.2950130e-03  -1.6263155e-03  -1.0896245e-03   9.8683554e-05  -1.2878749e-04  -1.1206051e-05  -6.0247933e-03  -1.9501547e-03   1.5852648e-02   3.1135977e-04   1.0107750e-03  -7.2853897e-04  -2.3909087e-03  -1.5633281e-03
-   0.0000000e+00  -3.3267848e-02   3.4841153e-01  -2.8403247e-02  -2.5189361e-01   1.9450573e-02  -1.2091708e-03  -1.3418195e-02  -9.3011359e-02  -1.8444573e-02   3.8139541e-02   5.5318726e-02   4.2980630e-02   5.1330525e-03   1.2840329e-02   7.5821586e-03   5.5986854e-03   4.9382830e-03   3.9692761e-02  -1.1217433e-03  -2.0490542e-03  -3.1457506e-04   8.6871499e-05   1.2126264e-03  -1.4699397e-02   2.9218112e-04   6.4540085e-04   4.8345276e-05  -3.7227545e-05  -2.4678455e-04   5.9811112e-03   2.1567888e-04   1.7962756e-02   5.6060674e-04   1.7823589e-03   5.5539037e-04   7.7224737e-04
-   0.0000000e+00  -7.1749005e-01   2.1061052e+00   1.7045881e-01  -8.8690420e-01   9.0327233e-01   6.1084410e-01   6.0034557e-01   5.2801926e-01   4.5071309e-02   5.0547322e-02  -2.9639575e+00  -5.8329490e-02   4.1737601e-02  -1.9114538e-02   9.8863864e-02   1.5715484e-02   4.9643721e-02  -2.7480246e-03  -1.1194858e-02  -1.6521953e-04  -2.1439346e-04  -8.7754872e-04   1.2803513e-02   9.4161630e-04   4.0147816e-03  -1.3448641e-04   3.9543569e-04   2.7905799e-05   6.4076822e-03   1.4593224e-03   4.2636832e-03   1.6515743e-03   1.7907372e-02   4.6719498e-04   6.3147369e-04  -7.6487283e-03
-   0.0000000e+00  -6.4778792e-02   4.2960292e-01  -2.5841419e-01  -4.1356716e-01  -1.7152163e-02   3.0723708e-01   5.9555726e-01   1.9522207e-01   4.7425015e-03   1.9899690e-04  -2.1261085e-01   6.7935059e-03   4.9057937e-03   1.1529748e-03  -7.2556655e-03  -5.2547167e-02  -6.3350758e-03   1.7569667e-02   1.4225195e-04  -1.0734040e-02   1.9654533e-04  -3.2598200e-04   4.2521345e-03  -4.5191838e-03   1.8823502e-03   1.3493863e-04   1.4013901e-04   1.0894577e-05  -4.4245850e-04  -3.9022108e-03  -5.4611172e-04   1.8721056e-03  -5.4540014e-05   2.0732470e-02  -4.1435686e-04  -8.2334235e-04
-   0.0000000e+00   3.5730352e-01   2.7730477e+00  -3.5426199e+00  -2.9520555e+00  -1.6354399e+00   2.7205892e+00  -3.8339020e+00  -1.2867519e+00   5.7145623e-03  -1.4546730e-02   2.5959152e-01   6.2199236e-03   8.4224333e-03   2.1345614e-03  -3.2808254e-02  -2.6386097e-02  -1.8777823e-02   8.9049167e-03   1.7365977e-03  -5.5608973e-04  -9.9951501e-03  -4.3009488e-04   5.3695449e-03  -9.5846328e-04   1.8117587e-03  -1.1578803e-05   1.7343878e-04   1.3482041e-05  -1.2911581e-03  -1.6750508e-03  -2.8167681e-03   5.0363217e-04  -4.1609292e-04  -5.4651105e-04   2.0198436e-02   2.5393334e-04
-   0.0000000e+00   8.4363889e-04  -1.4197173e-04  -2.0303565e-04  -6.0451375e-04  -2.0340103e-05   1.6581199e-04  -2.1804651e-05  -5.0685947e-03  -9.9134730e-04  -3.2972564e-03   1.9594325e-04  -8.4905877e-05   3.2301085e-05  -1.5066991e-05  -6.1752695e-09  -4.4598055e-09  -6.7073869e-09  -2.0309271e-09  -9.0602252e-09   5.9807624e-09   1.5271824e-07  -4.5192462e-09  -3.7603723e-09  -1.9838216e-08   1.3085226e-08   6.4936194e-10   1.0772922e-10   3.2059667e-10  -6.9871867e-11  -5.4999989e-11   1.5940496e-09  -1.9288755e-09   2.3211006e-08  -1.6560560e-08  -3.0980122e-07  -1.4132391e-08
-   0.0000000e+00   5.2575200e-02  -1.7880460e-01   5.5570633e-03   1.1071377e-01  -7.8870834e-02  -5.2564979e-02  -4.6848344e-02  -1.9134785e-01  -2.6181289e-02   2.3840958e-02   2.4788095e-01  -8.6773357e-04   2.1548932e-02   1.5334419e-03  -4.7609305e-02   2.1479952e-02  -2.2921778e-02  -4.8404202e-03   1.7944274e-03   7.6096766e-04  -6.6491745e-04  -7.9644484e-04   1.1463601e-02   1.4460388e-03   2.9064309e-03  -1.1532609e-04   3.4302935e-04   1.0703196e-05  -3.0252371e-03   1.5924610e-03  -1.2707672e-03   1.7895271e-04   6.6771247e-04   7.8424463e-04   1.4160204e-03  -8.4299552e-04
-   0.0000000e+00   5.7099879e-02  -1.9678609e-01   4.6390751e-03   1.1161380e-01  -6.4062309e-02  -3.7233184e-02  -3.5429299e-02  -1.2701909e-01  -5.0309356e-03  -4.4568412e-03   1.7299516e-01  -8.5414886e-03  -2.6003254e-03  -2.3534181e-03  -1.6458544e-02   6.2055825e-03  -8.2612509e-03  -9.2118416e-03   4.2201971e-04   1.0222236e-03   1.9254863e-04  -7.9274091e-05   5.5297864e-04   4.3465951e-03   2.6164263e-04  -1.9523314e-04   1.7236420e-05   1.5513344e-05  -8.3430740e-04  -5.7196577e-04  -5.4319784e-04  -3.3664913e-03   9.8929484e-04  -9.8334271e-04  -3.5645987e-04   5.7654301e-04
-   0.0000000e+00   1.5087663e-02   2.2167052e-01   4.1124149e-02  -8.3300778e-02  -8.9318236e-03   6.5015306e-02   4.1423797e-02  -5.4617753e-02  -1.6220446e-02   3.1770530e-02  -3.2624718e-01   7.6820145e-03  -2.0190433e-02  -5.5205054e-03  -1.3673425e-02   8.1975804e-03  -6.5357107e-03  -3.6119253e-03   5.1859326e-04   4.3751225e-04  -1.3726043e-04  -2.1354189e-04   2.5587029e-03   1.2975483e-03   9.9197799e-04  -9.3839526e-05   8.2501359e-05   1.5236930e-05  -8.2839695e-04   3.8053102e-04  -3.7693627e-04  -6.7305245e-04   2.4658389e-04   3.3621148e-05   3.0556346e-04  -2.0816713e-04
-   0.0000000e+00  -4.7275536e-01  -6.7794941e+00  -1.2515192e+00   2.5442946e+00   2.7577648e-01  -1.9876674e+00  -1.2657359e+00   1.6709452e+00   4.9855324e-01  -9.7801864e-01   9.9717255e+00   5.7097446e-01  -5.2272190e-01   1.6878921e-01   4.1791879e-01  -2.5055341e-01   1.9975947e-01   1.1039601e-01  -1.5850453e-02  -1.3372260e-02   4.1956149e-03   6.5267179e-03  -7.8204997e-02  -3.9658656e-02  -3.0319072e-02   2.8681449e-03  -2.5216036e-03  -4.6570897e-04   2.5319383e-02  -1.1630669e-02   1.1520797e-02   2.0571381e-02  -7.5366359e-03  -1.0276118e-03  -9.3400343e-03   6.3623056e-03
-   0.0000000e+00   4.5986718e-01   6.7784997e+00   1.2465915e+00  -2.5468061e+00  -2.7347483e-01   1.9874431e+00   1.2660176e+00  -1.6697746e+00  -4.9448558e-01   9.7334897e-01  -9.9703287e+00  -5.8403306e-01   5.1979554e-01  -1.6888030e-01  -4.1789577e-01   2.5053955e-01  -1.9974847e-01  -1.1038990e-01   1.5849555e-02   1.3371564e-02  -4.1953028e-03  -6.5263730e-03   7.8200622e-02   3.9656450e-02   3.0317538e-02  -2.8679878e-03   2.5214603e-03   4.6568093e-04  -2.5317986e-02   1.1630028e-02  -1.1520161e-02  -2.0570248e-02   7.5362890e-03   1.0274520e-03   9.3393556e-03  -6.3620083e-03
-   0.0000000e+00  -2.6494769e+01  -1.4023257e+01  -1.9200234e+01   2.4072092e+01   2.0394446e+00  -4.5997582e-01  -3.7792994e-01  -5.0162440e+01  -4.3393099e+01   6.0958420e+01  -1.5695354e+00  -1.5530059e-01  -6.1211584e-01  -1.3923763e-01  -3.9600225e-01   4.6313841e-01  -1.7880072e-01  -1.9823813e-01   2.0020574e-02   2.1714000e-02  -6.2998499e-03  -9.4422205e-03   7.2497982e-02   6.4404355e-02   5.2114310e-02  -6.4320790e-03   2.7602328e-03   1.7129905e-03  -2.3490974e-02   2.2701958e-02  -1.0567007e-02  -3.3299577e-02  -3.1345836e-03   3.1556996e-03   1.4169237e-02  -2.4206814e-02
diff --git a/drake/examples/KukaArm/df_nonpar10.dat b/drake/examples/KukaArm/df_nonpar10.dat
deleted file mode 100644
index 11cbc1617..000000000
--- a/drake/examples/KukaArm/df_nonpar10.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-   0.0000000e+00   1.0029462e+00  -1.5209927e-02   2.9708436e-02   4.2435362e-05  -3.5463733e-03  -1.0564129e-03  -2.4170173e-03   6.5429426e-03   5.0236336e-03  -5.6169953e-03   2.1645432e-02   1.6660281e-03  -6.5784117e-03   4.7089515e-04   2.6883962e-02  -4.2340749e-03   1.1827094e-02   6.5060389e-04  -1.2166918e-03  -1.8335507e-04   8.2104582e-05   2.0291313e-04  -2.7893680e-03  -6.2726603e-04  -7.8622479e-04   4.5234418e-05  -8.5951396e-05  -5.7263706e-06   2.7281020e-03  -3.1056637e-04  -1.3416291e-03  -2.7811484e-05   6.4566365e-04  -1.4526120e-04  -1.9947341e-04  -2.4573801e-04
-   0.0000000e+00  -1.0443957e-03   1.0316872e+00   1.1005031e-02  -2.9918307e-03   1.4697271e-03  -6.2590692e-04   1.7825447e-03  -6.8137246e-03  -1.8926581e-03   7.5525347e-04  -4.8232707e-03  -2.7430434e-04   4.0487777e-04  -2.4353406e-04  -6.3412140e-03   1.3562663e-02  -2.6662074e-03  -5.3122469e-04   3.0192986e-04   8.3090188e-04   1.6670092e-04  -1.3920513e-04   1.7605022e-03  -4.5089552e-04   8.0009867e-04  -6.7442001e-06   5.7102000e-05   7.8163292e-06  -3.1619699e-04   1.4218528e-03  -4.5219995e-04   1.3174264e-03  -7.1961322e-05  -8.9554736e-04  -3.2263188e-04  -2.3329483e-04
-   0.0000000e+00   3.7843914e-03   8.2133589e-03   9.2534624e-01  -1.5092462e-02   1.0437645e-02  -9.1764052e-03   2.0492238e-03  -5.1080068e-03   7.2589833e-03  -8.4097238e-03  -4.7715632e-03   2.9119012e-04  -2.6273325e-03   2.4514071e-04   4.1470967e-03  -6.0825719e-03   4.0532694e-03   1.8050964e-03  -5.5347025e-04  -2.9214817e-04   2.7679617e-04   7.3961928e-05  -1.0067576e-03  -3.7308107e-04  -2.6031204e-04   2.2511000e-05  -3.0330256e-05  -2.5152391e-06  -1.3266448e-03  -4.3992059e-04   3.5271880e-03   6.7846700e-05   2.2501804e-04  -1.6673216e-04  -5.3341068e-04  -3.4067981e-04
-   0.0000000e+00  -6.5040195e-03   7.6887908e-02  -6.2746507e-03   9.4392169e-01   2.9542371e-03  -5.2764449e-04  -3.3188520e-03  -2.2259832e-02  -4.8273838e-03   8.4632531e-03   1.3345644e-02   9.5139482e-03   1.0289516e-03   2.8053460e-03   1.8151421e-03   9.9800752e-04   1.1466485e-03   8.8913849e-03  -2.4784614e-04  -4.6514644e-04  -6.4706635e-05   2.0551107e-05   2.2944820e-04  -3.2431021e-03   4.1327076e-05   1.4181936e-04   9.2934230e-06  -8.0136559e-06  -4.3369733e-05   1.3123066e-03   4.2639897e-05   3.9935942e-03   1.0816125e-04   3.9478437e-04   1.1205791e-04   1.7052844e-04
-   0.0000000e+00  -1.7207524e-01   4.1800150e-01   2.4663078e-02  -1.7380880e-01   1.2078007e+00   1.1825346e-01   1.2209000e-01   1.1016212e-01   9.6108666e-03   7.1890420e-03  -5.8995713e-01  -1.2205205e-02   1.0511379e-02  -2.2410247e-03   2.0582829e-02   3.3847683e-03   1.0317426e-02  -3.9142633e-04  -2.4291701e-03  -4.5503658e-05  -4.8457776e-05  -1.9576336e-04   2.8878003e-03   2.0687319e-04   8.9951465e-04  -2.8156793e-05   8.9371959e-05   5.5939539e-06   1.3444951e-03   3.4061711e-04   8.7899257e-04   4.4057873e-04   3.9757892e-03   1.1953384e-04   1.4083880e-04  -1.6137363e-03
-   0.0000000e+00  -1.4043467e-02   9.0031349e-02  -4.8361144e-02  -8.9140356e-02  -1.0149440e-03   1.0643556e+00   1.2497758e-01   3.9645347e-02   8.7170290e-04  -1.5987522e-04  -4.0917337e-02   1.5567651e-03   1.1318959e-03   3.7737439e-04  -1.7702466e-03  -1.1780313e-02  -1.4961334e-03   3.9454681e-03   3.9055897e-05  -2.3857914e-03   4.6712124e-05  -7.2664562e-05   9.5004822e-04  -1.0027534e-03   4.1900441e-04   3.0076038e-05   3.1304732e-05   2.3520313e-06  -1.0553971e-04  -8.7268748e-04  -1.3303798e-04   4.2029877e-04  -1.3378281e-05   4.6001102e-03  -9.8653271e-05  -1.7274358e-04
-   0.0000000e+00   6.9251852e-02   6.2098309e-01  -6.6390527e-01  -6.5235785e-01  -3.0889890e-01   5.9581724e-01   2.8625729e-01  -2.0686465e-01   5.6559088e-05  -3.4610726e-03   3.3683883e-02   1.1431638e-03   2.1464170e-03   1.5865755e-04  -6.8888003e-03  -5.7438787e-03  -3.9601597e-03   1.9203781e-03   3.7135709e-04  -1.1862860e-04  -2.2211485e-03  -1.0154215e-04   1.2545376e-03  -2.3665996e-04   4.3590339e-04  -2.6522695e-06   4.0579313e-05   3.3672624e-06  -2.6511477e-04  -3.6668036e-04  -6.0417768e-04   1.0314678e-04  -9.6977126e-05  -1.2603754e-04   4.4891032e-03   2.8034750e-06
-   0.0000000e+00  -2.2319295e-04  -1.4201394e-04  -1.5868195e-04  -8.2880956e-05   3.9784092e-06  -6.7665558e-06  -4.5222925e-06   9.9956341e-01   1.2594034e-04   5.6292266e-04  -9.0119549e-06   1.0810508e-05   8.3755445e-05  -1.6107069e-06   1.1419561e-10  -2.3649878e-09  -4.0431684e-10   1.1847445e-09  -5.0825587e-11   1.4856372e-09   2.5631486e-08  -1.2664400e-10  -2.9083427e-10   7.3770996e-10   3.0383869e-09  -5.5591325e-11   8.8715028e-11  -1.9126556e-11   1.4358713e-11   6.1804115e-11  -3.8246680e-11   4.7574667e-11  -7.7929765e-11  -4.2298538e-09  -5.2053091e-08  -3.6155894e-11
-   0.0000000e+00   1.0589111e-02  -3.3440223e-02   2.0540604e-03   2.2175482e-02  -1.6594345e-02  -9.4319976e-03  -8.6865985e-03  -4.1069654e-02   9.9287412e-01   6.4265774e-03   4.6023851e-02  -3.9646717e-04   4.7240361e-03   9.4444991e-05  -1.0718644e-02   4.9348081e-03  -5.1573507e-03  -1.1512066e-03   4.0563543e-04   1.7709520e-04  -1.4922322e-04  -1.8423470e-04   2.6356303e-03   3.3757247e-04   6.8559849e-04  -2.7175536e-05   7.9120578e-05   2.6937514e-06  -6.8009306e-04   3.6093324e-04  -2.8616585e-04   2.5339558e-05   1.4903853e-04   1.7503596e-04   3.1822192e-04  -2.1330199e-04
-   0.0000000e+00   1.4354083e-02  -4.2726193e-02   1.7963337e-03   2.4215184e-02  -1.5699515e-02  -7.8073034e-03  -7.8649113e-03  -2.9831312e-02  -1.0304308e-03   9.9900853e-01   3.7402676e-02  -1.8381776e-03  -7.0652179e-04  -6.3220085e-04  -3.7009694e-03   1.3812712e-03  -1.8582891e-03  -2.0571968e-03   9.2995284e-05   2.2857445e-04   4.4119299e-05  -1.6785734e-05   1.2490148e-04   9.5856542e-04   5.8759472e-05  -4.2444453e-05   3.8880775e-06   3.1628830e-06  -1.8772596e-04  -1.2823017e-04  -1.2212130e-04  -7.5242404e-04   2.2655325e-04  -2.2024575e-04  -8.1869010e-05   1.3514269e-04
-   0.0000000e+00   3.2038126e-03   4.4638578e-02   8.3215219e-03  -1.6478810e-02  -2.3124406e-03   1.3281013e-02   8.3814343e-03  -1.2629807e-02  -3.9377016e-03   6.4892289e-03   9.3394518e-01   1.0436878e-03  -3.5969328e-03  -1.0362757e-03  -3.1009598e-03   1.8600831e-03  -1.4822337e-03  -8.1999155e-04   1.1676571e-04   9.9347617e-05  -3.0820436e-05  -4.9215213e-05   5.9144562e-04   2.8623197e-04   2.3058572e-04  -2.0663455e-05   1.9102119e-05   3.3325594e-06  -1.8790997e-04   8.6294218e-05  -8.5095493e-05  -1.5286628e-04   5.8235871e-05   7.4756063e-06   6.8709444e-05  -5.0493575e-05
-   0.0000000e+00  -9.8550465e-02  -1.3640723e+00  -2.5540317e-01   5.0518552e-01   7.1028776e-02  -4.0595525e-01  -2.5609683e-01   3.8592238e-01   1.2452078e-01  -2.0076430e-01   2.0187763e+00   1.1196031e+00  -1.1577765e-01   3.1715109e-02   9.4778704e-02  -5.6852157e-02   4.5303456e-02   2.5062475e-02  -3.5688576e-03  -3.0364921e-03   9.4198249e-04   1.5042233e-03  -1.8077143e-02  -8.7484701e-03  -7.0476955e-03   6.3156587e-04  -5.8384134e-04  -1.0185768e-04   5.7433387e-03  -2.6375235e-03   2.6008852e-03   4.6722517e-03  -1.7799528e-03  -2.2848457e-04  -2.1000103e-03   1.5432728e-03
-   0.0000000e+00   9.7584635e-02   1.3639627e+00   2.5479020e-01  -5.0451200e-01  -7.0685731e-02   4.0596148e-01   2.5605742e-01  -3.8562436e-01  -1.2300288e-01   1.9646643e-01  -2.0186320e+00  -1.2211086e-01   1.1151198e+00  -3.1685155e-02  -9.4773469e-02   5.6849026e-02  -4.5300952e-02  -2.5061094e-02   3.5686635e-03   3.0363174e-03  -9.4193115e-04  -1.5041392e-03   1.8076162e-02   8.7480115e-03   7.0473073e-03  -6.3152959e-04   5.8380890e-04   1.0185240e-04  -5.7430220e-03   2.6373779e-03  -2.6007412e-03  -4.6719935e-03   1.7798459e-03   2.2848968e-04   2.0998958e-03  -1.5431849e-03
-   0.0000000e+00  -6.0037414e+00  -2.6613945e+00  -4.2714219e+00   4.5880133e+00   6.5145604e-01  -7.6958696e-02  -6.9965293e-02  -1.0818909e+01  -9.5029509e+00   1.1593165e+01  -3.1947637e-01  -3.7915723e-02  -8.1060257e-02   9.6913398e-01  -9.1345509e-02   1.0292187e-01  -4.1399810e-02  -4.3679746e-02   4.4607279e-03   4.8225913e-03  -1.4209215e-03  -2.1628872e-03   1.6887518e-02   1.3496069e-02   1.1866682e-02  -1.3627426e-03   6.4210398e-04   3.6718513e-04  -5.4517208e-03   5.0911673e-03  -2.3898692e-03  -7.2544320e-03  -3.8004884e-04   7.2331704e-04   3.1941055e-03  -5.4319954e-03
-   0.0000000e+00   1.3271151e-02  -6.8513185e-02   1.3382178e-01   1.9115028e-04  -1.5974655e-02  -4.7586169e-03  -1.0887465e-02   2.9472714e-02   2.2628980e-02  -2.5301781e-02   9.7501944e-02   7.5046311e-03  -2.9632485e-02   2.1211493e-03   1.2109893e-01  -1.9072409e-02   5.3275199e-02   2.9306482e-03  -5.4805936e-03  -8.2592374e-04   3.6984046e-04   9.1402309e-04  -1.2564721e-02  -2.8255226e-03  -3.5415531e-03   2.0375864e-04  -3.8716845e-04  -2.5794462e-05   1.2288748e-02  -1.3989476e-03  -6.0433743e-03  -1.2527695e-04   2.9083948e-03  -6.5432972e-04  -8.9852886e-04  -1.1069280e-03
-   0.0000000e+00  -4.7044850e-03   1.4273520e-01   4.9572211e-02  -1.3476715e-02   6.6203923e-03  -2.8194005e-03   8.0294805e-03  -3.0692453e-02  -8.5254871e-03   3.4020427e-03  -2.1726445e-02  -1.2356051e-03   1.8237737e-03  -1.0970003e-03  -2.8564027e-02   6.1093076e-02  -1.2009943e-02  -2.3929040e-03   1.3600444e-03   3.7428013e-03   7.5090503e-04  -6.2705012e-04   7.9301899e-03  -2.0310609e-03   3.6040481e-03  -3.0379280e-05   2.5721622e-04   3.5208690e-05  -1.4243108e-03   6.4047424e-03  -2.0369367e-03   5.9343530e-03  -3.2415010e-04  -4.0339971e-03  -1.4532968e-03  -1.0508776e-03
-   0.0000000e+00   1.7046808e-02   3.6997112e-02  -3.3627818e-01  -6.7984064e-02   4.7016418e-02  -4.1335158e-02   9.2307378e-03  -2.3009040e-02   3.2698123e-02  -3.7881639e-02  -2.1493528e-02   1.3116672e-03  -1.1834831e-02   1.1042374e-03   1.8680616e-02  -2.7398972e-02   1.8257970e-02   8.1310647e-03  -2.4931092e-03  -1.3159828e-03   1.2468296e-03   3.3316184e-04  -4.5349440e-03  -1.6805453e-03  -1.1725768e-03   1.0140090e-04  -1.3662278e-04  -1.1329906e-05  -5.9758775e-03  -1.9816243e-03   1.5888234e-02   3.0561577e-04   1.0135948e-03  -7.5104575e-04  -2.4027508e-03  -1.5345937e-03
-   0.0000000e+00  -2.9297385e-02   3.4634193e-01  -2.8264192e-02  -2.5260499e-01   1.3307374e-02  -2.3767770e-03  -1.4949784e-02  -1.0026952e-01  -2.1744972e-02   3.8122762e-02   6.0115514e-02   4.2855623e-02   4.6349170e-03   1.2636694e-02   8.1763158e-03   4.4955294e-03   5.1650831e-03   4.0051283e-02  -1.1164241e-03  -2.0952542e-03  -2.9147133e-04   9.2572555e-05   1.0335504e-03  -1.4608568e-02   1.8615800e-04   6.3882595e-04   4.1862266e-05  -3.6097549e-05  -1.9535916e-04   5.9112910e-03   1.9207161e-04   1.7989163e-02   4.8721286e-04   1.7783080e-03   5.0476537e-04   7.6814614e-04
-   0.0000000e+00  -7.7511371e-01   1.8828897e+00   1.1109494e-01  -7.8292253e-01   9.3603901e-01   5.3267323e-01   5.4995494e-01   4.9622579e-01   4.3292192e-02   3.2383072e-02  -2.6574645e+00  -5.4978399e-02   4.7348556e-02  -1.0094706e-02   9.2715446e-02   1.5246704e-02   4.6474893e-02  -1.7631817e-03  -1.0942208e-02  -2.0497143e-04  -2.1827827e-04  -8.8181692e-04   1.3008109e-02   9.3186123e-04   4.0518678e-03  -1.2683240e-04   4.0257639e-04   2.5197991e-05   6.0562843e-03   1.5343113e-03   3.9594260e-03   1.9845889e-03   1.7908960e-02   5.3844073e-04   6.3440900e-04  -7.2690823e-03
-   0.0000000e+00  -6.3258861e-02   4.0554662e-01  -2.1784299e-01  -4.0153314e-01  -4.5718198e-03   2.8989019e-01   5.6296206e-01   1.7858264e-01   3.9265896e-03  -7.2015863e-04  -1.8431233e-01   7.0124556e-03   5.0986304e-03   1.6998846e-03  -7.9740836e-03  -5.3064472e-02  -6.7393395e-03   1.7772379e-02   1.7592747e-04  -1.0746808e-02   2.1041498e-04  -3.2731785e-04   4.2794965e-03  -4.5169074e-03   1.8874072e-03   1.3547765e-04   1.4101230e-04   1.0594735e-05  -4.7540410e-04  -3.9310247e-03  -5.9927020e-04   1.8932377e-03  -6.0262527e-05   2.0721217e-02  -4.4438410e-04  -7.7812422e-04
-   0.0000000e+00   3.1194528e-01   2.7972211e+00  -2.9905643e+00  -2.9385489e+00  -1.3914365e+00   2.6838615e+00  -3.2150573e+00  -9.3182277e-01   2.5477067e-04  -1.5590417e-02   1.5172920e-01   5.1493864e-03   9.6685452e-03   7.1467366e-04  -3.1030632e-02  -2.5873328e-02  -1.7838557e-02   8.6503518e-03   1.6727797e-03  -5.3436307e-04  -1.0005173e-02  -4.5739709e-04   5.6510702e-03  -1.0660358e-03   1.9635288e-03  -1.1947160e-05   1.8278970e-04   1.5167849e-05  -1.1942107e-03  -1.6517133e-03  -2.7215211e-03   4.6462513e-04  -4.3683390e-04  -5.6773668e-04   2.0221185e-02   1.2628266e-05
-   0.0000000e+00  -1.0053736e-03  -6.3970245e-04  -7.1478358e-04  -3.7333764e-04   1.7920762e-05  -3.0479981e-05  -2.0370687e-05  -1.9666275e-03   5.6729883e-04   2.5356877e-03  -4.0594391e-05   4.8695982e-05   3.7727678e-04  -7.2554364e-06   5.1439462e-10  -1.0653098e-08  -1.8212470e-09   5.3366871e-09  -2.2894409e-10   6.6920596e-09   1.1545714e-07  -5.7046845e-10  -1.3100643e-09   3.3230179e-09   1.3686427e-08  -2.5041137e-10   3.9961724e-10  -8.6155658e-11   6.4678887e-11   2.7839691e-10  -1.7228234e-10   2.1430030e-10  -3.5103498e-10  -1.9053395e-08  -2.3447338e-07  -1.6286439e-10
-   0.0000000e+00   4.7698698e-02  -1.5063164e-01   9.2525245e-03   9.9889559e-02  -7.4749300e-02  -4.2486476e-02  -3.9128822e-02  -1.8499844e-01  -3.2098567e-02   2.8948547e-02   2.0731465e-01  -1.7858882e-03   2.1279442e-02   4.2542789e-04  -4.8282178e-02   2.2228865e-02  -2.3231309e-02  -5.1856151e-03   1.8271866e-03   7.9772614e-04  -6.7217666e-04  -8.2988604e-04   1.1872208e-02   1.5205967e-03   3.0882815e-03  -1.2241233e-04   3.5639900e-04   1.2134015e-05  -3.0634822e-03   1.6258254e-03  -1.2890353e-03   1.1414215e-04   6.7134472e-04   7.8845028e-04   1.4334321e-03  -9.6081976e-04
-   0.0000000e+00   6.4658030e-02  -1.9246033e-01   8.0915933e-03   1.0907740e-01  -7.0718534e-02  -3.5168033e-02  -3.5427528e-02  -1.3437528e-01  -4.6415803e-03  -4.4660972e-03   1.6848052e-01  -8.2800794e-03  -3.1825306e-03  -2.8477516e-03  -1.6671033e-02   6.2219422e-03  -8.3706715e-03  -9.2666522e-03   4.1889767e-04   1.0296146e-03   1.9873558e-04  -7.5611416e-05   5.6261929e-04   4.3178623e-03   2.6468231e-04  -1.9119123e-04   1.7513863e-05   1.4247221e-05  -8.4561244e-04  -5.7761338e-04  -5.5009593e-04  -3.3892975e-03   1.0205101e-03  -9.9209799e-04  -3.6877933e-04   6.0875085e-04
-   0.0000000e+00   1.4431588e-02   2.0107467e-01   3.7484333e-02  -7.4228873e-02  -1.0416399e-02   5.9824381e-02   3.7754209e-02  -5.6891022e-02  -1.7737395e-02   2.9230761e-02  -2.9754423e-01   4.7012966e-03  -1.6202400e-02  -4.6679085e-03  -1.3968287e-02   8.3787526e-03  -6.6767286e-03  -3.6936556e-03   5.2597167e-04   4.4751179e-04  -1.3883079e-04  -2.2169015e-04   2.6641694e-03   1.2893332e-03   1.0386744e-03  -9.3078627e-05   8.6045582e-05   1.5011529e-05  -8.4644128e-04   3.8871269e-04  -3.8331303e-04  -6.8858684e-04   2.6232374e-04   3.3673902e-05   3.0950200e-04  -2.2744854e-04
-   0.0000000e+00  -4.4392101e-01  -6.1444698e+00  -1.1504647e+00   2.2756104e+00   3.1994944e-01  -1.8286273e+00  -1.1535893e+00   1.7383891e+00   5.6090441e-01  -9.0434372e-01   9.0935869e+00   5.3875278e-01  -5.2152093e-01   1.4286085e-01   4.2693110e-01  -2.5609080e-01   2.0406962e-01   1.1289403e-01  -1.6075935e-02  -1.3677893e-02   4.2431644e-03   6.7757805e-03  -8.1428571e-02  -3.9407523e-02  -3.1746376e-02   2.8448913e-03  -2.6299160e-03  -4.5881839e-04   2.5870895e-02  -1.1880737e-02   1.1715699e-02   2.1046179e-02  -8.0178053e-03  -1.0292098e-03  -9.4595060e-03   6.9516795e-03
-   0.0000000e+00   4.3957043e-01   6.1439763e+00   1.1477036e+00  -2.2725766e+00  -3.1840419e-01   1.8286553e+00   1.1534118e+00  -1.7370467e+00  -5.5406703e-01   8.8498390e-01  -9.0929371e+00  -5.5004891e-01   5.1855745e-01  -1.4272592e-01  -4.2690752e-01   2.5607669e-01  -2.0405834e-01  -1.1288781e-01   1.6075061e-02   1.3677105e-02  -4.2429331e-03  -6.7754019e-03   8.1424153e-02   3.9405457e-02   3.1744627e-02  -2.8447279e-03   2.6297698e-03   4.5879461e-04  -2.5869469e-02   1.1880081e-02  -1.1715050e-02  -2.1045016e-02   8.0173237e-03   1.0292328e-03   9.4589901e-03  -6.9512832e-03
-   0.0000000e+00  -2.7043880e+01  -1.1988264e+01  -1.9240639e+01   2.0666727e+01   2.9344867e+00  -3.4666079e-01  -3.1515898e-01  -4.8733826e+01  -4.2806085e+01   5.2221465e+01  -1.4390827e+00  -1.7079154e-01  -3.6513629e-01  -1.3903611e-01  -4.1146626e-01   4.6361201e-01  -1.8648563e-01  -1.9675561e-01   2.0093369e-02   2.1723384e-02  -6.4005473e-03  -9.7427350e-03   7.6069901e-02   6.0793102e-02   5.3453520e-02  -6.1384800e-03   2.8923603e-03   1.6539871e-03  -2.4557301e-02   2.2933186e-02  -1.0765176e-02  -3.2677622e-02  -1.7119317e-03   3.2581848e-03   1.4387863e-02  -2.4468448e-02
diff --git a/drake/examples/KukaArm/df_nonpar5.dat b/drake/examples/KukaArm/df_nonpar5.dat
deleted file mode 100644
index 032c3989d..000000000
--- a/drake/examples/KukaArm/df_nonpar5.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-   0.0000000e+00   1.0004883e+00  -1.5073887e-02   2.8647733e-02  -5.2624821e-04  -3.0783309e-03  -5.9407556e-04  -2.3302864e-03   3.6735299e-03   1.7838765e-03  -3.3806378e-03   2.0594183e-02   1.3164148e-03  -6.5851067e-03   3.8257806e-04   2.6858245e-02  -5.0232167e-03   1.1764913e-02   8.4080961e-04  -1.1937708e-03  -2.0742824e-04   8.8178817e-05   1.9295091e-04  -2.6094895e-03  -4.5170592e-04  -7.1799380e-04   4.3030228e-05  -8.0586771e-05  -7.8825776e-06   2.7345915e-03  -3.6986038e-04  -1.3644756e-03  -4.0478192e-05   5.9565878e-04  -1.5972783e-04  -2.1410435e-04  -2.8663432e-04
-   0.0000000e+00   1.4293596e-03   1.0303180e+00   1.2212581e-02  -7.5366321e-04   1.0474678e-03  -9.5038719e-04   1.4589539e-03  -2.8676847e-03   1.6958908e-03  -3.0539435e-03  -3.9268782e-03   4.5992362e-05   7.9115995e-04  -3.0645139e-04  -7.1225231e-03   1.5257716e-02  -2.9627408e-03  -1.1106553e-03   3.0348852e-04   8.9414716e-04   1.4470713e-04  -1.4486767e-04   1.7408430e-03  -6.0937918e-04   8.2520039e-04  -9.8470024e-06   5.7171542e-05   1.1772601e-05  -3.7695266e-04   1.5249474e-03  -4.3525292e-04   1.2654125e-03   6.7961394e-06  -8.6802114e-04  -2.7259487e-04  -2.2278158e-04
-   0.0000000e+00   5.7392627e-03   9.2067967e-03   9.2596139e-01  -1.5877887e-02   9.8513586e-03  -9.7138044e-03   2.1316211e-03  -3.6197331e-03   8.7973130e-03  -1.2667248e-02  -6.5504528e-03   4.2204554e-04  -2.1028960e-03   1.8433709e-04   4.0091977e-03  -5.6669483e-03   4.0184231e-03   1.5475162e-03  -5.5041765e-04  -2.7664963e-04   2.5582143e-04   6.8020925e-05  -9.0113825e-04  -4.0541855e-04  -2.0442050e-04   2.4188859e-05  -2.6781168e-05  -2.8041188e-06  -1.3445088e-03  -4.3035292e-04   3.5509987e-03   5.0348985e-06   2.3442407e-04  -1.5556684e-04  -4.8907794e-04  -3.6724073e-04
-   0.0000000e+00  -9.9154680e-03   7.6536449e-02  -6.4615451e-03   9.4415898e-01   4.6375886e-03  -3.9606373e-04  -3.0137699e-03  -2.7090179e-02  -8.1000488e-03   1.3771918e-02   1.3057510e-02   9.0921688e-03   1.0979694e-03   2.7343231e-03   1.2301082e-03   2.3789227e-04   7.8786453e-04   9.1729235e-03  -2.0574032e-04  -4.8820801e-04  -4.1574070e-05   5.0763177e-06   4.8276633e-04  -3.0272309e-03   1.1796255e-04   1.4131793e-04   1.7198412e-05  -1.1396363e-05  -6.0859099e-05   1.2683035e-03  -2.2548515e-05   4.0205682e-03   8.0246793e-05   3.8387212e-04   6.2450696e-05   1.5013123e-04
-   0.0000000e+00  -1.7008783e-01   4.8111934e-01   3.5880518e-02  -2.0511174e-01   1.2074380e+00   1.3714903e-01   1.3683869e-01   1.1072132e-01   2.2447530e-03   2.0605192e-02  -6.7566905e-01  -1.4064075e-02   9.4995674e-03  -3.3134371e-03   2.3711975e-02   2.7534489e-04   1.1725430e-02   7.2587950e-04  -2.5094336e-03  -1.7407400e-04   5.0496746e-06  -1.6450871e-04   2.4788391e-03   2.5853207e-04   6.6180660e-04  -2.1301062e-05   7.4959563e-05   1.9752221e-06   1.5541570e-03   1.6086547e-04   9.1558528e-04   5.6991955e-04   3.8362027e-03   6.7533583e-05   2.2162022e-05  -1.6395952e-03
-   0.0000000e+00  -1.4640584e-02   9.8446004e-02  -5.7228153e-02  -9.4479785e-02  -3.4344558e-03   1.0709092e+00   1.3529355e-01   4.5210939e-02   1.0751640e-03   3.2446752e-04  -4.7742226e-02   1.5182128e-03   1.2209181e-03   2.7629134e-04  -1.6462070e-03  -1.1611426e-02  -1.4192868e-03   3.8927478e-03   2.9843777e-05  -2.3799343e-03   4.2125839e-05  -7.1476802e-05   9.1832180e-04  -1.0366854e-03   4.1408746e-04   3.0793594e-05   3.0382951e-05   2.6525929e-06  -1.0222262e-04  -8.6147235e-04  -1.1737073e-04   4.1843614e-04  -2.2424206e-06   4.6007184e-03  -8.8768917e-05  -1.7465933e-04
-   0.0000000e+00   8.0728761e-02   6.5926398e-01  -7.8175818e-01  -6.9509279e-01  -3.6048186e-01   6.4282978e-01   1.5829607e-01  -2.5582637e-01   3.7640214e-03  -8.8564437e-03   4.5631695e-02   1.8654486e-03   2.3880417e-03   2.6669640e-04  -7.2942411e-03  -4.4768209e-03  -4.0771264e-03   1.4098793e-03   3.6372138e-04  -7.1784435e-05  -2.2535302e-03  -1.0130268e-04   1.2265857e-03  -4.1419030e-04   4.5219263e-04  -3.4166181e-07   4.0245908e-05   5.3300183e-06  -3.0825323e-04  -3.0034331e-04  -5.6388756e-04   3.1969892e-05  -3.6535314e-05  -1.0082704e-04   4.5593140e-03   1.5874828e-05
-   0.0000000e+00   6.1766574e-04  -1.3615726e-05   4.8618476e-05  -1.6105141e-04  -2.2219865e-05  -1.8488251e-05   1.4260701e-04   1.0002772e+00   3.0755262e-04   1.2347082e-04  -5.0156892e-05   2.0045810e-05  -4.1156337e-06   1.3300342e-05  -2.2348675e-09   4.3309501e-10  -1.6428785e-09  -1.4071517e-09  -2.0015645e-09   1.3360936e-09   6.0819161e-09  -2.3094335e-09  -2.6020796e-09  -5.5977003e-09   1.3757910e-09   2.7588954e-10  -5.9434722e-11   7.4955525e-11  -3.8288848e-11  -4.8202474e-11   5.0424813e-10  -5.9685597e-10   5.9048037e-09  -3.0500725e-09  -1.2267632e-08  -9.3937720e-09
-   0.0000000e+00   1.2009768e-02  -4.0243074e-02   9.1825860e-04   2.4898210e-02  -1.7548929e-02  -1.1848333e-02  -1.0633682e-02  -4.3114557e-02   9.9493128e-01   4.6194493e-03   5.6869629e-02   2.5170306e-04   4.5482136e-03   4.0455683e-04  -1.0385590e-02   5.0394424e-03  -4.9754965e-03  -1.1001860e-03   3.7769942e-04   1.7464873e-04  -1.5034282e-04  -1.7033773e-04   2.4302222e-03   1.8571539e-04   5.9879923e-04  -2.1895306e-05   7.2783576e-05   3.2123302e-06  -6.6598501e-04   3.7935806e-04  -2.6304778e-04   6.2488174e-05   1.7545528e-04   1.7974303e-04   3.2072305e-04  -1.6886052e-04
-   0.0000000e+00   1.2426654e-02  -4.5990713e-02   4.9130638e-04   2.5635903e-02  -1.4759391e-02  -8.9986143e-03  -8.4647606e-03  -3.2353328e-02  -2.3146259e-03   1.0008358e+00   4.2356097e-02  -1.8985470e-03  -1.1224072e-03  -4.9418701e-04  -3.3919803e-03   9.9229059e-04  -1.7281762e-03  -1.8609544e-03   8.7309140e-05   2.1069781e-04   5.6084853e-05  -1.0689461e-05   3.0185149e-05   9.7218424e-04   9.3630414e-06  -4.3868994e-05   6.8031520e-07   3.5887307e-06  -1.6364680e-04  -1.4314158e-04  -1.2952998e-04  -7.1236251e-04   2.0504930e-04  -2.2480999e-04  -1.0769055e-04   1.4763072e-04
-   0.0000000e+00   3.3464989e-03   4.9922440e-02   8.9448515e-03  -1.8552413e-02  -2.0205539e-03   1.4666428e-02   9.3175173e-03  -1.3094041e-02  -3.7967015e-03   7.3650152e-03   9.2671694e-01   1.8369251e-03  -4.6832112e-03  -1.1687380e-03  -3.0452372e-03   2.0192702e-03  -1.4450435e-03  -8.5268165e-04   1.1172558e-04   1.0403459e-04  -3.1097910e-05  -4.6161296e-05   5.2416472e-04   2.5254967e-04   2.0608255e-04  -2.1611379e-05   1.6974914e-05   4.3125621e-06  -1.8552464e-04   9.9092960e-05  -8.0810284e-05  -1.4761271e-04   6.3250810e-05   9.6370307e-06   6.9655074e-05  -4.1064988e-05
-   0.0000000e+00  -1.0019638e-01  -1.5243252e+00  -2.7340110e-01   5.6572638e-01   6.2224037e-02  -4.4807104e-01  -2.8481133e-01   4.0166164e-01   1.1567123e-01  -2.2712251e-01   2.2399197e+00   1.1313603e+00  -1.1853061e-01   3.5751469e-02   9.3075576e-02  -6.1717611e-02   4.4166757e-02   2.6061636e-02  -3.4148185e-03  -3.1797486e-03   9.5055583e-04   1.4108884e-03  -1.6020741e-02  -7.7189864e-03  -6.2987339e-03   6.6053583e-04  -5.1882698e-04  -1.3181064e-04   5.6704332e-03  -3.0287078e-03   2.4699101e-03   4.5116837e-03  -1.9332102e-03  -2.9454402e-04  -2.1291006e-03   1.2551263e-03
-   0.0000000e+00   1.0255687e-01   1.5250279e+00   2.7392747e-01  -5.6656818e-01  -6.2038772e-02   4.4814996e-01   2.8484061e-01  -4.0024244e-01  -1.1459439e-01   2.2837283e-01  -2.2397690e+00  -1.3421426e-01   1.1180408e+00  -3.5741301e-02  -9.3070452e-02   6.1714204e-02  -4.4164328e-02  -2.6060196e-02   3.4146234e-03   3.1795736e-03  -9.5050188e-04  -1.4108155e-03   1.6019836e-02   7.7185706e-03   6.2983835e-03  -6.6049891e-04   5.1879832e-04   1.3180329e-04  -5.6701202e-03   3.0285408e-03  -2.4697738e-03  -4.5114340e-03   1.9331229e-03   2.9452696e-04   2.1289803e-03  -1.2550759e-03
-   0.0000000e+00  -6.6269624e+00  -3.3107303e+00  -4.7667406e+00   5.6858495e+00   6.0133662e-01  -1.0365532e-01  -8.7335244e-02  -1.2320121e+01  -1.0654394e+01   1.4283767e+01  -3.5394224e-01  -8.5300303e-02  -1.5868893e-01   9.6245091e-01  -1.0526709e-01   1.3831619e-01  -4.6640751e-02  -5.6938203e-02   4.8833916e-03   6.2928682e-03  -1.7417716e-03  -2.3526292e-03   1.5726424e-02   1.3338275e-02   1.2397591e-02  -1.7082505e-03   6.0552683e-04   5.0929664e-04  -6.3701630e-03   7.0998659e-03  -2.4279601e-03  -8.8570524e-03   1.5246997e-04   1.0135385e-03   3.9479041e-03  -5.7846264e-03
-   0.0000000e+00   2.1997534e-03  -6.7900391e-02   1.2904384e-01  -2.3704874e-03  -1.3866355e-02  -2.6760161e-03  -1.0496785e-02   1.6547432e-02   8.0354797e-03  -1.5228098e-02   9.2766590e-02   5.9297964e-03  -2.9662643e-02   1.7233246e-03   1.2098309e-01  -2.2627102e-02   5.2995102e-02   3.7874307e-03  -5.3773461e-03  -9.3436142e-04   3.9720188e-04   8.6914826e-04  -1.1754457e-02  -2.0347114e-03  -3.2342063e-03   1.9382986e-04  -3.6300347e-04  -3.5507106e-05   1.2317980e-02  -1.6660378e-03  -6.1462866e-03  -1.8233420e-04   2.6831476e-03  -7.1949473e-04  -9.6443400e-04  -1.2911456e-03
-   0.0000000e+00   6.4385569e-03   1.3656759e-01   5.5011624e-02  -3.3948793e-03   4.7183234e-03  -4.2810234e-03   6.5718643e-03  -1.2917499e-02   7.6391479e-03  -1.3756502e-02  -1.7688641e-02   2.0717280e-04   3.5637836e-03  -1.3804116e-03  -3.2083437e-02   6.8728451e-02  -1.3345679e-02  -5.0029520e-03   1.3670654e-03   4.0276899e-03   6.5183390e-04  -6.5255705e-04   7.8416353e-03  -2.7449513e-03   3.7171189e-03  -4.4355866e-05   2.5752947e-04   5.3029736e-05  -1.6979849e-03   6.8691325e-03  -1.9605987e-03   5.7000563e-03   3.0613241e-05  -3.9100051e-03  -1.2279048e-03  -1.0035206e-03
-   0.0000000e+00   2.5852535e-02   4.1472057e-02  -3.3350726e-01  -7.1522012e-02   4.4375489e-02  -4.3755876e-02   9.6018970e-03  -1.6305104e-02   3.9627536e-02  -5.7059675e-02  -2.9506544e-02   1.9011060e-03  -9.4725045e-03   8.3034725e-04   1.8059449e-02  -2.5526794e-02   1.8101005e-02   6.9707938e-03  -2.4793588e-03  -1.2461695e-03   1.1523488e-03   3.0640056e-04  -4.0591813e-03  -1.8262097e-03  -9.2081307e-04   1.0895882e-04  -1.2063589e-04  -1.2631166e-05  -6.0563460e-03  -1.9385267e-03   1.5995490e-02   2.2679723e-05   1.0559643e-03  -7.0075154e-04  -2.2030538e-03  -1.6542375e-03
-   0.0000000e+00  -4.4664270e-02   3.4475878e-01  -2.9106059e-02  -2.5153612e-01   2.0890039e-02  -1.7840708e-03  -1.3575540e-02  -1.2202784e-01  -3.6486706e-02   6.2035665e-02   5.8817612e-02   4.0955715e-02   4.9458083e-03   1.2316771e-02   5.5410278e-03   1.0715868e-03   3.5489393e-03   4.1319475e-02  -9.2675818e-04  -2.1991352e-03  -1.8727059e-04   2.2866296e-05   2.1746231e-03  -1.3636175e-02   5.3136286e-04   6.3656727e-04   7.7470322e-05  -5.1334970e-05  -2.7414009e-04   5.7130789e-03  -1.0156989e-04   1.8110667e-02   3.6147204e-04   1.7291537e-03   2.8130944e-04   6.7626681e-04
-   0.0000000e+00  -7.6616138e-01   2.1672042e+00   1.6162395e-01  -9.2392675e-01   9.3440531e-01   6.1778843e-01   6.1639049e-01   4.9874467e-01   1.0111500e-02   9.2816180e-02  -3.0435543e+00  -6.3351689e-02   4.2790844e-02  -1.4925392e-02   1.0681070e-01   1.2402923e-03   5.2817251e-02   3.2697275e-03  -1.1303755e-02  -7.8411710e-04   2.2746282e-05  -7.4103022e-04   1.1165942e-02   1.1645589e-03   2.9811108e-03  -9.5950731e-05   3.3765569e-04   8.8973970e-06   7.0007071e-03   7.2461922e-04   4.1242580e-03   2.5672052e-03   1.7280192e-02   3.0420533e-04   9.9828926e-05  -7.3855638e-03
-   0.0000000e+00  -6.5948575e-02   4.4345047e-01  -2.5778447e-01  -4.2558462e-01  -1.5470522e-02   3.1941065e-01   6.0943042e-01   2.0365288e-01   4.8430811e-03   1.4615654e-03  -2.1505507e-01   6.8387962e-03   5.4996311e-03   1.2445556e-03  -7.4153468e-03  -5.2303721e-02  -6.3931837e-03   1.7534900e-02   1.3443143e-04  -1.0720425e-02   1.8975603e-04  -3.2196758e-04   4.1365847e-03  -4.6697540e-03   1.8652588e-03   1.3870989e-04   1.3686014e-04   1.1948616e-05  -4.6046227e-04  -3.8805061e-03  -5.2869697e-04   1.8848475e-03  -1.0100994e-05   2.0723957e-02  -3.9985999e-04  -7.8675374e-04
-   0.0000000e+00   3.6364307e-01   2.9696576e+00  -3.5214332e+00  -3.1310486e+00  -1.6237921e+00   2.8956296e+00  -3.7914592e+00  -1.1523710e+00   1.6955051e-02  -3.9893891e-02   2.0554818e-01   8.4029217e-03   1.0756945e-02   1.2013351e-03  -3.2856942e-02  -2.0165860e-02  -1.8365434e-02   6.3508076e-03   1.6383846e-03  -3.2335331e-04  -1.0151037e-02  -4.5631836e-04   5.5251609e-03  -1.8657221e-03   2.0369037e-03  -1.5390172e-06   1.8128788e-04   2.4009092e-05  -1.3885281e-03  -1.3528978e-03  -2.5400340e-03   1.4400852e-04  -1.6457349e-04  -4.5417588e-04   2.0537450e-02   7.1508232e-05
-   0.0000000e+00   2.7822781e-03  -6.1332099e-05   2.1900214e-04  -7.2545680e-04  -1.0008948e-04  -8.3280409e-05   6.4237391e-04   1.2487007e-03   1.3853722e-03   5.5617489e-04  -2.2593195e-04   9.0296442e-05  -1.8538891e-05   5.9911450e-05  -1.0066971e-08   1.9508784e-09  -7.4003538e-09  -6.3385214e-09  -9.0160561e-09   6.0184398e-09   2.7396018e-08  -1.0402854e-08  -1.1721079e-08  -2.5214866e-08   6.1972568e-09   1.2427457e-09  -2.6772397e-10   3.3763750e-10  -1.7247229e-10  -2.1712826e-10   2.2713880e-09  -2.6885404e-09   2.6598215e-08  -1.3739065e-08  -5.5259604e-08  -4.2314288e-08
-   0.0000000e+00   5.4098055e-02  -1.8127511e-01   4.1363000e-03   1.1215410e-01  -7.9049230e-02  -5.3370868e-02  -4.7899468e-02  -1.9420972e-01  -2.2832072e-02   2.0808330e-02   2.5616950e-01   1.1337976e-03   2.0487449e-02   1.8223281e-03  -4.6781935e-02   2.2700191e-02  -2.2412146e-02  -4.9557930e-03   1.7013487e-03   7.8670598e-04  -6.7721990e-04  -7.6728706e-04   1.0946947e-02   8.3655580e-04   2.6972938e-03  -9.8627504e-05   3.2785395e-04   1.4469956e-05  -2.9999325e-03   1.7088201e-03  -1.1848999e-03   2.8147826e-04   7.9033909e-04   8.0965328e-04   1.4446984e-03  -7.6063298e-04
-   0.0000000e+00   5.5975920e-02  -2.0716537e-01   2.2130918e-03   1.1547704e-01  -6.6483743e-02  -4.0534298e-02  -3.8129552e-02  -1.4573571e-01  -1.0426243e-02   3.7649800e-03   1.9079323e-01  -8.5520136e-03  -5.0558882e-03  -2.2260676e-03  -1.5279191e-02   4.4697775e-03  -7.7845776e-03  -8.3826776e-03   3.9328441e-04   9.4908926e-04   2.5263447e-04  -4.8150725e-05   1.3596914e-04   4.3792083e-03   4.2175862e-05  -1.9760808e-04   3.0644829e-06   1.6165454e-05  -7.3714777e-04  -6.4478191e-04  -5.8346839e-04  -3.2088401e-03   9.2364551e-04  -1.0126576e-03  -4.8509258e-04   6.6500322e-04
-   0.0000000e+00   1.5074319e-02   2.2487586e-01   4.0292124e-02  -8.3569429e-02  -9.1015943e-03   6.6064989e-02   4.1970798e-02  -5.8982166e-02  -1.7102259e-02   3.3175744e-02  -3.3010387e-01   8.2744376e-03  -2.1095546e-02  -5.2645856e-03  -1.3717285e-02   9.0958116e-03  -6.5092050e-03  -3.8409083e-03   5.0326836e-04   4.6862427e-04  -1.4008068e-04  -2.0793377e-04   2.3611023e-03   1.1376111e-03   9.2829979e-04  -9.7348554e-05   7.6463578e-05   1.9425955e-05  -8.3569658e-04   4.4636468e-04  -3.6401029e-04  -6.6492212e-04   2.8491356e-04   4.3410048e-05   3.1376160e-04  -1.8497742e-04
-   0.0000000e+00  -4.5133503e-01  -6.8663299e+00  -1.2315365e+00   2.5483170e+00   2.8028845e-01  -2.0183380e+00  -1.2829339e+00   1.8092867e+00   5.2104160e-01  -1.0230744e+00   1.0089728e+01   5.9171297e-01  -5.3392168e-01   1.6104265e-01   4.1925935e-01  -2.7800726e-01   1.9894936e-01   1.1739476e-01  -1.5382065e-02  -1.4323192e-02   4.2817830e-03   6.3553531e-03  -7.2165502e-02  -3.4770209e-02  -2.8372675e-02   2.9753866e-03  -2.3370585e-03  -5.9374163e-04   2.5542492e-02  -1.3642828e-02   1.1125721e-02   2.0322900e-02  -8.7081542e-03  -1.3267749e-03  -9.5905435e-03   5.6537223e-03
-   0.0000000e+00   4.6196790e-01   6.8694952e+00   1.2339075e+00  -2.5521089e+00  -2.7945393e-01   2.0186935e+00   1.2830658e+00  -1.8028939e+00  -5.1619094e-01   1.0287064e+00  -1.0089049e+01  -6.0456872e-01   5.3171553e-01  -1.6099685e-01  -4.1923627e-01   2.7799191e-01  -1.9893841e-01  -1.1738827e-01   1.5381187e-02   1.4322403e-02  -4.2815400e-03  -6.3550246e-03   7.2161425e-02   3.4768336e-02   2.8371097e-02  -2.9752203e-03   2.3369294e-03   5.9370850e-04  -2.5541082e-02   1.3642076e-02  -1.1125107e-02  -2.0321775e-02   8.7077609e-03   1.3266980e-03   9.5900015e-03  -5.6534949e-03
-   0.0000000e+00  -2.9851182e+01  -1.4913200e+01  -2.1471804e+01   2.5611935e+01   2.7087235e+00  -4.6691584e-01  -3.9340200e-01  -5.5496042e+01  -4.7992768e+01   6.4341294e+01  -1.5943344e+00  -3.8423560e-01  -7.1481499e-01  -1.6914005e-01  -4.7417607e-01   6.2304592e-01  -2.1009347e-01  -2.5647839e-01   2.1997260e-02   2.8346253e-02  -7.8458179e-03  -1.0597429e-02   7.0839748e-02   6.0082319e-02   5.5845003e-02  -7.6948219e-03   2.7275983e-03   2.2941290e-03  -2.8694428e-02   3.1981378e-02  -1.0936757e-02  -3.9896633e-02   6.8680168e-04   4.5654886e-03   1.7783352e-02  -2.6056876e-02
diff --git a/drake/examples/KukaArm/df_par1.dat b/drake/examples/KukaArm/df_par1.dat
deleted file mode 100644
index 7b1cb70a6..000000000
--- a/drake/examples/KukaArm/df_par1.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-   0.0000000e+00   1.0020015e+00  -1.5188924e-02   2.9427875e-02   4.2267788e-04  -3.3798681e-03  -6.7393442e-04  -2.2880392e-03   5.4019684e-03   3.8661924e-03  -5.0306606e-03   2.1102404e-02   1.6360028e-03  -6.5196338e-03   4.0424446e-04   2.6550116e-02  -4.0550696e-03   1.1665603e-02   5.7784529e-04  -1.2038039e-03  -1.7383656e-04   7.9736834e-05   1.9581787e-04  -2.7079534e-03  -6.1484980e-04  -7.4443166e-04   4.3891346e-05  -8.3176261e-05  -5.3922901e-06   2.7083656e-03  -3.0145657e-04  -1.3521319e-03  -4.0102289e-05   6.5154684e-04  -1.4434872e-04  -1.9406508e-04  -2.5872042e-04   0.0000000e+00
-   0.0000000e+00  -1.2760712e-03   1.0316978e+00   1.0683366e-02  -3.0213749e-03   1.6838163e-03  -7.5770370e-04   1.5818551e-03  -6.6303001e-03  -1.8175266e-03   8.6806775e-04  -4.6229773e-03  -1.5175720e-04   4.9070347e-04  -1.7033541e-04  -6.1663032e-03   1.3556456e-02  -2.5751830e-03  -4.9814662e-04   2.9604192e-04   8.2584165e-04   1.6462256e-04  -1.3573661e-04   1.7309669e-03  -4.5985439e-04   7.8118122e-04  -6.2906534e-06   5.6067345e-05   7.7805963e-06  -3.0734937e-04   1.4256894e-03  -4.4423091e-04   1.3322356e-03  -7.8262667e-05  -8.8941069e-04  -3.1853078e-04  -2.2873987e-04   0.0000000e+00
-   0.0000000e+00   3.9254675e-03   8.5073433e-03   9.2534166e-01  -1.5020028e-02   9.5767740e-03  -9.9332473e-03   2.0383367e-03  -7.3130192e-03   5.8948401e-03  -7.8078013e-03  -5.1939474e-03   3.0948447e-04  -2.6159836e-03   1.8792144e-04   3.9571712e-03  -5.9901308e-03   3.9604397e-03   1.7852409e-03  -5.4473967e-04  -2.8961112e-04   2.7561992e-04   7.0116962e-05  -9.5349280e-04  -3.6104202e-04  -2.4189660e-04   2.1907749e-05  -2.8590818e-05  -2.4877407e-06  -1.3375041e-03  -4.3293434e-04   3.5192879e-03   6.9121871e-05   2.2439204e-04  -1.6173569e-04  -5.3078189e-04  -3.4705868e-04   0.0000000e+00
-   0.0000000e+00  -7.3934516e-03   7.7342541e-02  -6.2971486e-03   9.4406585e-01   4.3170248e-03  -2.7469549e-04  -2.9756853e-03  -2.0633529e-02  -4.0908158e-03   8.4924654e-03   1.2280356e-02   9.5380629e-03   1.1381430e-03   2.8508538e-03   1.6832392e-03   1.2429081e-03   1.0962988e-03   8.8117930e-03  -2.4902696e-04  -4.5489000e-04  -6.9836140e-05   1.9285432e-05   2.6920306e-04  -3.2632658e-03   6.4864270e-05   1.4327898e-04   1.0732649e-05  -8.2645135e-06  -5.4786171e-05   1.3278067e-03   4.7880711e-05   3.9877319e-03   1.2445461e-04   3.9568358e-04   1.2329763e-04   1.7143871e-04   0.0000000e+00
-   0.0000000e+00  -1.5939986e-01   4.6755900e-01   3.7545211e-02  -1.9672115e-01   1.2005564e+00   1.3566798e-01   1.3322624e-01   1.1770421e-01   1.0034638e-02   1.1059341e-02  -6.5800443e-01  -1.2925264e-02   9.2899837e-03  -4.2455389e-03   2.1947778e-02   3.4888360e-03   1.1020906e-02  -6.1006054e-04  -2.4852589e-03  -3.6678010e-05  -4.7593313e-05  -1.9481506e-04   2.8423808e-03   2.0904030e-04   8.9128289e-04  -2.9856091e-05   8.7786777e-05   6.1951532e-06   1.4225054e-03   3.2396960e-04   9.4653776e-04   3.6664969e-04   3.9754376e-03   1.0371532e-04   1.4018301e-04  -1.6980141e-03   0.0000000e+00
-   0.0000000e+00  -1.4360389e-02   9.5303819e-02  -5.7294682e-02  -9.1923454e-02  -3.8255354e-03   1.0681886e+00   1.3222016e-01   4.3540161e-02   9.7448264e-04   2.6256757e-04  -4.7211702e-02   1.5183254e-03   1.1107971e-03   2.5502818e-04  -1.6107574e-03  -1.1665470e-02  -1.4063864e-03   3.9004651e-03   3.1581846e-05  -2.3829571e-03   4.3623912e-05  -7.2369487e-05   9.4397390e-04  -1.0032605e-03   4.1788091e-04   2.9956499e-05   3.1110821e-05   2.4185118e-06  -9.8225793e-05  -8.6629085e-04  -1.2123690e-04   4.1560712e-04  -1.2112189e-05   4.6026093e-03  -9.1968641e-05  -1.8278941e-04   0.0000000e+00
-   0.0000000e+00   7.8782731e-02   6.1527946e-01  -7.8598940e-01  -6.5585406e-01  -3.6325859e-01   6.0378340e-01   1.4929214e-01  -2.8389693e-01   5.7783876e-04  -1.2148239e-03   5.7595850e-02   1.6081752e-03   1.3956545e-03   4.4614932e-04  -7.2834522e-03  -5.8577088e-03  -4.1686893e-03   1.9768905e-03   3.8552035e-04  -1.2345750e-04  -2.2190067e-03  -9.5502477e-05   1.1920119e-03  -2.1276907e-04   4.0219975e-04  -2.5704481e-06   3.8501731e-05   2.9926025e-06  -2.8663712e-04  -3.7186146e-04  -6.2532178e-04   1.1180713e-04  -9.2352811e-05  -1.2130947e-04   4.4842225e-03   5.6279206e-05   0.0000000e+00
-   0.0000000e+00   1.3088156e-04  -1.0234692e-04   2.5305590e-04   1.2725054e-05  -4.5875213e-05   1.0926484e-04   2.3237216e-05   1.0001928e+00   4.2538913e-04   7.1364043e-04  -2.0196981e-05  -4.8634986e-05   2.3445502e-05  -2.9047308e-06  -5.1674658e-09   8.4507067e-10  -3.7854248e-09  -1.9734255e-09  -4.0663737e-09   8.0996093e-10   1.3392957e-08  -4.6093176e-09  -5.5765231e-09  -6.3887385e-09   1.2265411e-09   3.2178636e-10  -2.1588994e-10   1.0771035e-10  -4.5670338e-11  -1.0401625e-10   7.9437995e-10  -7.0759258e-10   1.1950840e-08  -1.6919482e-09  -2.7010913e-08  -1.8668310e-08   0.0000000e+00
-   0.0000000e+00   1.1574949e-02  -3.9693316e-02   1.2263764e-03   2.4575802e-02  -1.7511247e-02  -1.1667970e-02  -1.0399153e-02  -4.2475963e-02   9.9419800e-01   5.2826776e-03   5.5033732e-02  -1.8912081e-04   4.7821111e-03   3.4044230e-04  -1.0569266e-02   4.7685496e-03  -5.0886349e-03  -1.0745735e-03   3.9836283e-04   1.6893471e-04  -1.4761255e-04  -1.7681094e-04   2.5449195e-03   3.2101987e-04   6.4522759e-04  -2.5602436e-05   7.6152480e-05   2.3760989e-06  -6.7160264e-04   3.5352633e-04  -2.8211031e-04   3.9727464e-05   1.4823236e-04   1.7410263e-04   3.1435831e-04  -1.8714581e-04   0.0000000e+00
-   0.0000000e+00   1.2648799e-02  -4.3684711e-02   1.0838007e-03   2.4720138e-02  -1.4220857e-02  -8.2795929e-03  -7.8627672e-03  -2.8372354e-02  -1.1338396e-03   9.9903366e-01   3.8407743e-02  -1.8979792e-03  -5.8384995e-04  -5.2098872e-04  -3.6537966e-03   1.3776391e-03  -1.8339976e-03  -2.0450286e-03   9.3688462e-05   2.2693373e-04   4.2744520e-05  -1.7598850e-05   1.2276144e-04   9.6494477e-04   5.8084191e-05  -4.3341765e-05   3.8264763e-06   3.4439625e-06  -1.8521624e-04  -1.2697639e-04  -1.2058992e-04  -7.4736101e-04   2.1962324e-04  -2.1830230e-04  -7.9131505e-05   1.2799249e-04   0.0000000e+00
-   0.0000000e+00   3.3972548e-03   4.9229428e-02   9.0541323e-03  -1.8480350e-02  -1.9987521e-03   1.4436093e-02   9.1966142e-03  -1.2130548e-02  -3.5058358e-03   7.0950748e-03   9.2756970e-01   1.6947185e-03  -4.4836298e-03  -1.2261988e-03  -3.0355002e-03   1.8198627e-03  -1.4509277e-03  -8.0184730e-04   1.1512755e-04   9.7127740e-05  -3.0470635e-05  -4.7406016e-05   5.6803179e-04   2.8805615e-04   2.2021941e-04  -2.0832378e-05   1.8315338e-05   3.3826184e-06  -1.8390412e-04   8.4477891e-05  -8.3679842e-05  -1.4941761e-04   5.4741901e-05   7.4638020e-06   6.7832684e-05  -4.6211783e-05   0.0000000e+00
-   0.0000000e+00  -1.0522492e-01  -1.5045988e+00  -2.7731142e-01   5.6502020e-01   6.1011895e-02  -4.4109751e-01  -2.8114663e-01   3.6761325e-01   1.1130497e-01  -2.1759820e-01   2.2137281e+00   1.1270434e+00  -1.1610705e-01   3.7483583e-02   9.2777970e-02  -5.5622854e-02   4.4346601e-02   2.4507911e-02  -3.5188012e-03  -2.9686418e-03   9.3142422e-04   1.4489325e-03  -1.7361510e-02  -8.8042238e-03  -6.7308578e-03   6.3672894e-04  -5.5979578e-04  -1.0338750e-04   5.6209031e-03  -2.5820086e-03   2.5576170e-03   4.5668459e-03  -1.6731319e-03  -2.2812947e-04  -2.0734830e-03   1.4124370e-03   0.0000000e+00
-   0.0000000e+00   1.0482180e-01   1.5045174e+00   2.7764775e-01  -5.6522852e-01  -6.0667553e-02   4.4127311e-01   2.8110650e-01  -3.6879948e-01  -1.0927822e-01   2.1844099e-01  -2.2136389e+00  -1.2992354e-01   1.1153519e+00  -3.7479801e-02  -9.2772861e-02   5.5619782e-02  -4.4344161e-02  -2.4506561e-02   3.5186022e-03   2.9684875e-03  -9.3135613e-04  -1.4488562e-03   1.7360531e-02   8.8037405e-03   6.7304811e-03  -6.3669091e-04   5.5976489e-04   1.0338133e-04  -5.6205929e-03   2.5818662e-03  -2.5574757e-03  -4.5665959e-03   1.6730542e-03   2.2809419e-04   2.0733347e-03  -1.4123723e-03   0.0000000e+00
-   0.0000000e+00  -5.8835368e+00  -3.1125306e+00  -4.2609366e+00   5.3460105e+00   4.5227523e-01  -1.0124389e-01  -8.4018346e-02  -1.1129343e+01  -9.6310786e+00   1.3532947e+01  -3.4863398e-01  -3.4402032e-02  -1.3576163e-01   9.6909707e-01  -8.7912499e-02   1.0281672e-01  -3.9693760e-02  -4.4008863e-02   4.4445583e-03   4.8205142e-03  -1.3986241e-03  -2.0961708e-03   1.6094548e-02   1.4297771e-02   1.1569425e-02  -1.4279214e-03   6.1277337e-04   3.8028530e-04  -5.2149964e-03   5.0398346e-03  -2.3458735e-03  -7.3925057e-03  -6.9585431e-04   7.0055101e-04   3.1456873e-03  -5.3739013e-03   0.0000000e+00
-   0.0000000e+00   9.0156146e-03  -6.8418578e-02   1.3255800e-01   1.9039544e-03  -1.5224631e-02  -3.0357406e-03  -1.0306483e-02   2.4333191e-02   1.7415281e-02  -2.2660633e-02   9.5055872e-02   7.3693820e-03  -2.9367720e-02   1.8209210e-03   1.1959512e-01  -1.8266079e-02   5.2547763e-02   2.6029067e-03  -5.4225400e-03  -7.8304756e-04   3.5917493e-04   8.8206249e-04  -1.2197988e-02  -2.7695937e-03  -3.3532958e-03   1.9770876e-04  -3.7466784e-04  -2.4289595e-05   1.2199845e-02  -1.3579125e-03  -6.0906841e-03  -1.8064094e-04   2.9348957e-03  -6.5021945e-04  -8.7416703e-04  -1.1654073e-03   0.0000000e+00
-   0.0000000e+00  -5.7480687e-03   1.4278309e-01   4.8123271e-02  -1.3609797e-02   7.5847579e-03  -3.4130797e-03   7.1254735e-03  -2.9866217e-02  -8.1870569e-03   3.9102151e-03  -2.0824222e-02  -6.8359101e-04   2.2103760e-03  -7.6727664e-04  -2.7776140e-02   6.1065115e-02  -1.1599923e-02  -2.2439037e-03   1.3335222e-03   3.7200074e-03   7.4154305e-04  -6.1142619e-04   7.7971480e-03  -2.0714162e-03   3.5188343e-03  -2.8336277e-05   2.5255561e-04   3.5047731e-05  -1.3844566e-03   6.4220245e-03  -2.0010401e-03   6.0010613e-03  -3.5253454e-04  -4.0063545e-03  -1.4348233e-03  -1.0303598e-03   0.0000000e+00
-   0.0000000e+00   1.7682286e-02   3.8321366e-02  -3.3629881e-01  -6.7657782e-02   4.3138621e-02  -4.4744357e-02   9.1816969e-03  -3.2941528e-02   2.6553334e-02  -3.5170276e-02  -2.3396159e-02   1.3940742e-03  -1.1783710e-02   8.4649299e-04   1.7825095e-02  -2.6982571e-02   1.7839818e-02   8.0416255e-03  -2.4537823e-03  -1.3045546e-03   1.2415312e-03   3.1584217e-04  -4.2950126e-03  -1.6263154e-03  -1.0896243e-03   9.8683554e-05  -1.2878747e-04  -1.1206039e-05  -6.0247933e-03  -1.9501547e-03   1.5852648e-02   3.1135978e-04   1.0107750e-03  -7.2853914e-04  -2.3909094e-03  -1.5633274e-03   0.0000000e+00
-   0.0000000e+00  -3.3303836e-02   3.4838983e-01  -2.8365534e-02  -2.5195564e-01   1.9446057e-02  -1.2373671e-03  -1.3403988e-02  -9.2943824e-02  -1.8427098e-02   3.8254349e-02   5.5316920e-02   4.2964247e-02   5.1267701e-03   1.2841684e-02   7.5821587e-03   5.5986850e-03   4.9382831e-03   3.9692761e-02  -1.1217431e-03  -2.0490540e-03  -3.1457721e-04   8.6871314e-05   1.2126264e-03  -1.4699396e-02   2.9218140e-04   6.4540079e-04   4.8345268e-05  -3.7227538e-05  -2.4678455e-04   5.9811113e-03   2.1567888e-04   1.7962756e-02   5.6060636e-04   1.7823585e-03   5.5539472e-04   7.7224646e-04   0.0000000e+00
-   0.0000000e+00  -7.1801737e-01   2.1061216e+00   1.6912257e-01  -8.8613133e-01   9.0340716e-01   6.1111702e-01   6.0011820e-01   5.3019913e-01   4.5201073e-02   4.9816850e-02  -2.9639839e+00  -5.8221909e-02   4.1846774e-02  -1.9124049e-02   9.8863866e-02   1.5715478e-02   4.9643722e-02  -2.7480204e-03  -1.1194860e-02  -1.6521626e-04  -2.1438429e-04  -8.7754533e-04   1.2803517e-02   9.4162295e-04   4.0147878e-03  -1.3448690e-04   3.9543593e-04   2.7906095e-05   6.4076822e-03   1.4593225e-03   4.2636836e-03   1.6515752e-03   1.7907376e-02   4.6718611e-04   6.3145498e-04  -7.6487123e-03   0.0000000e+00
-   0.0000000e+00  -6.4686435e-02   4.2929648e-01  -2.5808415e-01  -4.1406961e-01  -1.7232142e-02   3.0715583e-01   5.9558631e-01   1.9612685e-01   4.3895614e-03   1.1827368e-03  -2.1266533e-01   6.8393037e-03   5.0035906e-03   1.1487756e-03  -7.2556642e-03  -5.2547161e-02  -6.3350740e-03   1.7569662e-02   1.4226057e-04  -1.0734041e-02   1.9650411e-04  -3.2598868e-04   4.2521347e-03  -4.5191915e-03   1.8823464e-03   1.3493918e-04   1.4013883e-04   1.0894197e-05  -4.4245853e-04  -3.9022110e-03  -5.4611214e-04   1.8721041e-03  -5.4559412e-05   2.0732475e-02  -4.1427316e-04  -8.2337572e-04   0.0000000e+00
-   0.0000000e+00   3.5487717e-01   2.7715291e+00  -3.5404928e+00  -2.9542976e+00  -1.6363000e+00   2.7197450e+00  -3.8320174e+00  -1.2788150e+00   2.6028773e-03  -5.4721796e-03   2.5944077e-01   7.2440323e-03   6.2867320e-03   2.0096816e-03  -3.2808343e-02  -2.6386076e-02  -1.8777880e-02   8.9049123e-03   1.7365782e-03  -5.5611485e-04  -9.9955255e-03  -4.3019134e-04   5.3694230e-03  -9.5841924e-04   1.8117106e-03  -1.1578595e-05   1.7343122e-04   1.3480191e-05  -1.2911582e-03  -1.6750516e-03  -2.8167648e-03   5.0363572e-04  -4.1600365e-04  -5.4643906e-04   2.0199200e-02   2.5350994e-04   0.0000000e+00
-   0.0000000e+00   5.8955659e-04  -4.6102216e-04   1.1398914e-03   5.7320062e-05  -2.0664511e-04   4.9218398e-04   1.0467214e-04   8.6858450e-04   1.9161673e-03   3.2145965e-03  -9.0977394e-05  -2.1907652e-04   1.0561037e-04  -1.3084373e-05  -2.3276873e-08   3.8066246e-09  -1.7051463e-08  -8.8893043e-09  -1.8316999e-08   3.6484727e-09   6.0328636e-08  -2.0762692e-08  -2.5119473e-08  -2.8778101e-08   5.5249597e-09   1.4494881e-09  -9.7247719e-10   4.8518178e-10  -2.0572224e-10  -4.6854166e-10   3.5782881e-09  -3.1873539e-09   5.3832613e-08  -7.6213883e-09  -1.2167078e-07  -8.4091486e-08   0.0000000e+00
-   0.0000000e+00   5.2139411e-02  -1.7879872e-01   5.5242179e-03   1.1070181e-01  -7.8879492e-02  -5.2558423e-02  -4.6843032e-02  -1.9133317e-01  -2.6135152e-02   2.3795845e-02   2.4789969e-01  -8.5189554e-04   2.1541041e-02   1.5335239e-03  -4.7609306e-02   2.1479953e-02  -2.2921779e-02  -4.8404210e-03   1.7944272e-03   7.6096716e-04  -6.6492138e-04  -7.9644565e-04   1.1463601e-02   1.4460354e-03   2.9064306e-03  -1.1532629e-04   3.4302919e-04   1.0703148e-05  -3.0252371e-03   1.5924609e-03  -1.2707671e-03   1.7895254e-04   6.6771332e-04   7.8424607e-04   1.4160284e-03  -8.4299914e-04   0.0000000e+00
-   0.0000000e+00   5.6976572e-02  -1.9677798e-01   4.8819851e-03   1.1135198e-01  -6.4057916e-02  -3.7295463e-02  -3.5417870e-02  -1.2780339e-01  -5.1073855e-03  -4.3528954e-03   1.7300785e-01  -8.5494557e-03  -2.6299547e-03  -2.3467960e-03  -1.6458543e-02   6.2055816e-03  -8.2612505e-03  -9.2118407e-03   4.2202010e-04   1.0222240e-03   1.9254288e-04  -7.9274099e-05   5.5297946e-04   4.3465981e-03   2.6164050e-04  -1.9523317e-04   1.7236380e-05   1.5513345e-05  -8.3430740e-04  -5.7196573e-04  -5.4319785e-04  -3.3664910e-03   9.8929387e-04  -9.8334368e-04  -3.5644822e-04   5.7654275e-04   0.0000000e+00
-   0.0000000e+00   1.5302950e-02   2.2175418e-01   4.0784380e-02  -8.3244821e-02  -9.0033880e-03   6.5027444e-02   4.1426190e-02  -5.4642108e-02  -1.5792053e-02   3.1959796e-02  -3.2626261e-01   7.6338673e-03  -2.0196531e-02  -5.5234179e-03  -1.3673424e-02   8.1975797e-03  -6.5357104e-03  -3.6119248e-03   5.1859257e-04   4.3751234e-04  -1.3725511e-04  -2.1354061e-04   2.5587018e-03   1.2975502e-03   9.9197932e-04  -9.3839541e-05   8.2501522e-05   1.5237020e-05  -8.2839695e-04   3.8053104e-04  -3.7693623e-04  -6.7305228e-04   2.4658514e-04   3.3620730e-05   3.0555263e-04  -2.0816118e-04   0.0000000e+00
-   0.0000000e+00  -4.7398613e-01  -6.7774721e+00  -1.2491506e+00   2.5451361e+00   2.7482836e-01  -1.9869257e+00  -1.2664263e+00   1.6559156e+00   5.0137372e-01  -9.8017208e-01   9.9717482e+00   5.7226765e-01  -5.2300472e-01   1.6884497e-01   4.1791878e-01  -2.5055339e-01   1.9975947e-01   1.1039600e-01  -1.5850456e-02  -1.3372260e-02   4.1956046e-03   6.5267230e-03  -7.8205002e-02  -3.9658666e-02  -3.0319179e-02   2.8681484e-03  -2.5216026e-03  -4.6570946e-04   2.5319383e-02  -1.1630669e-02   1.1520797e-02   2.0571378e-02  -7.5366301e-03  -1.0276102e-03  -9.3400134e-03   6.3623287e-03   0.0000000e+00
-   0.0000000e+00   4.7217029e-01   6.7771053e+00   1.2506655e+00  -2.5460744e+00  -2.7327726e-01   1.9877167e+00   1.2662455e+00  -1.6612589e+00  -4.9224423e-01   9.8396844e-01  -9.9713466e+00  -5.8524116e-01   5.1960329e-01  -1.6882793e-01  -4.1789577e-01   2.5053956e-01  -1.9974847e-01  -1.1038992e-01   1.5849560e-02   1.3371565e-02  -4.1952979e-03  -6.5263792e-03   7.8200591e-02   3.9656489e-02   3.0317482e-02  -2.8679771e-03   2.5214635e-03   4.6568169e-04  -2.5317986e-02   1.1630028e-02  -1.1520161e-02  -2.0570252e-02   7.5362802e-03   1.0274513e-03   9.3393457e-03  -6.3620375e-03   0.0000000e+00
-   0.0000000e+00  -2.6502418e+01  -1.4020408e+01  -1.9193408e+01   2.4081128e+01   2.0372758e+00  -4.5605357e-01  -3.7846102e-01  -5.0132177e+01  -4.3383237e+01   6.0959223e+01  -1.5704233e+00  -1.5496411e-01  -6.1153889e-01  -1.3920240e-01  -3.9600225e-01   4.6313839e-01  -1.7880072e-01  -1.9823812e-01   2.0020533e-02   2.1714028e-02  -6.3001085e-03  -9.4422108e-03   7.2497965e-02   6.4404373e-02   5.2114527e-02  -6.4320785e-03   2.7602404e-03   1.7129968e-03  -2.3490975e-02   2.2701958e-02  -1.0566998e-02  -3.3299575e-02  -3.1344789e-03   3.1556352e-03   1.4169763e-02  -2.4206762e-02   0.0000000e+00
diff --git a/drake/examples/KukaArm/df_par10.dat b/drake/examples/KukaArm/df_par10.dat
deleted file mode 100644
index 5843efc61..000000000
--- a/drake/examples/KukaArm/df_par10.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-   0.0000000e+00   1.0031223e+00  -1.5285326e-02   2.9954548e-02   2.8071963e-04  -3.5813883e-03  -1.0041247e-03  -2.3699377e-03   6.8207602e-03   5.2100271e-03  -5.8779952e-03   2.1378048e-02   1.6139042e-03  -6.4781351e-03   4.2344973e-04   2.6676296e-02  -4.0822387e-03   1.1729292e-02   5.8037469e-04  -1.2099448e-03  -1.7562394e-04   8.0086032e-05   1.9932583e-04  -2.7390557e-03  -6.0325683e-04  -7.6087218e-04   4.4294660e-05  -8.4288586e-05  -5.7487971e-06   2.7153761e-03  -3.0393433e-04  -1.3463622e-03  -4.1368178e-05   6.5247896e-04  -1.4414351e-04  -1.9484150e-04  -2.5052387e-04   0.0000000e+00
-   0.0000000e+00  -1.1738545e-03   1.0315804e+00   1.0845746e-02  -3.0077047e-03   1.4928660e-03  -6.8042114e-04   1.7453778e-03  -7.0220426e-03  -2.0704370e-03   9.2379101e-04  -4.5756948e-03  -2.5805172e-04   3.1295945e-04  -2.2459335e-04  -6.2343494e-03   1.3498964e-02  -2.6152396e-03  -5.0329026e-04   2.9882993e-04   8.2765748e-04   1.6758681e-04  -1.3764584e-04   1.7312773e-03  -4.6249025e-04   7.8660310e-04  -6.6611717e-06   5.6128555e-05   7.9742880e-06  -3.0959056e-04   1.4188894e-03  -4.4970356e-04   1.3225528e-03  -7.6161702e-05  -8.9616619e-04  -3.2466026e-04  -2.3239780e-04   0.0000000e+00
-   0.0000000e+00   3.8992409e-03   8.1849152e-03   9.2549116e-01  -1.4996660e-02   1.0419645e-02  -9.1569622e-03   2.0726924e-03  -4.8862780e-03   7.3474933e-03  -8.5477359e-03  -4.8343573e-03   2.6189937e-04  -2.5896593e-03   2.2780067e-04   4.0685996e-03  -6.0241725e-03   4.0161621e-03   1.7773259e-03  -5.5079259e-04  -2.8932144e-04   2.7621640e-04   7.2775041e-05  -9.8646965e-04  -3.6115312e-04  -2.5096611e-04   2.2125554e-05  -2.9661397e-05  -2.5558991e-06  -1.3313100e-03  -4.3748002e-04   3.5250848e-03   6.2321626e-05   2.2731097e-04  -1.6589184e-04  -5.3203366e-04  -3.4174953e-04   0.0000000e+00
-   0.0000000e+00  -6.2175025e-03   7.6983952e-02  -5.9193554e-03   9.4390450e-01   2.9005348e-03  -4.6252548e-04  -3.2674994e-03  -2.1859639e-02  -4.4730786e-03   8.0658730e-03   1.3064079e-02   9.5264550e-03   1.1898197e-03   2.7683042e-03   1.5934899e-03   1.1034389e-03   1.0394437e-03   8.8476906e-03  -2.4177875e-04  -4.5976087e-04  -6.6125007e-05   1.6694830e-05   2.8669300e-04  -3.2329443e-03   6.6397001e-05   1.4216067e-04   1.1212360e-05  -8.3296037e-06  -5.7012407e-05   1.3174964e-03   3.7120683e-05   3.9859631e-03   1.1774648e-04   3.9623251e-04   1.1534943e-04   1.6636816e-04   0.0000000e+00
-   0.0000000e+00  -1.7193449e-01   4.1780743e-01   2.4551295e-02  -1.7349602e-01   1.2078904e+00   1.1819214e-01   1.2207523e-01   1.0984557e-01   9.2893604e-03   8.5608520e-03  -5.8963589e-01  -1.2159199e-02   1.0425060e-02  -2.1978759e-03   2.0785186e-02   3.2416783e-03   1.0413465e-02  -3.3533176e-04  -2.4368973e-03  -5.2434513e-05  -4.6842318e-05  -1.9249742e-04   2.8325837e-03   1.8256626e-04   8.7384908e-04  -2.7148708e-05   8.7573421e-05   5.6019989e-06   1.3565105e-03   3.3299206e-04   8.8515889e-04   4.4907058e-04   3.9722148e-03   1.1834358e-04   1.3712243e-04  -1.6101822e-03   0.0000000e+00
-   0.0000000e+00  -1.4249815e-02   8.9999799e-02  -4.8475307e-02  -8.9020076e-02  -1.0106511e-03   1.0643242e+00   1.2494753e-01   3.9210984e-02   1.1834856e-03  -1.9791051e-04  -4.0845350e-02   1.5818225e-03   1.1012387e-03   3.7997942e-04  -1.7447766e-03  -1.1797520e-02  -1.4838083e-03   3.9528258e-03   3.7932583e-05  -2.3865337e-03   4.6738275e-05  -7.2244538e-05   9.4313192e-04  -1.0062425e-03   4.1637038e-04   3.0234579e-05   3.1080737e-05   2.3472191e-06  -1.0417030e-04  -8.7351403e-04  -1.3194806e-04   4.2158846e-04  -1.3522277e-05   4.5996629e-03  -9.8756703e-05  -1.7225725e-04   0.0000000e+00
-   0.0000000e+00   7.0975939e-02   6.2273264e-01  -6.6350831e-01  -6.4972087e-01  -3.0902351e-01   5.9549970e-01   2.8632234e-01  -2.0746495e-01   4.9291589e-05  -6.7638970e-03   3.3622333e-02   1.2902994e-03   1.6080054e-03   1.5389323e-04  -6.8275099e-03  -5.7813615e-03  -3.9311711e-03   1.9369836e-03   3.6975949e-04  -1.2069579e-04  -2.2203394e-03  -1.0043601e-04   1.2398025e-03  -2.4056626e-04   4.2811345e-04  -2.6028963e-06   4.0086091e-05   3.4131086e-06  -2.6117304e-04  -3.6841070e-04  -6.0315151e-04   1.0623286e-04  -9.9846273e-05  -1.2600040e-04   4.4873159e-03   4.2793809e-06   0.0000000e+00
-   0.0000000e+00   2.4455038e-04   1.8563070e-04  -2.3049131e-04   3.0031329e-05   3.7082455e-05  -5.7582115e-07   2.7277481e-05   9.9910585e-01   4.0676901e-04  -1.0697788e-03  -3.1518654e-05   2.7345868e-06  -7.8510593e-05  -2.8519138e-06   4.1275138e-09   5.5741417e-10   3.2356619e-09   1.3615033e-09   3.6528335e-09  -2.3195489e-09  -2.4783824e-08   3.2808727e-09   4.4352094e-09   7.3893267e-09  -3.0482429e-09  -3.3248495e-10   1.6039854e-10  -1.1712081e-10   4.6227642e-11   4.4111439e-11  -6.8109327e-10   7.5553521e-10  -1.0366540e-08   5.6981931e-09   5.0189714e-08   1.2702280e-08   0.0000000e+00
-   0.0000000e+00   1.0479839e-02  -3.3356133e-02   1.7733483e-03   2.1938416e-02  -1.6570884e-02  -9.4919004e-03  -8.7374896e-03  -4.1253841e-02   9.9275761e-01   6.3694493e-03   4.6331274e-02  -3.3086890e-04   4.6311077e-03   1.4135029e-04  -1.0540066e-02   4.7918865e-03  -5.0736953e-03  -1.0848883e-03   3.9933971e-04   1.6990775e-04  -1.4744873e-04  -1.8109959e-04   2.5930887e-03   3.1387240e-04   6.6373675e-04  -2.6012119e-05   7.7725546e-05   2.6213009e-06  -6.6928339e-04   3.5469755e-04  -2.8186169e-04   3.8107971e-05   1.4425590e-04   1.7398503e-04   3.1413442e-04  -2.0872020e-04   0.0000000e+00
-   0.0000000e+00   1.4375602e-02  -4.2860024e-02   1.7126327e-03   2.4075409e-02  -1.5714808e-02  -7.8553553e-03  -7.8943557e-03  -2.9789157e-02  -1.1314801e-03   9.9901374e-01   3.7635122e-02  -1.8438231e-03  -7.5660140e-04  -6.1536022e-04  -3.6175194e-03   1.3383829e-03  -1.8179548e-03  -2.0410754e-03   9.0337416e-05   2.2646444e-04   4.4614787e-05  -1.5383089e-05   1.0237928e-04   9.5358718e-04   4.9040384e-05  -4.2433531e-05   3.1419021e-06   3.2465939e-06  -1.8269580e-04  -1.3057797e-04  -1.1969543e-04  -7.5005942e-04   2.2387050e-04  -2.2080058e-04  -8.3022699e-05   1.3655588e-04   0.0000000e+00
-   0.0000000e+00   3.1606992e-03   4.4562760e-02   8.2792140e-03  -1.6510373e-02  -2.3050687e-03   1.3252836e-02   8.3577196e-03  -1.2758758e-02  -4.0844826e-03   6.7209028e-03   9.3408430e-01   1.0554714e-03  -3.6538841e-03  -1.0287327e-03  -3.0439916e-03   1.8287623e-03  -1.4549172e-03  -8.0635400e-04   1.1517478e-04   9.7762140e-05  -3.0397273e-05  -4.8345636e-05   5.7603546e-04   2.8106379e-04   2.2367206e-04  -2.0683289e-05   1.8586807e-05   3.4262216e-06  -1.8439370e-04   8.4830964e-05  -8.3740286e-05  -1.5036605e-04   5.5849330e-05   7.0895949e-06   6.7733488e-05  -4.9895000e-05   0.0000000e+00
-   0.0000000e+00  -9.4794547e-02  -1.3618791e+00  -2.5229211e-01   5.0478719e-01   7.0251842e-02  -4.0513558e-01  -2.5517701e-01   3.9040183e-01   1.2508818e-01  -1.9853761e-01   2.0147787e+00   1.1197142e+00  -1.1441157e-01   3.1446526e-02   9.3037510e-02  -5.5894860e-02   4.4468543e-02   2.4645651e-02  -3.5202383e-03  -2.9880310e-03   9.2908212e-04   1.4776523e-03  -1.7606122e-02  -8.5905163e-03  -6.8363868e-03   6.3217254e-04  -5.6809204e-04  -1.0472075e-04   5.6358664e-03  -2.5928002e-03   2.5594648e-03   4.5958336e-03  -1.7069961e-03  -2.1669195e-04  -2.0702486e-03   1.5250116e-03   0.0000000e+00
-   0.0000000e+00   9.6562120e-02   1.3622423e+00   2.5320154e-01  -5.0550559e-01  -7.0243464e-02   4.0506026e-01   2.5528512e-01  -3.8942172e-01  -1.2526287e-01   2.0003876e-01  -2.0146857e+00  -1.2230985e-01   1.1138356e+00  -3.1454993e-02  -9.3032370e-02   5.5891776e-02  -4.4466085e-02  -2.4644288e-02   3.5200469e-03   2.9878633e-03  -9.2902820e-04  -1.4775608e-03   1.7605156e-02   8.5900483e-03   6.8359953e-03  -6.3213907e-04   5.6806168e-04   1.0471491e-04  -5.6355555e-03   2.5926574e-03  -2.5593246e-03  -4.5955784e-03   1.7068912e-03   2.1668617e-04   2.0701287e-03  -1.5248845e-03   0.0000000e+00
-   0.0000000e+00  -6.0113136e+00  -2.6669495e+00  -4.2766068e+00   4.6006168e+00   6.5273509e-01  -7.7901061e-02  -7.1217679e-02  -1.0818351e+01  -9.5134161e+00   1.1600682e+01  -3.1587983e-01  -4.0171818e-02  -8.4243543e-02   9.6833790e-01  -9.0819209e-02   1.0430140e-01  -4.1077143e-02  -4.4356992e-02   4.5055445e-03   4.8900595e-03  -1.4329500e-03  -2.1758452e-03   1.6506806e-02   1.3642081e-02   1.1801594e-02  -1.4120536e-03   6.2811579e-04   3.8429605e-04  -5.4089939e-03   5.1496929e-03  -2.3888996e-03  -7.3830341e-03  -5.2878382e-04   7.0917248e-04   3.2214578e-03  -5.5534720e-03   0.0000000e+00
-   0.0000000e+00   1.4064410e-02  -6.8852819e-02   1.3493040e-01   1.2645028e-03  -1.6132380e-02  -4.5230844e-03  -1.0675395e-02   3.0724145e-02   2.3468591e-02  -2.6477456e-02   9.6297515e-02   7.2698386e-03  -2.9180789e-02   1.9074312e-03   1.2016350e-01  -1.8388463e-02   5.2834647e-02   2.6143004e-03  -5.4502017e-03  -7.9109881e-04   3.6074789e-04   8.9786411e-04  -1.2338089e-02  -2.7173731e-03  -3.4273522e-03   1.9952550e-04  -3.7967832e-04  -2.5895483e-05   1.2231424e-02  -1.3690735e-03  -6.0646946e-03  -1.8634315e-04   2.9390944e-03  -6.4929507e-04  -8.7766442e-04  -1.1284859e-03   0.0000000e+00
-   0.0000000e+00  -5.2876330e-03   1.4225417e-01   4.8854713e-02  -1.3548219e-02   6.7246216e-03  -3.0649601e-03   7.8620620e-03  -3.1630823e-02  -9.3262929e-03   4.1612208e-03  -2.0611238e-02  -1.1623952e-03   1.4097273e-03  -1.0116817e-03  -2.8082655e-02   6.0806145e-02  -1.1780358e-02  -2.2670732e-03   1.3460808e-03   3.7281868e-03   7.5489556e-04  -6.2002630e-04   7.7985464e-03  -2.0832894e-03   3.5432572e-03  -3.0005278e-05   2.5283133e-04   3.5920216e-05  -1.3945521e-03   6.3913935e-03  -2.0256917e-03   5.9574450e-03  -3.4307073e-04  -4.0367846e-03  -1.4624336e-03  -1.0468370e-03   0.0000000e+00
-   0.0000000e+00   1.7564148e-02   3.6868988e-02  -3.3562542e-01  -6.7552523e-02   4.6935337e-02  -4.1247578e-02   9.3364522e-03  -2.2010261e-02   3.3096817e-02  -3.8503315e-02  -2.1776384e-02   1.1797269e-03  -1.1665132e-02   1.0261292e-03   1.8327025e-02  -2.7135912e-02   1.8090820e-02   8.0059727e-03  -2.4810477e-03  -1.3032497e-03   1.2442180e-03   3.2781550e-04  -4.4435570e-03  -1.6268159e-03  -1.1304780e-03   9.9664658e-05  -1.3360990e-04  -1.1513059e-05  -5.9968920e-03  -1.9706307e-03   1.5878761e-02   2.8072804e-04   1.0239233e-03  -7.4726056e-04  -2.3965480e-03  -1.5394123e-03   0.0000000e+00
-   0.0000000e+00  -2.8006768e-02   3.4677456e-01  -2.6663763e-02  -2.5268241e-01   1.3065472e-02  -2.0834481e-03  -1.4718466e-02  -9.8466844e-02  -2.0149003e-02   3.6332761e-02   5.8847205e-02   4.2911960e-02   5.3595484e-03   1.2469839e-02   7.1778823e-03   4.9704456e-03   4.6821789e-03   3.9854462e-02  -1.0890935e-03  -2.0709949e-03  -2.9786039e-04   7.5201937e-05   1.2914099e-03  -1.4562812e-02   2.9908559e-04   6.4036337e-04   5.0506127e-05  -3.7520737e-05  -2.5681264e-04   5.9346683e-03   1.6721028e-04   1.7954789e-02   5.3038953e-04   1.7848311e-03   5.1959201e-04   7.4940615e-04   0.0000000e+00
-   0.0000000e+00  -7.7447968e-01   1.8820155e+00   1.1059142e-01  -7.8151358e-01   9.3644317e-01   5.3239701e-01   5.4988842e-01   4.9479987e-01   4.1843966e-02   3.8562396e-02  -2.6560175e+00  -5.4771168e-02   4.6959728e-02  -9.9003421e-03   9.3626964e-02   1.4602154e-02   4.6907502e-02  -1.5105034e-03  -1.0977015e-02  -2.3619150e-04  -2.1100143e-04  -8.6710548e-04   1.2759386e-02   8.2237056e-04   3.9362571e-03  -1.2229148e-04   3.9447487e-04   2.5234229e-05   6.1104079e-03   1.4999642e-03   3.9872022e-03   2.0228404e-03   1.7892860e-02   5.3307917e-04   6.1766860e-04  -7.2530731e-03   0.0000000e+00
-   0.0000000e+00  -6.4188356e-02   4.0540450e-01  -2.1835724e-01  -4.0099133e-01  -4.5524826e-03   2.8974849e-01   5.6282669e-01   1.7662605e-01   5.3310160e-03  -8.9148878e-04  -1.8398806e-01   7.1253267e-03   4.9605346e-03   1.7116190e-03  -7.8593539e-03  -5.3141980e-02  -6.6838212e-03   1.7805522e-02   1.7086749e-04  -1.0750152e-02   2.1053277e-04  -3.2542584e-04   4.2483420e-03  -4.5326238e-03   1.8755422e-03   1.3619180e-04   1.4000332e-04   1.0573059e-05  -4.6923559e-04  -3.9347479e-03  -5.9436062e-04   1.8990471e-03  -6.0911160e-05   2.0719202e-02  -4.4485001e-04  -7.7593356e-04   0.0000000e+00
-   0.0000000e+00   3.1971144e-01   2.8051020e+00  -2.9887762e+00  -2.9266706e+00  -1.3919978e+00   2.6824311e+00  -3.2147642e+00  -9.3452679e-01   2.2203418e-04  -3.0468005e-02   1.5145195e-01   5.8121595e-03   7.2432674e-03   6.9321273e-04  -3.0754549e-02  -2.6042169e-02  -1.7707978e-02   8.7251514e-03   1.6655833e-03  -5.4367474e-04  -1.0001529e-02  -4.5241447e-04   5.5846958e-03  -1.0836318e-03   1.9284390e-03  -1.1724758e-05   1.8056798e-04   1.5374363e-05  -1.1764551e-03  -1.6595077e-03  -2.7168987e-03   4.7852641e-04  -4.4975798e-04  -5.6756937e-04   2.0213135e-02   1.9276491e-05   0.0000000e+00
-   0.0000000e+00   1.1015783e-03   8.3617431e-04  -1.0382492e-03   1.3527626e-04   1.6703809e-04  -2.5937890e-06   1.2287154e-04  -4.0277168e-03   1.8322928e-03  -4.8188236e-03  -1.4197592e-04   1.2317959e-05  -3.5365132e-04  -1.2846459e-05   1.8592404e-08   2.5108747e-09   1.4575054e-08   6.1328975e-09   1.6454205e-08  -1.0448419e-08  -1.1163885e-07   1.4778706e-08   1.9978421e-08   3.3285255e-08  -1.3730824e-08  -1.4976800e-09   7.2251596e-10  -5.2757122e-10   2.0823262e-10   1.9870018e-10  -3.0679877e-09   3.4033118e-09  -4.6696127e-08   2.5667537e-08   2.2607979e-07   5.7217476e-08   0.0000000e+00
-   0.0000000e+00   4.7206483e-02  -1.5025285e-01   7.9880554e-03   9.8821693e-02  -7.4643620e-02  -4.2756308e-02  -3.9358061e-02  -1.8582811e-01  -3.2623368e-02   2.8691213e-02   2.0869943e-01  -1.4904005e-03   2.0860846e-02   6.3671301e-04  -4.7477776e-02   2.1585074e-02  -2.2854483e-02  -4.8868843e-03   1.7988275e-03   7.6535025e-04  -6.6418347e-04  -8.1576393e-04   1.1680580e-02   1.4138396e-03   2.9898052e-03  -1.1717171e-04   3.5011507e-04   1.1807662e-05  -3.0147901e-03   1.5977367e-03  -1.2696472e-03   1.7165753e-04   6.4980137e-04   7.8371635e-04   1.4150199e-03  -9.4018110e-04   0.0000000e+00
-   0.0000000e+00   6.4754965e-02  -1.9306317e-01   7.7145617e-03   1.0844779e-01  -7.0787426e-02  -3.5384483e-02  -3.5560161e-02  -1.3418539e-01  -5.0967572e-03  -4.4426037e-03   1.6952757e-01  -8.3055095e-03  -3.4081144e-03  -2.7718929e-03  -1.6295132e-02   6.0287517e-03  -8.1889858e-03  -9.1940335e-03   4.0692530e-04   1.0201101e-03   2.0096751e-04  -6.9293193e-05   4.6116791e-04   4.2954377e-03   2.2090263e-04  -1.9114203e-04   1.4152712e-05   1.4624297e-05  -8.2295406e-04  -5.8818907e-04  -5.3916859e-04  -3.3786460e-03   1.0084257e-03  -9.9459719e-04  -3.7397612e-04   6.1511657e-04   0.0000000e+00
-   0.0000000e+00   1.4237384e-02   2.0073315e-01   3.7293757e-02  -7.4371052e-02  -1.0383192e-02   5.9697461e-02   3.7647386e-02  -5.7471884e-02  -1.8398570e-02   3.0274337e-02  -2.9691756e-01   4.7543758e-03  -1.6458938e-02  -4.6339309e-03  -1.3711674e-02   8.2376682e-03  -6.5536810e-03  -3.6322252e-03   5.1880533e-04   4.4037000e-04  -1.3692465e-04  -2.1777313e-04   2.5947543e-03   1.2660531e-03   1.0075318e-03  -9.3167969e-05   8.3724356e-05   1.5433431e-05  -8.3060225e-04   3.8212146e-04  -3.7720850e-04  -6.7732457e-04   2.5157356e-04   3.1935112e-05   3.0510580e-04  -2.2475225e-04   0.0000000e+00
-   0.0000000e+00  -4.2700246e-01  -6.1345905e+00  -1.1364509e+00   2.2738162e+00   3.1644974e-01  -1.8249350e+00  -1.1494460e+00   1.7585668e+00   5.6346027e-01  -8.9431355e-01   9.0755796e+00   5.3925294e-01  -5.1536743e-01   1.4165102e-01   4.1908788e-01  -2.5177865e-01   2.0030875e-01   1.1101645e-01  -1.5856929e-02  -1.3459599e-02   4.1850546e-03   6.6560913e-03  -7.9306857e-02  -3.8696019e-02  -3.0794535e-02   2.8476241e-03  -2.5589732e-03  -4.7171507e-04   2.5386786e-02  -1.1679280e-02   1.1529120e-02   2.0701953e-02  -7.6891716e-03  -9.7608988e-04  -9.3254439e-03   6.8694218e-03   0.0000000e+00
-   0.0000000e+00   4.3496450e-01   6.1362265e+00   1.1405475e+00  -2.2770522e+00  -3.1641200e-01   1.8245958e+00   1.1499330e+00  -1.7541519e+00  -5.6424717e-01   9.0107550e-01  -9.0751608e+00  -5.5094528e-01   5.1277312e-01  -1.4168916e-01  -4.1906473e-01   2.5176476e-01  -2.0029768e-01  -1.1101031e-01   1.5856067e-02   1.3458844e-02  -4.1848117e-03  -6.6556792e-03   7.9302506e-02   3.8693911e-02   3.0792771e-02  -2.8474733e-03   2.5588364e-03   4.7168879e-04  -2.5385385e-02   1.1678637e-02  -1.1528489e-02  -2.0700804e-02   7.6886989e-03   9.7606385e-04   9.3249040e-03  -6.8688490e-03   0.0000000e+00
-   0.0000000e+00  -2.7077989e+01  -1.2013286e+01  -1.9263995e+01   2.0723499e+01   2.9402481e+00  -3.5090568e-01  -3.2080036e-01  -4.8731311e+01  -4.2853226e+01   5.2255324e+01  -1.4228821e+00  -1.8095413e-01  -3.7947542e-01  -1.4262208e-01  -4.0909554e-01   4.6982612e-01  -1.8503217e-01  -1.9980627e-01   2.0295246e-02   2.2027295e-02  -6.4547297e-03  -9.8011046e-03   7.4354981e-02   6.1450815e-02   5.3160334e-02  -6.3606020e-03   2.8293504e-03   1.7310633e-03  -2.4364837e-02   2.3196815e-02  -1.0760809e-02  -3.3256910e-02  -2.3819091e-03   3.1944707e-03   1.4511071e-02  -2.5015640e-02   0.0000000e+00
diff --git a/drake/examples/KukaArm/df_par5.dat b/drake/examples/KukaArm/df_par5.dat
deleted file mode 100644
index 4bfef4987..000000000
--- a/drake/examples/KukaArm/df_par5.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-   0.0000000e+00   1.0024186e+00  -1.5194457e-02   2.9866088e-02   4.2284581e-04  -3.5037514e-03  -6.0469422e-04  -2.2770134e-03   6.2429711e-03   4.4365757e-03  -5.6240107e-03   2.1029817e-02   1.5974677e-03  -6.4816618e-03   3.9168156e-04   2.6376599e-02  -3.9643255e-03   1.1580133e-02   5.3417889e-04  -1.1978637e-03  -1.7100120e-04   8.0623625e-05   1.9331176e-04  -2.6789797e-03  -5.9624420e-04  -7.3511079e-04   4.2760542e-05  -8.2251040e-05  -5.2529273e-06   2.6991209e-03  -2.9784134e-04  -1.3599569e-03  -4.8683108e-05   6.5483780e-04  -1.4034025e-04  -1.9563241e-04  -2.5947233e-04   0.0000000e+00
-   0.0000000e+00  -1.4865089e-03   1.0314186e+00   1.0468556e-02  -3.0301966e-03   1.6664663e-03  -9.4893783e-04   1.4323673e-03  -7.2582017e-03  -2.1750778e-03   1.2355461e-03  -4.2645260e-03  -1.5364008e-04   4.2622021e-04  -1.7422458e-04  -6.1060392e-03   1.3414826e-02  -2.5523758e-03  -4.5436181e-04   2.9426753e-04   8.2253531e-04   1.6684143e-04  -1.3526738e-04   1.7215366e-03  -4.7288026e-04   7.8004767e-04  -5.7562195e-06   5.5781743e-05   7.7731143e-06  -3.0365822e-04   1.4164528e-03  -4.4289222e-04   1.3345600e-03  -7.9967667e-05  -8.9502366e-04  -3.2339115e-04  -2.2926649e-04   0.0000000e+00
-   0.0000000e+00   4.3262819e-03   9.3337950e-03   9.2609984e-01  -1.5392207e-02   1.0034244e-02  -9.8105007e-03   2.3565682e-03  -6.9385833e-03   6.7013078e-03  -8.4678615e-03  -6.5032520e-03   2.1326229e-04  -2.5195206e-03   1.6887261e-04   3.7965456e-03  -5.9117981e-03   3.8811093e-03   1.7365814e-03  -5.3717039e-04  -2.8684453e-04   2.7702291e-04   6.7342992e-05  -9.2075188e-04  -3.4505927e-04  -2.2852437e-04   2.0601734e-05  -2.7516330e-05  -2.2361197e-06  -1.3453445e-03  -4.3096436e-04   3.5111890e-03   5.6154055e-05   2.2564090e-04  -1.5974650e-04  -5.3349667e-04  -3.4941949e-04   0.0000000e+00
-   0.0000000e+00  -7.6017117e-03   7.5789579e-02  -6.4550826e-03   9.4507597e-01   4.2035645e-03  -3.9749459e-04  -3.2578291e-03  -2.2795760e-02  -4.7924941e-03   9.1164164e-03   1.3795640e-02   9.3831551e-03   1.1464067e-03   2.7824990e-03   1.4639917e-03   1.3528594e-03   9.8533758e-04   8.7385159e-03  -2.3327644e-04  -4.4944417e-04  -6.7726327e-05   1.4010359e-05   2.9867247e-04  -3.2185682e-03   7.5569157e-05   1.4085437e-04   1.1673100e-05  -8.0127198e-06  -6.3827281e-05   1.3295857e-03   3.3332363e-05   3.9679558e-03   1.1888033e-04   4.0043201e-04   1.1922592e-04   1.6348703e-04   0.0000000e+00
-   0.0000000e+00  -1.6410413e-01   4.8087393e-01   3.9482305e-02  -2.0185466e-01   1.2062394e+00   1.3769845e-01   1.3708449e-01   1.1993716e-01   1.0412212e-02   1.1581036e-02  -6.7781929e-01  -1.3792336e-02   1.1021784e-02  -3.7349893e-03   2.1526205e-02   3.4931835e-03   1.0807363e-02  -5.3976842e-04  -2.4704772e-03  -3.9831990e-05  -5.0194152e-05  -1.9397388e-04   2.8206617e-03   1.6146903e-04   8.8211999e-04  -2.7278368e-05   8.7192475e-05   5.9509462e-06   1.3968222e-03   3.3348467e-04   9.2891722e-04   3.9416123e-04   3.9787304e-03   1.0835852e-04   1.4510761e-04  -1.6666534e-03   0.0000000e+00
-   0.0000000e+00  -1.4298710e-02   9.8656758e-02  -5.7323675e-02  -9.4755371e-02  -3.3991913e-03   1.0710344e+00   1.3538940e-01   4.4784687e-02   1.1254328e-03  -1.5275790e-04  -4.7998989e-02   1.4424990e-03   1.2070871e-03   2.9290053e-04  -1.5852649e-03  -1.1769191e-02  -1.3987313e-03   3.9451536e-03   3.1891884e-05  -2.3862124e-03   4.4702074e-05  -7.1438251e-05   9.3018351e-04  -1.0149875e-03   4.1308257e-04   3.0671657e-05   3.0671832e-05   2.3236798e-06  -9.6533562e-05  -8.7132119e-04  -1.2117751e-04   4.2251720e-04  -1.3291953e-05   4.5995885e-03  -9.4526536e-05  -1.7739200e-04   0.0000000e+00
-   0.0000000e+00   7.6746311e-02   6.5945813e-01  -7.8561477e-01  -6.9409486e-01  -3.6005447e-01   6.4374377e-01   1.5750948e-01  -2.6462991e-01   1.4722330e-03  -6.4817607e-03   4.5483835e-02   8.8750527e-04   1.7056099e-03   3.1055936e-04  -7.0173009e-03  -5.8303450e-03  -4.0308784e-03   1.9640793e-03   3.7879573e-04  -1.2252303e-04  -2.2197281e-03  -9.9878626e-05   1.2461187e-03  -2.2584172e-04   4.2502428e-04  -2.8893246e-06   4.0250026e-05   3.2837781e-06  -2.7128598e-04  -3.7036578e-04  -6.1378847e-04   1.1089812e-04  -1.0082643e-04  -1.2287442e-04   4.4858674e-03   1.9757438e-05   0.0000000e+00
-   0.0000000e+00   1.7326424e-06   1.7804413e-05  -2.1208824e-04  -1.2132657e-04   9.4607051e-05   2.7423431e-05  -1.2563167e-06   9.9952766e-01   4.2083890e-04  -2.2585420e-05   6.6969619e-06   2.9924571e-05   1.1114468e-05  -1.1428908e-05  -1.0322345e-10   5.6839217e-11   3.5569868e-11   8.4368414e-10   2.0767619e-09  -1.2600556e-09  -8.8272624e-09  -1.7155494e-09  -1.1602143e-09   4.5288470e-09  -1.3251627e-09  -1.7440107e-10  -4.5097670e-11  -1.6840691e-10   8.0100569e-12   1.6378157e-11  -2.6694216e-10   3.7595548e-10  -4.6768955e-09   3.1092758e-09   1.7925669e-08  -8.4323490e-09   0.0000000e+00
-   0.0000000e+00   1.0933428e-02  -4.0485489e-02   3.9036945e-04   2.5009053e-02  -1.7351341e-02  -1.1745641e-02  -1.0607054e-02  -4.4732640e-02   9.9334583e-01   6.2007057e-03   5.6228987e-02  -9.9157724e-05   4.5607933e-03   3.0190766e-04  -1.0373919e-02   4.7126658e-03  -4.9905054e-03  -1.0506160e-03   3.9074945e-04   1.6711783e-04  -1.4893999e-04  -1.7530852e-04   2.5241180e-03   3.0712075e-04   6.3888875e-04  -2.4789495e-05   7.5483331e-05   2.2855298e-06  -6.6132168e-04   3.5091768e-04  -2.7240536e-04   4.4291374e-05   1.4560429e-04   1.7094603e-04   3.1695996e-04  -1.9279981e-04   0.0000000e+00
-   0.0000000e+00   1.3190310e-02  -4.5652115e-02   6.7626911e-04   2.5321025e-02  -1.4844369e-02  -8.8049336e-03  -8.4799428e-03  -3.0541211e-02  -1.2269412e-03   9.9877966e-01   4.1531910e-02  -1.7235154e-03  -7.3904267e-04  -5.1485004e-04  -3.5668534e-03   1.2836556e-03  -1.7936323e-03  -2.0049442e-03   8.8101599e-05   2.2349021e-04   4.3696724e-05  -1.4907605e-05   1.0139224e-04   9.3985709e-04   4.9194490e-05  -4.1808995e-05   3.1275280e-06   3.2190136e-06  -1.8070296e-04  -1.3161139e-04  -1.1680316e-04  -7.4082964e-04   2.2176474e-04  -2.2096427e-04  -8.1296946e-05   1.3504677e-04   0.0000000e+00
-   0.0000000e+00   3.0971280e-03   5.0278021e-02   8.8469747e-03  -1.8971638e-02  -1.9545110e-03   1.4736647e-02   9.3344890e-03  -1.3178537e-02  -4.1626816e-03   7.4758012e-03   9.2629370e-01   1.8371014e-03  -4.5519669e-03  -1.1616410e-03  -2.9693432e-03   1.7878263e-03  -1.4181527e-03  -7.8672577e-04   1.1181628e-04   9.5940344e-05  -3.0796184e-05  -4.6501494e-05   5.5756310e-04   2.7707544e-04   2.1648785e-04  -2.0197099e-05   1.7978044e-05   3.3041716e-06  -1.8060175e-04   8.3129184e-05  -8.0153854e-05  -1.4637854e-04   5.5044632e-05   6.1275238e-06   6.8429200e-05  -4.6250204e-05   0.0000000e+00
-   0.0000000e+00  -9.4630097e-02  -1.5360293e+00  -2.6929255e-01   5.7944942e-01   5.9807782e-02  -4.5041650e-01  -2.8522562e-01   4.0462083e-01   1.2404793e-01  -2.3044985e-01   2.2529475e+00   1.1302723e+00  -1.2126384e-01   3.5530778e-02   9.0755930e-02  -5.4643695e-02   4.3344860e-02   2.4045738e-02  -3.4175884e-03  -2.9323414e-03   9.4140442e-04   1.4212860e-03  -1.7041521e-02  -8.4686024e-03  -6.6168041e-03   6.1731084e-04  -5.4948760e-04  -1.0099044e-04   5.5199684e-03  -2.5407860e-03   2.4498471e-03   4.4739596e-03  -1.6824007e-03  -1.8730940e-04  -2.0917762e-03   1.4136081e-03   0.0000000e+00
-   0.0000000e+00   9.4963181e-02   1.5363487e+00   2.6963670e-01  -5.8004596e-01  -5.9878850e-02   4.5045143e-01   2.8534640e-01  -4.0636254e-01  -1.2455957e-01   2.2856359e-01  -2.2529303e+00  -1.3302867e-01   1.1207405e+00  -3.5560047e-02  -9.0750917e-02   5.4640676e-02  -4.3342465e-02  -2.4044410e-02   3.4174066e-03   2.9321826e-03  -9.4130479e-04  -1.4212086e-03   1.7040593e-02   8.4681461e-03   6.6164024e-03  -6.1727649e-04   5.4945755e-04   1.0098458e-04  -5.5196640e-03   2.5406459e-03  -2.4497122e-03  -4.4737130e-03   1.6822902e-03   1.8729032e-04   2.0915639e-03  -1.4135362e-03   0.0000000e+00
-   0.0000000e+00  -6.6459668e+00  -3.2638784e+00  -4.7843334e+00   5.6127605e+00   6.0673952e-01  -1.0312403e-01  -8.9055115e-02  -1.2344594e+01  -1.0678079e+01   1.4303086e+01  -3.6286503e-01  -7.3227455e-02  -1.5840314e-01   9.6942004e-01  -8.5192622e-02   1.0165141e-01  -3.8319473e-02  -4.3253102e-02   4.2802599e-03   4.7666199e-03  -1.4332079e-03  -2.0662949e-03   1.5614274e-02   1.3531900e-02   1.1396330e-02  -1.3867444e-03   5.9753216e-04   3.7595846e-04  -5.0975253e-03   5.0189262e-03  -2.1639838e-03  -7.1891559e-03  -6.3287053e-04   6.4883850e-04   3.2139658e-03  -5.4080499e-03   0.0000000e+00
-   0.0000000e+00   1.0894816e-02  -6.8443499e-02   1.3453193e-01   1.9047109e-03  -1.5782664e-02  -2.7238478e-03  -1.0256817e-02   2.8121492e-02   1.9984575e-02  -2.5333382e-02   9.4728906e-02   7.1958005e-03  -2.9196675e-02   1.7643313e-03   1.1881351e-01  -1.7857322e-02   5.2162762e-02   2.4062112e-03  -5.3957826e-03  -7.7027568e-04   3.6316948e-04   8.7077370e-04  -1.2067476e-02  -2.6857847e-03  -3.3113099e-03   1.9261505e-04  -3.7050018e-04  -2.3661835e-05   1.2158202e-02  -1.3416277e-03  -6.1259321e-03  -2.1929328e-04   2.9497198e-03  -6.3216330e-04  -8.8122705e-04  -1.1687943e-03   0.0000000e+00
-   0.0000000e+00  -6.6959859e-03   1.4152514e-01   4.7155656e-02  -1.3649534e-02   7.5066050e-03  -4.2744947e-03   6.4521048e-03  -3.2694602e-02  -9.7976476e-03   5.5655231e-03  -1.9209577e-02  -6.9207241e-04   1.9199109e-03  -7.8479541e-04  -2.7504681e-02   6.0427146e-02  -1.1497188e-02  -2.0466748e-03   1.3255294e-03   3.7051140e-03   7.5153797e-04  -6.0931250e-04   7.7546693e-03  -2.1300912e-03   3.5137283e-03  -2.5928917e-05   2.5126911e-04   3.5014029e-05  -1.3678298e-03   6.3804178e-03  -1.9950100e-03   6.0115313e-03  -3.6021472e-04  -4.0316381e-03  -1.4567169e-03  -1.0327319e-03   0.0000000e+00
-   0.0000000e+00   1.9487756e-02   4.2044121e-02  -3.3288361e-01  -6.9334265e-02   4.5199295e-02  -4.4191445e-02   1.0615172e-02  -3.1254880e-02   3.0186071e-02  -3.8143520e-02  -2.9293928e-02   9.6064094e-04  -1.1349192e-02   7.6068741e-04   1.7101557e-02  -2.6629721e-02   1.7482474e-02   7.8224389e-03  -2.4196864e-03  -1.2920925e-03   1.2478509e-03   3.0334681e-04  -4.1475310e-03  -1.5543211e-03  -1.0293890e-03   9.2800604e-05  -1.2394743e-04  -1.0072611e-05  -6.0601103e-03  -1.9412809e-03   1.5816167e-02   2.5294619e-04   1.0164004e-03  -7.1957881e-04  -2.4031382e-03  -1.5739617e-03   0.0000000e+00
-   0.0000000e+00  -3.4241945e-02   3.4139450e-01  -2.9076949e-02  -2.4740555e-01   1.8934975e-02  -1.7905162e-03  -1.4674906e-02  -1.0268360e-01  -2.1587811e-02   4.1064939e-02   6.2142524e-02   4.2266465e-02   5.1639941e-03   1.2533779e-02   6.5945570e-03   6.0939612e-03   4.4384575e-03   3.9362684e-02  -1.0507948e-03  -2.0245233e-03  -3.0507355e-04   6.3109727e-05   1.3453715e-03  -1.4498055e-02   3.4040161e-04   6.3447915e-04   5.2581530e-05  -3.6093332e-05  -2.8751027e-04   5.9891246e-03   1.5014578e-04   1.7873675e-02   5.3549700e-04   1.8037478e-03   5.3705370e-04   7.3642804e-04   0.0000000e+00
-   0.0000000e+00  -7.3920781e-01   2.1660988e+00   1.7784822e-01  -9.0925523e-01   9.2900623e-01   6.2026328e-01   6.1749769e-01   5.4025748e-01   4.6901855e-02   5.2166827e-02  -3.0532400e+00  -6.2127639e-02   4.9647677e-02  -1.6824276e-02   9.6964887e-02   1.5735061e-02   4.8681817e-02  -2.4313893e-03  -1.1128276e-02  -1.7942338e-04  -2.2609978e-04  -8.7375621e-04   1.2705683e-02   7.2733797e-04   3.9735135e-03  -1.2287553e-04   3.9275889e-04   2.6806064e-05   6.2919921e-03   1.5021832e-03   4.1843118e-03   1.7755010e-03   1.7922209e-02   4.8810146e-04   6.5363787e-04  -7.5074475e-03   0.0000000e+00
-   0.0000000e+00  -6.4408604e-02   4.4439981e-01  -2.5821475e-01  -4.2682600e-01  -1.5311672e-02   3.1997464e-01   6.0986218e-01   2.0173282e-01   5.0695173e-03  -6.8809866e-04  -2.1621166e-01   6.4977432e-03   5.4373294e-03   1.3193717e-03  -7.1408329e-03  -5.3014372e-02  -6.3005914e-03   1.7770962e-02   1.4365713e-04  -1.0748704e-02   2.0136069e-04  -3.2179392e-04   4.1900158e-03  -4.5720156e-03   1.8607323e-03   1.3816062e-04   1.3816140e-04   1.0467026e-05  -4.3483587e-04  -3.9248702e-03  -5.4584465e-04   1.9032306e-03  -5.9873660e-05   2.0718867e-02  -4.2579521e-04  -7.9906305e-04   0.0000000e+00
-   0.0000000e+00   3.4570410e-01   2.9705321e+00  -3.5388053e+00  -3.1265534e+00  -1.6218670e+00   2.8997467e+00  -3.7950023e+00  -1.1920266e+00   6.6316802e-03  -2.9197120e-02   2.0488214e-01   3.9977715e-03   7.6829275e-03   1.3989160e-03  -3.1609463e-02  -2.6262815e-02  -1.8157110e-02   8.8472042e-03   1.7062871e-03  -5.5190556e-04  -9.9987752e-03  -4.4990372e-04   5.6131475e-03  -1.0173051e-03   1.9145238e-03  -1.3014976e-05   1.8130642e-04   1.4791793e-05  -1.2220089e-03  -1.6683143e-03  -2.7648129e-03   4.9954110e-04  -4.5417312e-04  -5.5348836e-04   2.0206610e-02   8.8997470e-05   0.0000000e+00
-   0.0000000e+00   7.8046954e-06   8.0200058e-05  -9.5535242e-04  -5.4651606e-04   4.2615789e-04   1.2352897e-04  -5.6590843e-06  -2.1276786e-03   1.8956707e-03  -1.0173613e-04   3.0166495e-05   1.3479536e-04   5.0065173e-05  -5.1481569e-05  -4.6497050e-10   2.5603251e-10   1.6022463e-10   3.8003790e-09   9.3547833e-09  -5.6759263e-09  -3.9762443e-08  -7.7277001e-09  -5.2261903e-09   2.0400212e-08  -5.9692013e-09  -7.8559042e-10  -2.0314266e-10  -7.5858969e-10   3.6081338e-11   7.3775480e-11  -1.2024422e-09   1.6934932e-09  -2.1067097e-08   1.4005747e-08   8.0746255e-08  -3.7983554e-08   0.0000000e+00
-   0.0000000e+00   4.9249674e-02  -1.8236707e-01   1.7584209e-03   1.1265339e-01  -7.8159194e-02  -5.2908293e-02  -4.7779521e-02  -2.0149838e-01  -2.9973749e-02   2.7931107e-02   2.5328372e-01  -4.4665641e-04   2.0544114e-02   1.3599444e-03  -4.6729364e-02   2.1228225e-02  -2.2479754e-02  -4.7325044e-03   1.7601327e-03   7.5278303e-04  -6.7090084e-04  -7.8967803e-04   1.1369901e-02   1.3834268e-03   2.8778772e-03  -1.1166439e-04   3.4001501e-04   1.0295179e-05  -2.9789265e-03   1.5807103e-03  -1.2270512e-03   1.9951069e-04   6.5587518e-04   7.7002715e-04   1.4277476e-03  -8.6846761e-04   0.0000000e+00
-   0.0000000e+00   5.9415813e-02  -2.0564016e-01   3.0462572e-03   1.1405867e-01  -6.6866526e-02  -3.9661863e-02  -3.8197941e-02  -1.3757302e-01  -5.5267619e-03  -5.4970255e-03   1.8708068e-01  -7.7635829e-03  -3.3290210e-03  -2.3191443e-03  -1.6066907e-02   5.7822324e-03  -8.0794247e-03  -9.0312803e-03   3.9685405e-04   1.0067127e-03   1.9683209e-04  -6.7151376e-05   4.5672182e-04   4.2335905e-03   2.2159680e-04  -1.8832881e-04   1.4087964e-05   1.4500061e-05  -8.1397731e-04  -5.9284409e-04  -5.2614036e-04  -3.3370704e-03   9.9894028e-04  -9.9533454e-04  -3.6620246e-04   6.0831879e-04   0.0000000e+00
-   0.0000000e+00   1.3951027e-02   2.2647757e-01   3.9851237e-02  -8.5457827e-02  -8.8041036e-03   6.6381293e-02   4.2047248e-02  -5.9362778e-02  -1.8750818e-02   3.3674780e-02  -3.3201038e-01   8.2752314e-03  -2.0504355e-02  -5.2326172e-03  -1.3375420e-02   8.0532716e-03  -6.3880753e-03  -3.5438098e-03   5.0367694e-04   4.3216371e-04  -1.3872155e-04  -2.0946619e-04   2.5115455e-03   1.2480876e-03   9.7517051e-04  -9.0977924e-05   8.0982181e-05   1.4883656e-05  -8.1352141e-04   3.7445578e-04  -3.6105340e-04  -6.5936281e-04   2.4794879e-04   2.7601459e-05   3.0823964e-04  -2.0833425e-04   0.0000000e+00
-   0.0000000e+00  -4.2626170e-01  -6.9190511e+00  -1.2130295e+00   2.6101325e+00   2.6940443e-01  -2.0289031e+00  -1.2848001e+00   1.8226164e+00   5.5877447e-01  -1.0380624e+00   1.0148412e+01   5.8681216e-01  -5.4623352e-01   1.6004855e-01   4.0881050e-01  -2.4614277e-01   1.9524711e-01   1.0831414e-01  -1.5394542e-02  -1.3208745e-02   4.2405604e-03   6.4021893e-03  -7.6763607e-02  -3.8146858e-02  -2.9805424e-02   2.7806794e-03  -2.4751694e-03  -4.5491189e-04   2.4864723e-02  -1.1444982e-02   1.1035347e-02   2.0152971e-02  -7.5783815e-03  -8.4373604e-04  -9.4224155e-03   6.3676041e-03   0.0000000e+00
-   0.0000000e+00   4.2776208e-01   6.9204897e+00   1.2145797e+00  -2.6128196e+00  -2.6972455e-01   2.0290605e+00   1.2853441e+00  -1.8304619e+00  -5.6107913e-01   1.0295657e+00  -1.0148335e+01  -5.9922826e-01   5.4387613e-01  -1.6018039e-01  -4.0878792e-01   2.4612917e-01  -1.9523633e-01  -1.0830815e-01   1.5393723e-02   1.3208030e-02  -4.2401117e-03  -6.4018406e-03   7.6759429e-02   3.8144802e-02   2.9803615e-02  -2.7805247e-03   2.4750340e-03   4.5488548e-04  -2.4863351e-02   1.1444351e-02  -1.1034740e-02  -2.0151861e-02   7.5778836e-03   8.4365009e-04   9.4214589e-03  -6.3672802e-03   0.0000000e+00
-   0.0000000e+00  -2.9936787e+01  -1.4702155e+01  -2.1551051e+01   2.5282705e+01   2.7330609e+00  -4.6452266e-01  -4.0114917e-01  -5.5606278e+01  -4.8099453e+01   6.4428318e+01  -1.6345271e+00  -3.2985340e-01  -7.1352765e-01  -1.3774755e-01  -3.8375055e-01   4.5788922e-01  -1.7261024e-01  -1.9483379e-01   1.9280450e-02   2.1471261e-02  -6.4558915e-03  -9.3076346e-03   7.0334568e-02   6.0954503e-02   5.1334818e-02  -6.2465966e-03   2.6915863e-03   1.6935066e-03  -2.2961826e-02   2.2607776e-02  -9.7476749e-03  -3.2383585e-02  -2.8507682e-03   2.9226959e-03   1.4477323e-02  -2.4360585e-02   0.0000000e+00
diff --git a/drake/examples/KukaArm/kuka_arm_DH_symbolic.m b/drake/examples/KukaArm/kuka_arm_DH_symbolic.m
new file mode 100644
index 000000000..bd559ac7b
--- /dev/null
+++ b/drake/examples/KukaArm/kuka_arm_DH_symbolic.m
@@ -0,0 +1,161 @@
+syms theta_1 theta_2 theta_3 theta_4 theta_5 theta_6 theta_7 theta_8 obj_x obj_y obj_z obj_yaw obj_pitch obj_roll T xB_x xB_y xB_z real
+state_vec = [theta_1 theta_2 theta_3 theta_4 theta_5 theta_6 theta_7 theta_8 obj_x obj_y obj_z obj_yaw obj_pitch obj_roll];
+
+d1 = 0.4200;
+d2 = 0.4000;
+a = zeros(1,7);
+alpha = [pi/2,-pi/2,-pi/2,pi/2,pi/2,-pi/2,0];
+d = [0,0,d1,0,d2,0,0];
+T = eye(4);
+
+A(:,:,1) = [cos(theta_1), 0,sin(theta_1), 0;
+    sin(theta_1),  0, -cos(theta_1), 0;
+    0, 1, 0, 0;
+    0, 0, 0, 1];
+
+A(:,:,2) = [cos(theta_2), 0, -sin(theta_2), 0;
+    sin(theta_2),  0, cos(theta_2), 0;
+    0, -1, 0, 0;
+    0, 0, 0, 1];
+
+A(:,:,3) = [cos(theta_3), 0, -sin(theta_3), 0;
+    sin(theta_3), 0, cos(theta_3), 0;
+    0, -1, 0, 0.42;
+    0, 0, 0, 1];
+
+A(:,:,4) = [cos(theta_4), 0, sin(theta_4), 0;
+    sin(theta_4), 0, -cos(theta_4), 0;
+    0, 1, 0, 0;
+    0, 0, 0, 1];
+A(:,:,5) = [cos(theta_5), 0, sin(theta_5), 0;
+    sin(theta_5), 0, -cos(theta_5), 0;
+    0, 1, 0, 2/5;
+    0, 0, 0,   1];
+
+A(:,:,6) = [cos(theta_6), 0, -sin(theta_6), 0;
+    sin(theta_6), 0, cos(theta_6), 0;
+    0, -1, 0, 0;
+    0, 0,  0, 1];
+
+A(:,:,7) = [cos(theta_7), -sin(theta_7), 0, 0;
+    sin(theta_7),  cos(theta_7), 0, 0;
+    0,  0, 1, 0;
+    0, 0, 0, 1];
+
+for i=1:7
+    T = T*A(:,:,i);
+end
+T = simplify(T);
+
+T = [sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))),   cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))), sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)), - (21*cos(theta_1)*sin(theta_2))/50 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))), - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))), cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))),   (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (21*sin(theta_1)*sin(theta_2))/50 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+    sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))),                                                                                                                                                                                                                                                                 cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))),                                                                                                                                                            sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)),                                                                        (21*cos(theta_2))/50 + (2*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;

+
+
+finger_contact_delta = 0.01;
+right_finger_y_shift = 0.04;
+R_DHbase_world = [-1,0,0;0,-1,0;0,0,1];% rotation from DH base coordinate to world coordinate (rotation around z axis)
+pos_ee = R_DHbase_world*[T(1,4);T(2,4);T(3,4)+0.36];%0.36 is the base vertical position w.r.t. world coordinate
+%R_ee = R_DHbase_world*T(1:3,1:3)*R_DHbase_world;
+%R_ee_fwdkin = rpy2rotmat(iiwa_link_7_init(4:6));
+
+fr1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+fr2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+fr3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+fr4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+
+fl1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(theta_8-0.04);0.081+0.1225];
+fl2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(theta_8-0.04);0.081+0.1025];
+fl3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(theta_8-0.04);0.081+0.1225];
+fl4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(theta_8-0.04);0.081+0.1025];
+
+cylinder_radius = 0.03;
+cylinder_height_half = 0.09;
+
+b = [obj_x obj_y obj_z obj_yaw obj_pitch obj_roll]';
+obj_pos = b(1:3);
+obj_ori = b(4:6);
+R_world_to_B = rpy2rotmat(obj_ori);
+            
+x_ground1A = obj_pos + R_world_to_B*[cylinder_radius;0;-cylinder_height_half];
+x_ground2A = obj_pos + R_world_to_B*[-cylinder_radius;0;-cylinder_height_half];
+x_ground3A = obj_pos + R_world_to_B*[0;cylinder_radius;-cylinder_height_half];
+x_ground4A = obj_pos + R_world_to_B*[0;-cylinder_radius;-cylinder_height_half];
+
+% Jacobian for A
+JA_x_ground1_theta1 = diff(x_ground1A,theta_1);
+JA_x_ground1_obj_x = diff(x_ground1A,obj_x);
+JA_x_ground1_obj_yaw = diff(x_ground1A,obj_yaw);
+
+JA_fr1_theta1 = diff(fr1,theta_1);
+JA_fr1_theta2 = diff(fr1,theta_1);
+JA_fr1_obj_yaw = diff(fr1,obj_yaw);
+
+%dJ, second derivative
+dJA_x_ground1_theta1 = diff([zeros(3*8,1);reshape(eye(3),[],1);diff(x_ground1A,obj_yaw);diff(x_ground1A,obj_pitch);diff(x_ground1A,obj_roll)],theta_1);
+
+dJA_fr1_theta1_theta1 = diff(fr1,theta_1,2);
+dJA_fr1_theta2_theta1 = diff(diff(fr1,theta_2),theta_1);
+dJA_fr1_theta1_to_8_theta1 = diff([diff(fr1,theta_1);diff(fr1,theta_2);diff(fr1,theta_3);diff(fr1,theta_4);diff(fr1,theta_5);diff(fr1,theta_6);diff(fr1,theta_7);diff(fr1,theta_8)],theta_1);
+dJA_fr2_theta1_to_8_theta1 = diff([diff(fr2,theta_1);diff(fr2,theta_2);diff(fr2,theta_3);diff(fr2,theta_4);diff(fr2,theta_5);diff(fr2,theta_6);diff(fr2,theta_7);diff(fr2,theta_8)],theta_1);
+dJA_fr3_theta1_to_8_theta1 = diff([diff(fr3,theta_1);diff(fr3,theta_2);diff(fr3,theta_3);diff(fr3,theta_4);diff(fr3,theta_5);diff(fr3,theta_6);diff(fr3,theta_7);diff(fr3,theta_8)],theta_1);
+dJA_fr4_theta1_to_8_theta1 = diff([diff(fr4,theta_1);diff(fr4,theta_2);diff(fr4,theta_3);diff(fr4,theta_4);diff(fr4,theta_5);diff(fr4,theta_6);diff(fr4,theta_7);diff(fr4,theta_8)],theta_1);
+dJA_fl1_theta1_to_8_theta1 = diff([diff(fl1,theta_1);diff(fl1,theta_2);diff(fl1,theta_3);diff(fl1,theta_4);diff(fl1,theta_5);diff(fl1,theta_6);diff(fl1,theta_7);diff(fl1,theta_8)],theta_1);
+dJA_fl2_theta1_to_8_theta1 = diff([diff(fl2,theta_1);diff(fl2,theta_2);diff(fl2,theta_3);diff(fl2,theta_4);diff(fl2,theta_5);diff(fl2,theta_6);diff(fl2,theta_7);diff(fl2,theta_8)],theta_1);
+dJA_fl3_theta1_to_8_theta1 = diff([diff(fl3,theta_1);diff(fl3,theta_2);diff(fl3,theta_3);diff(fl3,theta_4);diff(fl3,theta_5);diff(fl3,theta_6);diff(fl3,theta_7);diff(fl3,theta_8)],theta_1);
+dJA_fl4_theta1_to_8_theta1 = diff([diff(fl4,theta_1);diff(fl4,theta_2);diff(fl4,theta_3);diff(fl4,theta_4);diff(fl4,theta_5);diff(fl4,theta_6);diff(fl4,theta_7);diff(fl4,theta_8)],theta_1);
+
+dJA_fr1_obj_yaw_theta1 = diff(diff(fr1,obj_yaw),theta_1);
+dJA_fr1_obj_x_theta1 = diff(diff(fr1,obj_x),theta_1);
+dJA_fr1_obj_y_theta1 = diff(diff(fr1,obj_y),theta_1);
+dJA_fr1_obj_z_theta1 = diff(diff(fr1,obj_z),theta_1);
+
+fl1 = R_world_to_B'*fl1;
+fl2 = R_world_to_B'*fl2;
+fl3 = R_world_to_B'*fl3;
+fl4 = R_world_to_B'*fl4;
+
+fr1 = R_world_to_B'*fr1;
+fr2 = R_world_to_B'*fr2;
+fr3 = R_world_to_B'*fr3;
+fr4 = R_world_to_B'*fr4;
+
+b_local = R_world_to_B'*b(1:3);
+contact_pt(1) = b_local(1) + cylinder_radius/norm(fl1(1:2)-b_local(1:2)) * (fl1(1) - b_local(1));
+contact_pt(2) = b_local(2) + cylinder_radius/norm(fl1(1:2)-b_local(1:2)) * (fl1(2) - b_local(2));
+contact_pt(3) = fl1(3);
+
+% Jacobian for B
+xB_ground = [cylinder_radius, -cylinder_radius, 0, 0;
+             0, 0, cylinder_radius, -cylinder_radius;
+             -cylinder_height_half, -cylinder_height_half, -cylinder_height_half, -cylinder_height_half];
+
+x_ground1B = b(1:3) + R_world_to_B*xB_ground(:,1);
+x_ground2B = b(1:3) + R_world_to_B*xB_ground(:,2);
+x_ground3B = b(1:3) + R_world_to_B*xB_ground(:,3);
+x_ground4B = b(1:3) + R_world_to_B*xB_ground(:,4);
+
+JB_ground1_theta1 = diff(x_ground1B,theta_1);
+
+right_normal1 = [fr1(1:2) - b_local(1:2);0];
+right_normal1 = right_normal1./sqrt(right_normal1'*right_normal1);
+
+% full version
+fr1_B = cylinder_radius*right_normal1;
+fr1_B(3) = fr1(3) - b_local(3);
+
+%dJ, second derivative, full version
+fr1_B = b(1:3) + R_world_to_B*fr1_B;
+dJB_fr1_theta1 = diff(fr1_B,theta_1,2);
+dJB_fr1_obj_yaw = diff(diff(fr1_B,obj_yaw),theta_1);
+
+%simplified version, assuming the contact point is known
+fr1_B = b(1:3) + R_world_to_B*[xB_x xB_y xB_z]';
+JB_fr1_obj_yaw = diff(fr1_B,obj_yaw);
+JB_fr1_obj_ori = [diff(fr1_B,obj_yaw),diff(fr1_B,obj_pitch),diff(fr1_B,obj_roll)];
+
+%dJ, second derivative, simplified version, assuming the contact point is known
+fr1_B = b(1:3) + R_world_to_B*[xB_x xB_y xB_z]';
+dJB_fr1_theta1_theta1 = diff(fr1_B,theta_1,2);
+dJB_fr1_obj_yaw_theta1 = diff(diff(fr1_B,obj_yaw),theta_1);
diff --git a/drake/examples/KukaArm/kuka_arm_DH_symbolic_global.m b/drake/examples/KukaArm/kuka_arm_DH_symbolic_global.m
new file mode 100644
index 000000000..6711e7f27
--- /dev/null
+++ b/drake/examples/KukaArm/kuka_arm_DH_symbolic_global.m
@@ -0,0 +1,204 @@
+syms theta_1 theta_2 theta_3 theta_4 theta_5 theta_6 theta_7 theta_8 obj_x obj_y obj_z obj_yaw obj_pitch obj_roll T xB_x xB_y xB_z fr1x fr1y fr1z real
+syms right_normal1_x right_normal1_y right_normal1_z real
+state_vec = [theta_1 theta_2 theta_3 theta_4 theta_5 theta_6 theta_7 theta_8 obj_x obj_y obj_z obj_yaw obj_pitch obj_roll];
+
+d1 = 0.4200;
+d2 = 0.4000;
+a = zeros(1,7);
+alpha = [pi/2,-pi/2,-pi/2,pi/2,pi/2,-pi/2,0];
+d = [0,0,d1,0,d2,0,0];
+T = eye(4);
+
+A(:,:,1) = [cos(theta_1), 0,sin(theta_1), 0;
+    sin(theta_1),  0, -cos(theta_1), 0;
+    0, 1, 0, 0;
+    0, 0, 0, 1];
+
+A(:,:,2) = [cos(theta_2), 0, -sin(theta_2), 0;
+    sin(theta_2),  0, cos(theta_2), 0;
+    0, -1, 0, 0;
+    0, 0, 0, 1];
+
+A(:,:,3) = [cos(theta_3), 0, -sin(theta_3), 0;
+    sin(theta_3), 0, cos(theta_3), 0;
+    0, -1, 0, 0.42;
+    0, 0, 0, 1];
+
+A(:,:,4) = [cos(theta_4), 0, sin(theta_4), 0;
+    sin(theta_4), 0, -cos(theta_4), 0;
+    0, 1, 0, 0;
+    0, 0, 0, 1];
+A(:,:,5) = [cos(theta_5), 0, sin(theta_5), 0;
+    sin(theta_5), 0, -cos(theta_5), 0;
+    0, 1, 0, 2/5;
+    0, 0, 0,   1];
+
+A(:,:,6) = [cos(theta_6), 0, -sin(theta_6), 0;
+    sin(theta_6), 0, cos(theta_6), 0;
+    0, -1, 0, 0;
+    0, 0,  0, 1];
+
+A(:,:,7) = [cos(theta_7), -sin(theta_7), 0, 0;
+    sin(theta_7),  cos(theta_7), 0, 0;
+    0,  0, 1, 0;
+    0, 0, 0, 1];
+
+for i=1:7
+    T = T*A(:,:,i);
+end
+T = simplify(T);
+
+T = [sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))),   cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) + sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))), sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))) - cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)), - (21*cos(theta_1)*sin(theta_2))/50 - (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 - (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+    cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))) - sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))), - cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))) - sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))), cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) - sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))),   (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 - (21*sin(theta_1)*sin(theta_2))/50 - (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+    sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) - cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))),                                                                                                                                                                                                                                                                 cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)) + sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))),                                                                                                                                                            sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) + cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)),                                                                        (21*cos(theta_2))/50 + (2*cos(theta_2)*cos(theta_4))/5 + (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5;

+
+
+finger_contact_delta = 0.01;
+right_finger_y_shift = 0.04;
+R_DHbase_world = [-1,0,0;0,-1,0;0,0,1];% rotation from DH base coordinate to world coordinate (rotation around z axis)
+pos_ee = R_DHbase_world*[T(1,4);T(2,4);T(3,4)+0.36];%0.36 is the base vertical position w.r.t. world coordinate
+%R_ee = R_DHbase_world*T(1:3,1:3)*R_DHbase_world;
+%R_ee_fwdkin = rpy2rotmat(iiwa_link_7_init(4:6));
+
+fr1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+fr2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+fr3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1225];
+fr4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;-right_finger_y_shift;0.081+0.1025];
+
+fl1 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(theta_8-0.04);0.081+0.1225];
+fl2 = pos_ee + R_DHbase_world*T(1:3,1:3)*[-finger_contact_delta;(theta_8-0.04);0.081+0.1025];
+fl3 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(theta_8-0.04);0.081+0.1225];
+fl4 = pos_ee + R_DHbase_world*T(1:3,1:3)*[finger_contact_delta;(theta_8-0.04);0.081+0.1025];
+
+J_fr1_theta_1 = jacobian(fr1,theta_1);
+dJ_fr1_theta_1_theta_1 = jacobian(jacobian(fr1,theta_1),theta_1);
+
+
+cylinder_radius = 0.03;
+cylinder_height_half = 0.09;
+
+fr1 = [fr1x;fr1y;fr1z];
+b = [obj_x obj_y obj_z obj_yaw obj_pitch obj_roll]';
+obj_pos = b(1:3);
+obj_ori = b(4:6);
+R_world_to_B = rpy2rotmat(obj_ori);
+
+x_ground1A = obj_pos + R_world_to_B*[cylinder_radius;0;-cylinder_height_half];
+x_ground2A = obj_pos + R_world_to_B*[-cylinder_radius;0;-cylinder_height_half];
+x_ground3A = obj_pos + R_world_to_B*[0;cylinder_radius;-cylinder_height_half];
+x_ground4A = obj_pos + R_world_to_B*[0;-cylinder_radius;-cylinder_height_half];
+
+% Jacobian for A
+JA_x_ground1_theta1 = diff(x_ground1A,theta_1);
+JA_x_ground1_obj_x = diff(x_ground1A,obj_x);
+JA_x_ground1_obj_yaw = diff(x_ground1A,obj_yaw);
+
+JA_fr1_theta1 = diff(fr1,theta_1);
+JA_fr1_theta2 = diff(fr1,theta_1);
+JA_fr1_obj_yaw = diff(fr1,obj_yaw);
+
+%dJ, second derivative
+dJA_x_ground1_theta1 = diff([zeros(3*8,1);reshape(eye(3),[],1);diff(x_ground1A,obj_yaw);diff(x_ground1A,obj_pitch);diff(x_ground1A,obj_roll)],theta_1);
+
+dJA_fr1_theta1_theta1 = diff(fr1,theta_1,2);
+dJA_fr1_theta2_theta1 = diff(diff(fr1,theta_2),theta_1);
+dJA_fr1_theta1_to_8_theta_1 = diff([diff(fr1,theta_1);diff(fr1,theta_2);diff(fr1,theta_3);diff(fr1,theta_4);diff(fr1,theta_5);diff(fr1,theta_6);diff(fr1,theta_7);diff(fr1,theta_8)],theta_1);
+dJA_fr2_theta1_to_8_theta_1 = diff([diff(fr2,theta_1);diff(fr2,theta_2);diff(fr2,theta_3);diff(fr2,theta_4);diff(fr2,theta_5);diff(fr2,theta_6);diff(fr2,theta_7);diff(fr2,theta_8)],theta_1);
+dJA_fr3_theta1_to_8_theta_1 = diff([diff(fr3,theta_1);diff(fr3,theta_2);diff(fr3,theta_3);diff(fr3,theta_4);diff(fr3,theta_5);diff(fr3,theta_6);diff(fr3,theta_7);diff(fr3,theta_8)],theta_1);
+dJA_fr4_theta1_to_8_theta_1 = diff([diff(fr4,theta_1);diff(fr4,theta_2);diff(fr4,theta_3);diff(fr4,theta_4);diff(fr4,theta_5);diff(fr4,theta_6);diff(fr4,theta_7);diff(fr4,theta_8)],theta_1);
+dJA_fl1_theta1_to_8_theta_1 = diff([diff(fl1,theta_1);diff(fl1,theta_2);diff(fl1,theta_3);diff(fl1,theta_4);diff(fl1,theta_5);diff(fl1,theta_6);diff(fl1,theta_7);diff(fl1,theta_8)],theta_1);
+dJA_fl2_theta1_to_8_theta_1 = diff([diff(fl2,theta_1);diff(fl2,theta_2);diff(fl2,theta_3);diff(fl2,theta_4);diff(fl2,theta_5);diff(fl2,theta_6);diff(fl2,theta_7);diff(fl2,theta_8)],theta_1);
+dJA_fl3_theta1_to_8_theta_1 = diff([diff(fl3,theta_1);diff(fl3,theta_2);diff(fl3,theta_3);diff(fl3,theta_4);diff(fl3,theta_5);diff(fl3,theta_6);diff(fl3,theta_7);diff(fl3,theta_8)],theta_1);
+dJA_fl4_theta1_to_8_theta_1 = diff([diff(fl4,theta_1);diff(fl4,theta_2);diff(fl4,theta_3);diff(fl4,theta_4);diff(fl4,theta_5);diff(fl4,theta_6);diff(fl4,theta_7);diff(fl4,theta_8)],theta_1);
+
+dJA_fr1_theta1_to_8_obj_x = diff([diff(fr1,obj_x);diff(fr1,obj_y);diff(fr1,obj_z);diff(fr1,obj_yaw);diff(fr1,obj_pitch);diff(fr1,obj_roll)],theta_3);
+
+
+dJA_fr1_obj_yaw_theta1 = diff(diff(fr1,obj_yaw),theta_1);
+dJA_fr1_obj_x_theta1 = diff(diff(fr1,obj_x),theta_1);
+dJA_fr1_obj_y_theta1 = diff(diff(fr1,obj_y),theta_1);
+dJA_fr1_obj_z_theta1 = diff(diff(fr1,obj_z),theta_1);
+
+fl1 = R_world_to_B'*fl1;
+fl2 = R_world_to_B'*fl2;
+fl3 = R_world_to_B'*fl3;
+fl4 = R_world_to_B'*fl4;
+
+fr1 = R_world_to_B'*fr1;
+fr2 = R_world_to_B'*fr2;
+fr3 = R_world_to_B'*fr3;
+fr4 = R_world_to_B'*fr4;
+
+b_local = R_world_to_B'*b(1:3);
+contact_pt(1,:) = b_local(1) + cylinder_radius/norm(fr1(1:2)-b_local(1:2)) * (fr1(1) - b_local(1));
+contact_pt(2,:) = b_local(2) + cylinder_radius/norm(fr1(1:2)-b_local(1:2)) * (fr1(2) - b_local(2));
+contact_pt(3,:) = fr1(3);
+contact_pt = R_world_to_B*contact_pt;
+
+% Jacobian for B
+xB_ground = [cylinder_radius, -cylinder_radius, 0, 0;
+    0, 0, cylinder_radius, -cylinder_radius;
+    -cylinder_height_half, -cylinder_height_half, -cylinder_height_half, -cylinder_height_half];
+
+x_ground1B = b(1:3) + R_world_to_B*xB_ground(:,1);
+x_ground2B = b(1:3) + R_world_to_B*xB_ground(:,2);
+x_ground3B = b(1:3) + R_world_to_B*xB_ground(:,3);
+x_ground4B = b(1:3) + R_world_to_B*xB_ground(:,4);
+
+JB_ground1_theta1 = diff(x_ground1B,theta_1);
+
+right_normal1 = [fr1(1:2) - b_local(1:2);0];
+right_normal1 = right_normal1./sqrt(right_normal1'*right_normal1);
+
+dright_normal1_dfr1 = jacobian(right_normal1,[fr1x,fr1y,fr1z]);
+ddright_normal1_ddfr1x = jacobian(right_normal1,[fr1x]);
+ddright_normal1_ddfr1y = jacobian(right_normal1,[fr1y]);
+ddright_normal1_ddfr1z = jacobian(right_normal1,[fr1z]);
+
+% chain rule
+right_normal1 = [right_normal1_x right_normal1_y right_normal1_z]';
+
+fr1_B = cylinder_radius*right_normal1;
+fr1_B(3) = fr1(3) - b_local(3);
+
+fr1_B = b(1:3) + R_world_to_B*fr1_B;
+JB_fr1_theta1 = diff(fr1_B,theta_1);
+
+% chain rule
+dfr1_B_dright_normal = jacobian(fr1_B,[right_normal1_x right_normal1_y right_normal1_z]);
+% dfr1_B_dright_normal = [ (3*cos(obj_roll)*cos(obj_pitch))/100, (3*cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch))/100 - (3*cos(obj_yaw)*sin(obj_roll))/100, 0;
+%  (3*cos(obj_pitch)*sin(obj_roll))/100, (3*cos(obj_yaw)*cos(obj_roll))/100 + (3*sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch))/100, 0;
+%               -(3*sin(obj_pitch))/100,                                                    (3*cos(obj_pitch)*sin(obj_yaw))/100, 0];
+ 
+
+dvecAdx = jacobian(vec(dfr1_B_dright_normal),[fr1x;fr1y;fr1z]);
+
+ddfr1_B_ddright_normal1 = jacobian(dfr1_B_dright_normal(:,1),[right_normal1_x right_normal1_y right_normal1_z]);
+ddfr1_B_ddright_normal2 = jacobian(dfr1_B_dright_normal(:,2),[right_normal1_x right_normal1_y right_normal1_z]);
+ddfr1_B_ddright_normal3 = jacobian(dfr1_B_dright_normal(:,3),[right_normal1_x right_normal1_y right_normal1_z]);
+
+%[ddfr1_B_ddright_normal1*dright_normal1_dfr1(:,1),
+%ddfr1_B_ddright_normal2*dright_normal1_dfr1(:,1),
+%ddfr1_B_ddright_normal3*dright_normal1_dfr1(:,1)] * dright_normal1_dfr1
+
+%+ dright_normal1_dfr1*ddright_normal1_ddfr1x
+JB_fr1_B_fr1x = jacobian(fr1_B,[fr1x]);
+
+JB_fr1_B_fr1orignial = jacobian(fr1_B,[fr1x,fr1y,fr1z]);
+dJB_fr1_B_fr1orignial1 = jacobian(JB_fr1_B_fr1orignial(:,1),[fr1x,fr1y,fr1z]);
+dJB_fr1_B_fr1orignial2 = jacobian(JB_fr1_B_fr1orignial(:,2),[fr1x,fr1y,fr1z]);
+dJB_fr1_B_fr1orignial3 = jacobian(JB_fr1_B_fr1orignial(:,3),[fr1x,fr1y,fr1z]);
+
+dJB_fr1_theta1 = diff(fr1_B,theta_1,2);
+dJB_fr1_obj_yaw = diff(diff(fr1_B,obj_yaw),theta_1);
+
+%simplified version, assuming the contact point is known
+fr1_B = b(1:3) + R_world_to_B*[xB_x xB_y xB_z]';
+JB_fr1_obj_yaw = diff(fr1_B,obj_yaw);
+JB_fr1_obj_ori = [diff(fr1_B,obj_yaw),diff(fr1_B,obj_pitch),diff(fr1_B,obj_roll)];
+
+%dJ, second derivative, simplified version, assuming the contact point is known
+fr1_B = b(1:3) + R_world_to_B*[xB_x xB_y xB_z]';
+dJB_fr1_theta1_theta1 = diff(fr1_B,theta_1,2);
+dJB_fr1_obj_yaw_theta1 = diff(diff(fr1_B,obj_yaw),theta_1);
diff --git a/drake/examples/KukaArm/normal_d_analytical.m b/drake/examples/KukaArm/normal_d_analytical.m
new file mode 100644
index 000000000..bc7ccd3e1
--- /dev/null
+++ b/drake/examples/KukaArm/normal_d_analytical.m
@@ -0,0 +1,34 @@
+function [normal, d, mu] = normal_d_analytical(q)
+theta_1 = q(1);theta_2 = q(2);theta_3 = q(3);theta_4 = q(4);theta_5 = q(5);theta_6 = q(6);theta_7 = q(7);theta_8 = q(8);
+obj_x = q(9); obj_y = q(10); obj_z = q(11); obj_yaw = q(12); obj_pitch = q(13); obj_roll = q(14);
+
+R_world_to_B = rpy2rotmat([obj_yaw;obj_pitch;obj_roll]);
+
+fr1 = [(21*cos(theta_1)*sin(theta_2))/50 + (407*cos(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/100 + (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/25 + (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) + cos(theta_1)*cos(theta_4)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3)))))/25 - (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/2000 + (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)) - cos(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_3)*sin(theta_1) + cos(theta_1)*cos(theta_2)*sin(theta_3))))/100 + (2*sin(theta_4)*(sin(theta_1)*sin(theta_3) - cos(theta_1)*cos(theta_2)*cos(theta_3)))/5 + (2*cos(theta_1)*cos(theta_4)*sin(theta_2))/5;
+    (21*sin(theta_1)*sin(theta_2))/50 - (407*cos(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)))/2000 - (cos(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/25 + (cos(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/100 - (2*sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)))/5 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) - cos(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3))))/100 - (sin(theta_7)*(sin(theta_6)*(sin(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) - cos(theta_4)*sin(theta_1)*sin(theta_2)) + cos(theta_6)*(cos(theta_5)*(cos(theta_4)*(cos(theta_1)*sin(theta_3) + cos(theta_2)*cos(theta_3)*sin(theta_1)) + sin(theta_1)*sin(theta_2)*sin(theta_4)) + sin(theta_5)*(cos(theta_1)*cos(theta_3) - cos(theta_2)*sin(theta_1)*sin(theta_3)))))/25 + (2*cos(theta_4)*sin(theta_1)*sin(theta_2))/5;
+    (21*cos(theta_2))/50 + (2*cos(theta_2)*cos(theta_4))/5 - (cos(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/25 + (407*sin(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)))/2000 - (sin(theta_7)*(sin(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) - cos(theta_5)*sin(theta_2)*sin(theta_3)))/100 + (407*cos(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4)))/2000 + (cos(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/100 - (sin(theta_7)*(cos(theta_6)*(cos(theta_5)*(cos(theta_2)*sin(theta_4) - cos(theta_3)*cos(theta_4)*sin(theta_2)) + sin(theta_2)*sin(theta_3)*sin(theta_5)) - sin(theta_6)*(cos(theta_2)*cos(theta_4) + cos(theta_3)*sin(theta_2)*sin(theta_4))))/25 + (2*cos(theta_3)*sin(theta_2)*sin(theta_4))/5 + 9/25];
+fr1x = fr1(1);
+fr1y = fr1(2);
+fr1z = fr1(3);
+
+right_normal1 = [                                                                                                                                                                                                           -(fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2);
+    -(fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))/((fr1x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) - fr1y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - obj_x*(cos(obj_yaw)*sin(obj_roll) - cos(obj_roll)*sin(obj_yaw)*sin(obj_pitch)) + obj_y*(cos(obj_yaw)*cos(obj_roll) + sin(obj_yaw)*sin(obj_roll)*sin(obj_pitch)) - fr1z*cos(obj_pitch)*sin(obj_yaw) + obj_z*cos(obj_pitch)*sin(obj_yaw))^2 + (fr1z*sin(obj_pitch) - obj_z*sin(obj_pitch) - fr1x*cos(obj_roll)*cos(obj_pitch) + obj_x*cos(obj_roll)*cos(obj_pitch) - fr1y*cos(obj_pitch)*sin(obj_roll) + obj_y*cos(obj_pitch)*sin(obj_roll))^2)^(1/2);
+    0];
+
+% Tr11 = [right_normal1(2), -right_normal1(1),0];%cross(right_normal1,[0;0;1]);
+% Tr11 = Tr11/norm(Tr11);
+% Tr12 = cross(right_normal1,Tr11);
+
+x = right_normal1(1); y = right_normal1(2); z = right_normal1(3);
+Tr11 = [y,-x,0]';
+Tr12 = [(x*z)/(abs(x)^2 + abs(y)^2)^(1/2);
+    (y*z)/(abs(x)^2 + abs(y)^2)^(1/2);
+    - x^2/(abs(x)^2 + abs(y)^2)^(1/2) - y^2/(abs(x)^2 + abs(y)^2)^(1/2)];
+
+normal = right_normal1;
+normal = R_world_to_B*normal;
+
+d = R_world_to_B*[Tr11, Tr12];
+%d = 0;
+mu = 0;
+end
\ No newline at end of file
diff --git a/drake/examples/KukaArm/u_data.dat b/drake/examples/KukaArm/u_data.dat
deleted file mode 100644
index 9a652bd5b..000000000
--- a/drake/examples/KukaArm/u_data.dat
+++ /dev/null
@@ -1,8 +0,0 @@
-  -6.9094948e-03  -7.4736226e-02   1.2412620e-01  -6.4168404e-02   1.2856531e-01   1.1356123e-01   7.2381055e-02   2.3162806e-02  -3.4108438e-02   1.2702505e-01
-   6.2457592e+01   6.4799106e+01   6.7561910e+01   7.0053425e+01   7.0162450e+01   7.0177531e+01   7.0226027e+01   7.0280956e+01   7.0465502e+01   7.0550208e+01
-   8.9820302e-01   7.5088886e-01   8.0928147e-01   8.0562426e-01   9.5241546e-01   8.4928681e-01   7.5656102e-01   7.6103611e-01   6.3069591e-01   6.9211758e-01
-  -8.1542106e+00  -9.7194827e+00  -1.1415903e+01  -1.2849405e+01  -1.2915169e+01  -1.3934647e+01  -1.5125782e+01  -1.6535452e+01  -1.7650688e+01  -1.8833966e+01
-   3.2965021e-01   2.5861931e-01   4.1322797e-01   1.5668638e-01   3.5500568e-01   2.3905641e-01   2.6812675e-01   3.7968058e-01   5.6075328e-01   5.1494485e-01
-   1.6873755e+00   1.8331028e+00   1.7786659e+00   1.8195691e+00   1.8467488e+00   1.8074538e+00   1.8226090e+00   1.7752317e+00   1.8765338e+00   1.6944060e+00
-   1.8667628e-01  -1.1719770e-01   9.6407286e-02   1.5491367e-01   2.7906924e-02   2.2475592e-01  -1.2334248e-01  -6.5098892e-02  -2.4363450e-02  -5.7935247e-02
-  -5.0108332e+00  -4.9880346e+00  -4.9680741e+00  -5.1166399e+00  -5.1276246e+00  -4.8742388e+00  -5.0720519e+00  -4.9116842e+00  -4.8349468e+00  -5.1098467e+00
diff --git a/drake/examples/KukaArm/x_data.dat b/drake/examples/KukaArm/x_data.dat
deleted file mode 100644
index 256a3e7fb..000000000
--- a/drake/examples/KukaArm/x_data.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-  -1.5986000e+00  -1.6461579e+00  -1.5034472e+00  -1.7129870e+00  -1.5677527e+00  -1.4688253e+00  -1.0514299e+00  -1.1391728e+00  -7.1400451e-01  -7.3230609e-01
-  -1.2044895e+00  -1.1782664e+00  -1.4735586e+00  -1.3825863e+00  -1.3675684e+00  -1.2631587e+00  -1.1361547e+00  -1.2197349e+00  -9.7640371e-01  -1.2658849e+00
-  -2.1812859e-02  -1.6486241e-03  -5.8423058e-02   6.5201525e-02   4.1903492e-02   1.6006859e-02  -3.9592162e-02   1.4051400e-01  -1.7679938e-01  -1.0768716e-01
-   1.5921764e+00   1.5496751e+00   1.4304463e+00   1.2995520e+00   1.2989861e+00   1.4397874e+00   1.2852618e+00   1.1413716e+00   1.0487916e+00   1.2494573e+00
-   9.1993219e-02   5.0196477e-02  -2.2961913e-03  -1.4584301e-01   6.1230980e-02  -3.6239814e-02   2.5795099e-02   2.7893588e-02   4.5337301e-02   6.2856349e-02
-   1.1745485e+00   1.1792936e+00   1.0825638e+00   1.0457538e+00   9.8728731e-01   1.1297488e+00   8.6646340e-01   1.0469839e+00   9.5577817e-01   9.0198401e-01
-   3.0336428e-02  -1.4504183e-02   9.9488779e-02   8.6421585e-02  -1.4177097e-03  -3.2087312e-02   8.4995642e-02  -2.0625992e-01   1.5727567e-01  -1.5240949e-01
-   1.8069695e-01   1.5450713e-01  -4.5404068e-02   1.2583291e-01   2.9686827e-02   7.2798540e-02   1.9977964e-01  -2.8524009e-02  -5.8995676e-02   1.6649668e-01
-  -4.8483421e-02  -8.1402026e-03   7.9080746e-02   7.1217823e-02  -2.0309410e-02  -3.4715199e-01  -2.3598068e-01  -4.2413829e-01  -3.7344513e-01  -6.8017302e-01
-   7.7691438e-01   9.8487081e-01   6.1125381e-01   8.2661857e-01   9.0458317e-01   7.4285301e-01   8.7655885e-01   6.5428727e-01   8.2759104e-01   7.1968531e-01
-   8.2652090e-02   1.3015752e-01   2.1642552e-02   7.6589188e-02   1.8243015e-01   1.6153442e-01   1.2332260e-01   2.8098006e-01   3.5177135e-01   3.6815897e-01
-   1.8745331e-03   2.8250081e-02  -5.0587088e-02  -4.9280558e-02  -6.8402977e-02  -2.2428218e-02  -3.5375963e-02  -1.3823052e-01   9.2976596e-02   2.3351639e-01
-  -2.8484149e-02  -4.3804383e-02   2.4642202e-02   2.4584717e-01  -5.0075131e-02   9.5049200e-02  -4.8625005e-02  -1.2958103e-01  -1.3206075e-02   4.6828488e-03
-   6.2337329e-04  -2.2757253e-02   1.9240817e-01   1.4844416e-01   2.6884014e-02   3.3659115e-01   3.1684584e-01   3.4933641e-01   5.8812763e-01   9.3515898e-01
-  -1.0408106e-01   1.2631195e-02  -6.1875641e-03  -1.2434530e-01   1.5425213e-01   3.5766603e-02  -9.2527946e-02   1.4728832e-01  -1.0489638e-01  -6.8465328e-02
-   8.6402881e-02  -1.3725553e-03   2.4518842e-01   1.9044756e-01  -6.7984353e-02   1.0509708e-02   3.4961964e-02   1.4196973e-01   2.8511554e-02   1.4418586e-01
-  -2.3440023e-01  -2.9590437e-02   2.5452277e-01   1.4576051e-02   9.1886638e-02  -5.5409761e-02  -6.5548324e-02   5.8077366e-02   1.1957282e-01  -2.7241209e-02
-  -8.2679534e-02   5.0555934e-02  -1.4793454e-01   2.1394866e-03   3.2688510e-02  -7.0814535e-02  -6.9784512e-02   4.2640064e-02  -7.5767528e-02   4.6865291e-02
-   1.6957330e-02  -2.4356440e-01  -3.1596699e-02   7.7645230e-02  -1.3096009e-01   6.4326755e-02  -1.4938318e-01  -6.4411222e-02  -3.9832755e-02   3.8468159e-02
-   5.9818989e-02  -1.7892697e-02   2.8271266e-02  -1.5799751e-01   2.2334641e-02  -9.4607705e-02  -5.2675183e-03  -1.3894635e-01   1.1667517e-02  -1.3201630e-01
-   4.3349652e-02  -5.7134398e-02   2.8534364e-01   4.2498208e-02  -1.0495378e-01  -1.8236623e-02  -1.4114656e-01   1.2326238e-02   8.1154438e-02   3.9073049e-02
-   1.7937028e-02  -2.8944969e-02  -1.5565073e-03  -9.0029948e-02   5.6975976e-02  -2.2222926e-02  -1.3568850e-01  -1.0465820e-02   9.5440525e-02  -3.8128879e-02
-  -1.4322791e-02   1.0657513e-01  -1.1181320e-01   6.8775047e-02  -9.4527360e-02  -2.4543590e-01  -1.9493496e-02   1.8468979e-01  -9.7882334e-03   5.8527133e-02
-  -1.5222926e-01   8.8856279e-03  -2.0315151e-01   4.7605128e-02  -6.8107473e-03   1.6572992e-01  -4.4166913e-02  -1.1155483e-02   1.0189246e-01  -2.0637750e-01
-  -1.1141920e-02  -9.6859827e-02  -1.8431896e-01  -1.5167909e-01  -4.8245060e-02   1.2176429e-01  -2.1106113e-02   1.3398159e-01   1.0808105e-02   3.2225022e-02
-   5.0366367e-02  -1.2754523e-01   9.1130896e-03   2.5593286e-03  -1.1203053e-01   7.8662360e-02  -5.1566823e-03   1.7909526e-02   1.3806427e-02  -4.8095412e-02
-   9.5134938e-02  -1.4623452e-02  -1.4143472e-02  -6.8428898e-02   3.3620915e-02  -1.6670219e-01   2.0058643e-01  -7.2286526e-02   1.4973465e-02   8.4150502e-02
-   1.9009402e-02  -1.7466077e-02  -1.3517201e-01  -1.1301446e-01  -9.4065448e-02  -1.2665572e-01   8.7245415e-02  -5.4751926e-02   1.0644393e-01   5.3994589e-02
diff --git a/drake/examples/KukaArm/x_nonpar.dat b/drake/examples/KukaArm/x_nonpar.dat
deleted file mode 100644
index 21cd7304a..000000000
--- a/drake/examples/KukaArm/x_nonpar.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-  -1.5993270e+00  -1.6025559e+00  -1.6024281e+00  -1.6024522e+00  -1.6025083e+00  -1.6024996e+00  -1.6025035e+00  -1.6025585e+00  -1.6025112e+00  -1.6024081e+00  -1.6023801e+00  -1.6024173e+00  -1.6024926e+00  -1.6024568e+00  -1.6023319e+00  -1.6024847e+00  -1.6024414e+00  -1.6024715e+00  -1.6024278e+00  -1.6024744e+00  -1.6024327e+00  -1.6024766e+00  -1.6024753e+00  -1.6024701e+00  -1.6024575e+00  -1.6024574e+00  -1.6024551e+00  -1.6024692e+00  -1.6024364e+00  -1.6055330e+00  -1.6023703e+00  -1.6025208e+00  -1.6024617e+00  -1.6024194e+00  -1.6024359e+00  -1.6024343e+00  -1.6023810e+00  -1.6024311e+00  -1.6025090e+00  -1.6025182e+00  -1.6024509e+00  -1.6024297e+00  -1.6024239e+00  -1.6025525e+00  -1.6023912e+00  -1.6024869e+00  -1.6024565e+00  -1.6024632e+00  -1.6024675e+00  -1.6024319e+00  -1.6024623e+00  -1.6024444e+00  -1.6024450e+00  -1.6024690e+00  -1.6024362e+00  -1.6024682e+00  -1.6024668e+00  -1.6024618e+00
-  -1.2019076e+00  -1.1985897e+00  -1.2018294e+00  -1.2019343e+00  -1.2018447e+00  -1.2018623e+00  -1.2018562e+00  -1.2018389e+00  -1.2018460e+00  -1.2019265e+00  -1.2021000e+00  -1.2018867e+00  -1.2018384e+00  -1.2018513e+00  -1.2019820e+00  -1.2018106e+00  -1.2018532e+00  -1.2018475e+00  -1.2019483e+00  -1.2018416e+00  -1.2019221e+00  -1.2018429e+00  -1.2018354e+00  -1.2018422e+00  -1.2018511e+00  -1.2018511e+00  -1.2018684e+00  -1.2018400e+00  -1.2018971e+00  -1.2018984e+00  -1.2051058e+00  -1.2018440e+00  -1.2017966e+00  -1.2018468e+00  -1.2018200e+00  -1.2018241e+00  -1.2018477e+00  -1.2018326e+00  -1.2017947e+00  -1.2018518e+00  -1.2018802e+00  -1.2018568e+00  -1.2019365e+00  -1.2018106e+00  -1.2020282e+00  -1.2018406e+00  -1.2018422e+00  -1.2018346e+00  -1.2018356e+00  -1.2021692e+00  -1.2018362e+00  -1.2020459e+00  -1.2020872e+00  -1.2018413e+00  -1.2018976e+00  -1.2018404e+00  -1.2018409e+00  -1.2018464e+00
-  -2.0413049e-02  -2.0599877e-02  -1.7590743e-02  -2.0652396e-02  -2.0612654e-02  -2.0621020e-02  -2.0575027e-02  -2.0608075e-02  -2.0395153e-02  -2.0363308e-02  -2.0808695e-02  -2.0511298e-02  -2.0560959e-02  -2.0535139e-02  -2.0732583e-02  -2.0623677e-02  -2.0572222e-02  -2.0551307e-02  -2.0752595e-02  -2.0555278e-02  -2.0680696e-02  -2.0567807e-02  -2.0545510e-02  -2.0553565e-02  -2.0534583e-02  -2.0535358e-02  -2.0608682e-02  -2.0554501e-02  -2.0634776e-02  -2.0799907e-02  -2.0492607e-02  -2.3540155e-02  -2.0540849e-02  -2.0491355e-02  -2.0478727e-02  -2.0526434e-02  -2.0484720e-02  -2.0712535e-02  -2.0639184e-02  -2.0650725e-02  -2.0612216e-02  -2.0521672e-02  -2.0734885e-02  -2.0571773e-02  -2.0763224e-02  -2.0541175e-02  -2.0537590e-02  -2.0556203e-02  -2.0560121e-02  -2.0847476e-02  -2.0538755e-02  -2.0846015e-02  -2.0851376e-02  -2.0560379e-02  -2.0635247e-02  -2.0549839e-02  -2.0542065e-02  -2.0538385e-02
-   1.5981103e+00   1.5985833e+00   1.5981906e+00   1.6013311e+00   1.5983963e+00   1.5983238e+00   1.5983080e+00   1.5981297e+00   1.5982616e+00   1.5984460e+00   1.5987333e+00   1.5985278e+00   1.5985094e+00   1.5985072e+00   1.5985909e+00   1.5985037e+00   1.5984890e+00   1.5984956e+00   1.5985852e+00   1.5984638e+00   1.5985531e+00   1.5984755e+00   1.5984996e+00   1.5984966e+00   1.5984993e+00   1.5984992e+00   1.5985477e+00   1.5985079e+00   1.5985700e+00   1.5989895e+00   1.5984270e+00   1.5988349e+00   1.5957331e+00   1.5986267e+00   1.5986855e+00   1.5987010e+00   1.5988648e+00   1.5987514e+00   1.5984687e+00   1.5985547e+00   1.5985243e+00   1.5984942e+00   1.5986078e+00   1.5985481e+00   1.5986882e+00   1.5985344e+00   1.5985091e+00   1.5985522e+00   1.5985549e+00   1.5989007e+00   1.5985374e+00   1.5986927e+00   1.5987693e+00   1.5985120e+00   1.5985699e+00   1.5985041e+00   1.5984979e+00   1.5984982e+00
-  -4.6456521e-02  -4.9116941e-02  -4.6799358e-02  -4.2796663e-02  -4.5178127e-02  -4.7302565e-02  -4.7214030e-02  -5.4320469e-02  -4.6566402e-02  -3.4253202e-02  -4.6918507e-02  -4.7803353e-02  -4.7641305e-02  -4.7423379e-02  -4.6917598e-02  -4.7287984e-02  -4.7305270e-02  -4.7402382e-02  -4.7011199e-02  -4.7408840e-02  -4.7111764e-02  -4.7377811e-02  -4.7380317e-02  -4.7361411e-02  -4.7402517e-02  -4.7402542e-02  -4.7223231e-02  -4.7357056e-02  -4.7149900e-02  -4.7503275e-02  -4.5440619e-02  -4.7649768e-02  -5.1602942e-02  -4.9525284e-02  -4.7416703e-02  -4.7511200e-02  -3.9731352e-02  -4.7200302e-02  -6.0557998e-02  -4.7103139e-02  -4.6852165e-02  -4.7128795e-02  -4.6969870e-02  -4.7377205e-02  -4.6836228e-02  -4.7402090e-02  -4.7360330e-02  -4.7295632e-02  -4.7297796e-02  -4.6491940e-02  -4.7347897e-02  -4.6733937e-02  -4.6652206e-02  -4.7345888e-02  -4.7148705e-02  -4.7369445e-02  -4.7390523e-02  -4.7397201e-02
-   1.1680496e+00   1.1681348e+00   1.1678695e+00   1.1682014e+00   1.1679817e+00   1.1714497e+00   1.1684978e+00   1.1676202e+00   1.1680977e+00   1.1692508e+00   1.1681316e+00   1.1680121e+00   1.1683929e+00   1.1681942e+00   1.1681545e+00   1.1681345e+00   1.1681689e+00   1.1681874e+00   1.1681614e+00   1.1681677e+00   1.1681642e+00   1.1681742e+00   1.1682016e+00   1.1681948e+00   1.1681994e+00   1.1681984e+00   1.1681931e+00   1.1681980e+00   1.1681894e+00   1.1683751e+00   1.1682687e+00   1.1685435e+00   1.1681900e+00   1.1684148e+00   1.1649467e+00   1.1678977e+00   1.1688250e+00   1.1683811e+00   1.1670765e+00   1.1682102e+00   1.1683752e+00   1.1680051e+00   1.1681894e+00   1.1682261e+00   1.1682383e+00   1.1682257e+00   1.1682091e+00   1.1682207e+00   1.1682282e+00   1.1681753e+00   1.1682220e+00   1.1681608e+00   1.1681632e+00   1.1681964e+00   1.1681893e+00   1.1681982e+00   1.1681987e+00   1.1681985e+00
-   5.1353747e-02   5.3084390e-02   4.8455388e-02   4.6757863e-02   4.9143052e-02   5.2292502e-02   5.0801128e-02   5.2100049e-02   5.1875721e-02   4.7274428e-02   5.0033109e-02   4.8410035e-02   5.3287255e-02   5.0326609e-02   5.0059053e-02   5.0275994e-02   5.0308748e-02   5.0353796e-02   5.0084002e-02   5.0350709e-02   5.0163705e-02   5.0339012e-02   5.0380534e-02   5.0366581e-02   5.0376572e-02   5.0375692e-02   5.0292651e-02   5.0365988e-02   5.0246382e-02   4.9030644e-02   4.7649854e-02   5.2155336e-02   5.3995086e-02   5.1564210e-02   4.8431954e-02   4.9949294e-02   4.8421474e-02   4.8589694e-02   5.4141548e-02   5.0251193e-02   5.2233355e-02   4.7473948e-02   5.0168797e-02   5.0402105e-02   5.0079805e-02   5.0408330e-02   5.0390027e-02   5.0378040e-02   5.0377128e-02   4.9979902e-02   5.0395867e-02   4.9988206e-02   4.9975766e-02   5.0359293e-02   5.0245653e-02   5.0370027e-02   5.0377186e-02   5.0376500e-02
-   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02
-  -3.5599350e-02  -3.5358122e-02  -3.5542208e-02  -3.6165394e-02  -3.5532901e-02  -3.5621888e-02  -3.5630434e-02  -3.4813753e-02  -3.2273599e-02  -3.7179663e-02  -3.5684288e-02  -3.5607809e-02  -3.5554002e-02  -3.5616465e-02  -3.5671189e-02  -3.5591403e-02  -3.5617807e-02  -3.5612173e-02  -3.5634021e-02  -3.5608593e-02  -3.5629240e-02  -3.5605068e-02  -3.5603273e-02  -3.5607091e-02  -3.5619136e-02  -3.5619244e-02  -3.5611701e-02  -3.5606932e-02  -3.5622459e-02  -3.5728409e-02  -3.5881400e-02  -3.5690614e-02  -3.5057554e-02  -3.5693611e-02  -3.5597909e-02  -3.5586576e-02  -3.6463838e-02  -3.9054556e-02  -3.3966937e-02  -3.5608079e-02  -3.5661040e-02  -3.5677614e-02  -3.5634945e-02  -3.5569863e-02  -3.5661364e-02  -3.5604547e-02  -3.5613139e-02  -3.5604482e-02  -3.5602741e-02  -3.5721978e-02  -3.5609692e-02  -3.5678784e-02  -3.5690865e-02  -3.5606543e-02  -3.5622581e-02  -3.5608690e-02  -3.5611333e-02  -3.5615540e-02
-   7.8387660e-01   7.8416164e-01   7.8398943e-01   7.8417316e-01   7.8429422e-01   7.8418997e-01   7.8418288e-01   7.8409688e-01   7.8372732e-01   7.8686176e-01   7.8440659e-01   7.8415678e-01   7.8417227e-01   7.8416454e-01   7.8427762e-01   7.8420544e-01   7.8418406e-01   7.8417173e-01   7.8428989e-01   7.8417759e-01   7.8425189e-01   7.8418173e-01   7.8416786e-01   7.8417435e-01   7.8416582e-01   7.8416589e-01   7.8420269e-01   7.8417203e-01   7.8422018e-01   7.8453214e-01   7.8416203e-01   7.8435949e-01   7.8420179e-01   7.8404833e-01   7.8414948e-01   7.8415796e-01   7.8420238e-01   7.8459719e-01   7.8130103e-01   7.8422838e-01   7.8421133e-01   7.8416279e-01   7.8427806e-01   7.8417946e-01   7.8430529e-01   7.8416444e-01   7.8416589e-01   7.8416806e-01   7.8416875e-01   7.8443190e-01   7.8416136e-01   7.8439749e-01   7.8441010e-01   7.8417432e-01   7.8422059e-01   7.8417040e-01   7.8416746e-01   7.8416665e-01
-   9.2136704e-02   9.2450234e-02   9.2206278e-02   9.2005380e-02   9.2242007e-02   9.2251461e-02   9.2229832e-02   9.2348525e-02   9.2151796e-02   9.1808781e-02   9.2455707e-02   9.2151521e-02   9.2217045e-02   9.2181925e-02   9.2208777e-02   9.2208737e-02   9.2195076e-02   9.2189824e-02   9.2220895e-02   9.2192344e-02   9.2209822e-02   9.2195664e-02   9.2190823e-02   9.2192641e-02   9.2184778e-02   9.2184961e-02   9.2201256e-02   9.2192471e-02   9.2203089e-02   9.2238168e-02   9.1928028e-02   9.2179087e-02   9.2397985e-02   9.2137989e-02   9.2129785e-02   9.2152525e-02   9.2017511e-02   9.2208371e-02   9.2545880e-02   9.1999046e-02   9.2220628e-02   9.2157278e-02   9.2221316e-02   9.2203835e-02   9.2218484e-02   9.2187720e-02   9.2187660e-02   9.2193501e-02   9.2194379e-02   9.2241160e-02   9.2188526e-02   9.2246969e-02   9.2245586e-02   9.2193627e-02   9.2203180e-02   9.2191122e-02   9.2188927e-02   9.2186793e-02
-  -6.4187282e-02  -7.3770116e-02  -6.6313767e-02  -6.0173449e-02  -6.7405784e-02  -6.7694758e-02  -6.7033683e-02  -7.0661442e-02  -6.4648540e-02  -5.4164537e-02  -7.3937397e-02  -6.4062178e-02  -6.7457555e-02  -6.5569413e-02  -6.6390148e-02  -6.6388930e-02  -6.5971382e-02  -6.5810863e-02  -6.6760503e-02  -6.5887885e-02  -6.6422065e-02  -6.5989362e-02  -6.5841396e-02  -6.5896954e-02  -6.5656625e-02  -6.5662227e-02  -6.6160259e-02  -6.5891756e-02  -6.6216290e-02  -6.7288453e-02  -5.7809239e-02  -6.5482685e-02  -7.2173159e-02  -6.4226542e-02  -6.3975791e-02  -6.4670832e-02  -6.0544214e-02  -6.6377715e-02  -7.6693469e-02  -5.9979867e-02  -6.7331717e-02  -6.4004256e-02  -6.6773377e-02  -6.6239088e-02  -6.6686813e-02  -6.5746546e-02  -6.5744713e-02  -6.5923242e-02  -6.5950067e-02  -6.7379908e-02  -6.5771174e-02  -6.7557440e-02  -6.7515178e-02  -6.5927086e-02  -6.6219072e-02  -6.5850528e-02  -6.5783430e-02  -6.5718210e-02
-   6.4189923e-02   7.3772229e-02   6.6316291e-02   6.0176312e-02   6.7408248e-02   6.7697206e-02   6.7036167e-02   7.0663726e-02   6.4651156e-02   5.4167732e-02   7.3939501e-02   6.4055749e-02   6.7458443e-02   6.5571978e-02   6.6392668e-02   6.6391450e-02   6.5973925e-02   6.5813414e-02   6.6763003e-02   6.5890433e-02   6.6424583e-02   6.5991904e-02   6.5843946e-02   6.5899502e-02   6.5659185e-02   6.5664787e-02   6.6162791e-02   6.5894304e-02   6.6218820e-02   6.7290924e-02   5.7812232e-02   6.5485255e-02   7.2175360e-02   6.4229182e-02   6.3978444e-02   6.4673446e-02   6.0547057e-02   6.6380236e-02   7.6695420e-02   5.9982741e-02   6.7342884e-02   6.4009033e-02   6.6775875e-02   6.6241616e-02   6.6689317e-02   6.5749101e-02   6.5747269e-02   6.5925788e-02   6.5952611e-02   6.7382373e-02   6.5773728e-02   6.7559896e-02   6.7517635e-02   6.5929631e-02   6.6221601e-02   6.5853078e-02   6.5785984e-02   6.5720767e-02
-  -1.0464643e-03  -1.1755510e-04   6.8921264e-04   2.2666813e-03   3.4285930e-04   1.4623254e-04  -3.9221615e-05   1.3574567e-03   5.9470876e-04  -2.3533672e-03   8.7897198e-03  -1.4367404e-04   6.3513343e-04   2.1378118e-03   2.3011135e-03   1.1888833e-03   2.4083340e-04  -5.1639581e-04   2.8942716e-03  -3.7298849e-04   1.6598469e-03  -1.6501604e-05  -5.5823863e-04  -2.9905207e-04  -1.0242270e-03  -9.8550219e-04   6.9881681e-04  -2.7587164e-04   9.9280590e-04   1.1488235e-03  -9.8847406e-04  -6.5445398e-04  -1.0338234e-03  -1.2745029e-03  -9.7205693e-04  -7.3574732e-04  -1.9232153e-03  -1.1820524e-03   4.8047306e-04  -1.6383795e-03  -1.0937288e-03  -2.2113427e-03  -4.0917579e-04   2.8886538e-04   3.0977139e-03  -9.5313749e-04  -7.6431170e-04  -9.1565259e-05  -1.1565910e-05   6.1035954e-03  -6.0960769e-04   6.3242964e-03   6.2759486e-03  -1.3530326e-04   1.0027336e-03  -4.1050161e-04  -6.2731709e-04  -8.2329458e-04
-  -1.7519289e-02  -1.7819168e-02  -1.7243686e-02  -1.7352305e-02  -1.7604769e-02  -1.7565918e-02  -1.7583365e-02  -1.7830937e-02  -1.7618211e-02  -1.7153739e-02  -1.7027661e-02  -1.7195149e-02  -1.7534402e-02  -1.7373047e-02  -1.6810272e-02  -1.7498474e-02  -1.7303517e-02  -1.7439240e-02  -1.7242154e-02  -1.7452118e-02  -1.7264551e-02  -1.7461991e-02  -1.7456101e-02  -1.7433001e-02  -1.7376315e-02  -1.7375753e-02  -1.7365135e-02  -1.7429014e-02  -1.7281146e-02  -1.6985446e-02  -1.6983474e-02  -1.7661482e-02  -1.7394876e-02  -1.7204397e-02  -1.7279031e-02  -1.7271812e-02  -1.7031346e-02  -1.7257291e-02  -1.7607988e-02  -1.7649686e-02  -1.7346466e-02  -1.7250883e-02  -1.7224665e-02  -1.7804216e-02  -1.7077672e-02  -1.7508361e-02  -1.7371783e-02  -1.7401744e-02  -1.7421056e-02  -1.7260875e-02  -1.7397913e-02  -1.7317166e-02  -1.7319837e-02  -1.7427920e-02  -1.7280322e-02  -1.7424216e-02  -1.7418032e-02  -1.7395684e-02
-   1.1630027e-02   1.2331407e-02   1.1982348e-02   1.1510116e-02   1.1913369e-02   1.1834130e-02   1.1861850e-02   1.1939860e-02   1.1907796e-02   1.1545162e-02   1.0763309e-02   1.1724283e-02   1.1941994e-02   1.1883618e-02   1.1294983e-02   1.2067003e-02   1.1875024e-02   1.1900678e-02   1.1447019e-02   1.1927268e-02   1.1565009e-02   1.1921513e-02   1.1955448e-02   1.1924583e-02   1.1884680e-02   1.1884631e-02   1.1806562e-02   1.1934785e-02   1.1677288e-02   1.1671564e-02   1.1468335e-02   1.1916539e-02   1.2130254e-02   1.1903870e-02   1.2024719e-02   1.2006530e-02   1.1899939e-02   1.1968182e-02   1.2138558e-02   1.1881390e-02   1.1753517e-02   1.1858987e-02   1.1499943e-02   1.2066976e-02   1.1086859e-02   1.1931818e-02   1.1924963e-02   1.1958987e-02   1.1954507e-02   1.0451815e-02   1.1951929e-02   1.1006993e-02   1.0821301e-02   1.1929017e-02   1.1675302e-02   1.1932721e-02   1.1930570e-02   1.1905887e-02
-   6.3054492e-03   5.4638849e-03   4.7740470e-03   5.2273091e-03   5.4063266e-03   5.3686446e-03   5.5758192e-03   5.4269532e-03   6.3860630e-03   6.5295110e-03   4.5232606e-03   5.8628880e-03   5.6391912e-03   5.7554954e-03   4.8661092e-03   5.3566765e-03   5.5884563e-03   5.6826650e-03   4.7759629e-03   5.6647811e-03   5.0998322e-03   5.6083431e-03   5.7087773e-03   5.6724976e-03   5.7580001e-03   5.7545092e-03   5.4242197e-03   5.6682813e-03   5.3066798e-03   4.5628464e-03   5.9470815e-03   6.4638831e-03   5.7297736e-03   5.9527197e-03   6.0096014e-03   5.7947050e-03   5.9826082e-03   4.9564162e-03   5.2868241e-03   5.2348399e-03   5.4083028e-03   5.8161563e-03   4.8557384e-03   5.5904753e-03   4.7280862e-03   5.7283046e-03   5.7444545e-03   5.6606133e-03   5.6429640e-03   4.3485712e-03   5.7392066e-03   4.3551513e-03   4.3310049e-03   5.6418021e-03   5.3045570e-03   5.6892785e-03   5.7242974e-03   5.7408737e-03
-   2.6729194e-02   2.8859877e-02   2.7090836e-02   2.6993039e-02   2.8017760e-02   2.7690869e-02   2.7619931e-02   2.6816803e-02   2.7410793e-02   2.8241432e-02   2.9535529e-02   2.8609949e-02   2.8526839e-02   2.8517243e-02   2.8894009e-02   2.8501320e-02   2.8434972e-02   2.8465034e-02   2.8868466e-02   2.8321451e-02   2.8724060e-02   2.8374309e-02   2.8482873e-02   2.8469373e-02   2.8481481e-02   2.8480935e-02   2.8699645e-02   2.8520307e-02   2.8800104e-02   3.0689456e-02   2.8155707e-02   2.9993079e-02   3.0265455e-02   2.9055350e-02   2.9320392e-02   2.9389996e-02   3.0128096e-02   2.9617125e-02   2.8343816e-02   2.8731284e-02   2.8594365e-02   2.8458625e-02   2.8970485e-02   2.8701467e-02   2.9332554e-02   2.8639825e-02   2.8525817e-02   2.8719949e-02   2.8732094e-02   3.0289734e-02   2.8653327e-02   2.9352506e-02   2.9697865e-02   2.8538817e-02   2.8799656e-02   2.8503145e-02   2.8475037e-02   2.8476771e-02
-  -6.2364748e-01  -6.3563135e-01  -6.2519179e-01  -6.0716163e-01  -6.3213344e-01  -6.2745849e-01  -6.2705968e-01  -6.5907067e-01  -6.2414244e-01  -5.6867757e-01  -6.2572849e-01  -6.2971429e-01  -6.2898434e-01  -6.2800270e-01  -6.2572440e-01  -6.2739281e-01  -6.2747067e-01  -6.2790811e-01  -6.2614603e-01  -6.2793720e-01  -6.2659902e-01  -6.2779743e-01  -6.2780872e-01  -6.2772356e-01  -6.2790872e-01  -6.2790883e-01  -6.2710112e-01  -6.2770394e-01  -6.2677081e-01  -6.2836258e-01  -6.1907134e-01  -6.2902246e-01  -6.4682955e-01  -6.2322624e-01  -6.2797262e-01  -6.2839829e-01  -5.9335392e-01  -6.2699784e-01  -6.8716764e-01  -6.2656017e-01  -6.2542966e-01  -6.2667574e-01  -6.2595986e-01  -6.2779470e-01  -6.2535787e-01  -6.2790680e-01  -6.2771869e-01  -6.2742726e-01  -6.2743700e-01  -6.2380702e-01  -6.2766268e-01  -6.2489710e-01  -6.2452894e-01  -6.2765363e-01  -6.2676542e-01  -6.2775975e-01  -6.2785469e-01  -6.2788477e-01
-  -2.9274318e-02  -2.8890447e-02  -3.0085630e-02  -2.8590568e-02  -2.9580265e-02  -2.8202851e-02  -2.7255313e-02  -3.1208653e-02  -2.9057559e-02  -2.3863371e-02  -2.8905129e-02  -2.9443091e-02  -2.7727792e-02  -2.8623143e-02  -2.8801965e-02  -2.8891688e-02  -2.8736817e-02  -2.8653390e-02  -2.8770637e-02  -2.8742445e-02  -2.8758222e-02  -2.8712943e-02  -2.8589628e-02  -2.8620147e-02  -2.8599372e-02  -2.8604237e-02  -2.8627752e-02  -2.8605998e-02  -2.8644544e-02  -2.7808034e-02  -2.8287531e-02  -2.7049764e-02  -2.8642099e-02  -2.7629132e-02  -2.9006667e-02  -2.9958728e-02  -2.5781700e-02  -2.7781013e-02  -3.3657826e-02  -2.8550772e-02  -2.7807767e-02  -2.9474735e-02  -2.8644409e-02  -2.8479500e-02  -2.8424347e-02  -2.8480954e-02  -2.8555990e-02  -2.8503687e-02  -2.8469813e-02  -2.8708151e-02  -2.8497828e-02  -2.8773492e-02  -2.8762490e-02  -2.8613258e-02  -2.8645250e-02  -2.8605011e-02  -2.8602650e-02  -2.8603661e-02
-   9.4672609e-02   1.0246830e-01   8.1616939e-02   7.3970426e-02   8.4714522e-02   9.8901234e-02   7.7938839e-02   9.8034330e-02   9.7023842e-02   7.6297296e-02   8.8723788e-02   8.1412645e-02   1.0338210e-01   9.0045861e-02   8.8840653e-02   8.9817864e-02   8.9965404e-02   9.0168323e-02   8.8953035e-02   9.0154418e-02   8.9312059e-02   9.0101730e-02   9.0288765e-02   9.0225917e-02   9.0270918e-02   9.0266956e-02   8.9892896e-02   9.0223243e-02   8.9684478e-02   8.4208181e-02   7.7988406e-02   9.8283370e-02   1.0657053e-01   9.5620641e-02   8.1511381e-02   1.0259074e-01   8.1464173e-02   8.2221917e-02   1.0723027e-01   8.9706149e-02   9.8634805e-02   7.7196038e-02   8.9334997e-02   9.0385932e-02   8.8934131e-02   9.0413975e-02   9.0331527e-02   9.0277532e-02   9.0273424e-02   8.8484119e-02   9.0357835e-02   8.8521521e-02   8.8465488e-02   9.0193086e-02   8.9681194e-02   9.0241437e-02   9.0273686e-02   9.0270593e-02
-  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.6783436e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.3934537e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01
-   5.8036358e-02   5.9122970e-02   5.8293754e-02   5.5486607e-02   5.8335676e-02   5.7934834e-02   5.7896339e-02   6.1575079e-02   5.8772724e-02   5.0917829e-02   5.7653752e-02   5.7998253e-02   5.8240625e-02   5.7959259e-02   5.7712756e-02   5.8072155e-02   5.7953216e-02   5.7978596e-02   5.7880180e-02   5.7994722e-02   5.7901717e-02   5.8010598e-02   5.8018685e-02   5.8001489e-02   5.7947229e-02   5.7946743e-02   5.7980719e-02   5.8002205e-02   5.7932260e-02   5.7455009e-02   5.6765858e-02   5.7625257e-02   6.0476879e-02   5.7611755e-02   5.8042848e-02   5.8093895e-02   5.4142264e-02   5.6716858e-02   6.5389568e-02   5.7997034e-02   5.7758474e-02   5.7683813e-02   5.7876016e-02   5.8169181e-02   5.7757013e-02   5.8012947e-02   5.7974242e-02   5.8013240e-02   5.8021081e-02   5.7483975e-02   5.7989771e-02   5.7678547e-02   5.7624127e-02   5.8003954e-02   5.7931711e-02   5.7994284e-02   5.7982380e-02   5.7963426e-02
-   3.1361362e-02   3.2645326e-02   3.1869605e-02   3.2697212e-02   3.3242503e-02   3.2772930e-02   3.2741012e-02   3.2353590e-02   3.0688897e-02   3.0563546e-02   3.3748706e-02   3.2623446e-02   3.2693205e-02   3.2658385e-02   3.3167756e-02   3.2842602e-02   3.2746323e-02   3.2690778e-02   3.3223028e-02   3.2717167e-02   3.3051867e-02   3.2735827e-02   3.2673356e-02   3.2702564e-02   3.2664162e-02   3.2664467e-02   3.2830236e-02   3.2692115e-02   3.2909003e-02   3.4314253e-02   3.2647081e-02   3.3536542e-02   3.2826157e-02   3.2134915e-02   3.2590527e-02   3.2628744e-02   3.2828821e-02   3.4607240e-02   3.4004197e-02   3.2945934e-02   3.2869158e-02   3.2650482e-02   3.3169715e-02   3.2725572e-02   3.3292391e-02   3.2657908e-02   3.2664475e-02   3.2674229e-02   3.2677351e-02   3.3862716e-02   3.2644074e-02   3.3707700e-02   3.3764502e-02   3.2702417e-02   3.2910841e-02   3.2684754e-02   3.2671539e-02   3.2667881e-02
-   4.2723487e-02   4.4135785e-02   4.3036884e-02   4.2131937e-02   4.3197823e-02   4.3240412e-02   4.3142984e-02   4.3677635e-02   4.2791466e-02   4.1246356e-02   2.9915945e-02   4.2790229e-02   4.3085384e-02   4.2927183e-02   4.3048141e-02   4.3047961e-02   4.2986424e-02   4.2962767e-02   4.3102723e-02   4.2974118e-02   4.3052845e-02   4.2989074e-02   4.2967267e-02   4.2975455e-02   4.2940036e-02   4.2940861e-02   4.3014260e-02   4.2974689e-02   4.3022518e-02   4.3180531e-02   4.1783504e-02   4.2914401e-02   4.3900429e-02   4.2729273e-02   4.2692318e-02   4.2794752e-02   4.2186579e-02   4.3046309e-02   4.4566623e-02   5.6347901e-02   4.3101523e-02   4.2816160e-02   4.3104620e-02   4.3025878e-02   4.3091863e-02   4.2953288e-02   4.2953018e-02   4.2979329e-02   4.2983283e-02   4.3194010e-02   4.2956918e-02   4.3220174e-02   4.3213945e-02   4.2979896e-02   4.3022928e-02   4.2968613e-02   4.2958724e-02   4.2949112e-02
-  -2.9757574e-01  -3.4074166e-01  -3.0715450e-01  -2.7949542e-01  -3.1207350e-01  -3.1337519e-01  -3.1039737e-01  -3.2673863e-01  -2.9965348e-01  -2.5242824e-01  -3.4149518e-01  -3.1125671e-01  -3.1230670e-01  -3.0380156e-01  -3.0749856e-01  -3.0749308e-01  -3.0561223e-01  -3.0488917e-01  -3.0916683e-01  -3.0523612e-01  -3.0764233e-01  -3.0569322e-01  -3.0502671e-01  -3.0527697e-01  -3.0419440e-01  -3.0421964e-01  -3.0646303e-01  -3.0525355e-01  -3.0671542e-01  -3.1154498e-01  -2.6884582e-01  -3.0341089e-01  -3.3354816e-01  -2.9775259e-01  -2.9662308e-01  -2.9975390e-01  -2.8116553e-01  -3.0744256e-01  -3.5390992e-01  -2.7862343e-01  -2.9749537e-01  -2.9675130e-01  -3.0922482e-01  -3.0681811e-01  -3.0883489e-01  -3.0459945e-01  -3.0459120e-01  -3.0539538e-01  -3.0551622e-01  -3.1195694e-01  -3.0471039e-01  -3.1275664e-01  -3.1256626e-01  -3.0541270e-01  -3.0672795e-01  -3.0506784e-01  -3.0476560e-01  -3.0447182e-01
-   4.1745078e-01   4.6061432e-01   4.2702901e-01   3.9937145e-01   4.3194773e-01   4.3324935e-01   4.3027169e-01   4.4661205e-01   4.1952840e-01   3.7230577e-01   4.6136779e-01   4.1684639e-01   4.1792934e-01   4.2367625e-01   4.2737305e-01   4.2736756e-01   4.2548682e-01   4.2476380e-01   4.2904122e-01   4.2511073e-01   4.2751681e-01   4.2556781e-01   4.2490133e-01   4.2515158e-01   4.2406907e-01   4.2409431e-01   4.2633757e-01   4.2512816e-01   4.2658995e-01   4.3141925e-01   3.8872244e-01   4.2328560e-01   4.5342121e-01   4.1762762e-01   4.1649817e-01   4.1962881e-01   4.0104147e-01   4.2731705e-01   4.7378184e-01   3.9849950e-01   4.3165330e-01   4.3088045e-01   4.2909921e-01   4.2669264e-01   4.2870931e-01   4.2447410e-01   4.2446585e-01   4.2526999e-01   4.2539081e-01   4.3183118e-01   4.2458503e-01   4.3263083e-01   4.3244047e-01   4.2528730e-01   4.2660248e-01   4.2494246e-01   4.2464024e-01   4.2434647e-01
-  -7.5217911e-03  -3.3375153e-03   2.9657363e-04   7.4022884e-03  -1.2635765e-03  -2.1492827e-03  -2.9846617e-03   3.3066822e-03  -1.2911949e-04  -1.3408741e-02   3.6785345e-02  -3.4551682e-03   5.2973623e-05  -7.4226991e-03   7.5573885e-03   2.5473424e-03  -1.7231526e-03  -5.1340950e-03   1.0229271e-02  -4.4881161e-03   4.6688000e-03  -2.8823193e-03  -5.3225762e-03  -4.1550692e-03  -7.4216228e-03  -7.2471868e-03   3.3983568e-04  -4.0506528e-03   1.6641109e-03   2.3668928e-03  -7.2605736e-03  -5.7559787e-03  -7.4648498e-03  -8.5489917e-03  -7.1866226e-03  -6.1221649e-03  -1.1471120e-02  -8.1325480e-03  -6.4369475e-04  -1.0188076e-02  -7.7346940e-03  -1.2768991e-02   9.5933720e-03  -1.5067924e-03   1.1145678e-02  -7.1013999e-03  -6.2508333e-03  -3.2204439e-03  -2.8600865e-03   2.4685685e-02  -5.5539684e-03   2.5679834e-02   2.5462051e-02  -3.4174619e-03   1.7088301e-03  -4.6570941e-03  -5.6337405e-03  -6.5165219e-03
diff --git a/drake/examples/KukaArm/x_par.dat b/drake/examples/KukaArm/x_par.dat
deleted file mode 100644
index 5eb9b4269..000000000
--- a/drake/examples/KukaArm/x_par.dat
+++ /dev/null
@@ -1,28 +0,0 @@
-  -1.5993270e+00  -1.6025307e+00  -1.6023958e+00  -1.6024568e+00  -1.6024819e+00  -1.6024755e+00  -1.6024808e+00  -1.6025140e+00  -1.6024626e+00  -1.6024216e+00  -1.6023725e+00  -1.6024363e+00  -1.6024627e+00  -1.6024387e+00  -1.6023630e+00  -1.6024591e+00  -1.6024099e+00  -1.6024449e+00  -1.6024503e+00  -1.6024471e+00  -1.6024463e+00  -1.6024459e+00  -1.6024484e+00  -1.6024418e+00  -1.6024422e+00  -1.6024398e+00  -1.6024401e+00  -1.6024399e+00  -1.6024399e+00  -1.6055559e+00  -1.6023499e+00  -1.6024863e+00  -1.6024436e+00  -1.6023981e+00  -1.6024046e+00  -1.6023996e+00  -1.6023741e+00  -1.6024208e+00  -1.6024735e+00  -1.6025073e+00  -1.6024435e+00  -1.6024172e+00  -1.6024411e+00  -1.6025167e+00  -1.6024207e+00  -1.6024699e+00  -1.6024349e+00  -1.6024294e+00  -1.6024327e+00  -1.6024335e+00  -1.6024338e+00  -1.6024314e+00  -1.6024380e+00  -1.6024376e+00  -1.6024400e+00  -1.6024396e+00  -1.6024399e+00  -1.6024399e+00
-  -1.2019076e+00  -1.1986123e+00  -1.2018621e+00  -1.2019114e+00  -1.2018705e+00  -1.2018869e+00  -1.2018798e+00  -1.2018858e+00  -1.2018951e+00  -1.2019134e+00  -1.2018922e+00  -1.2018676e+00  -1.2018698e+00  -1.2018703e+00  -1.2018922e+00  -1.2018303e+00  -1.2018809e+00  -1.2018743e+00  -1.2018719e+00  -1.2018702e+00  -1.2018723e+00  -1.2018732e+00  -1.2018643e+00  -1.2018713e+00  -1.2018673e+00  -1.2018698e+00  -1.2018696e+00  -1.2018698e+00  -1.2018698e+00  -1.2018303e+00  -1.2051278e+00  -1.2018766e+00  -1.2018133e+00  -1.2018686e+00  -1.2018527e+00  -1.2018596e+00  -1.2018534e+00  -1.2018415e+00  -1.2018351e+00  -1.2018477e+00  -1.2018721e+00  -1.2018699e+00  -1.2018693e+00  -1.2018474e+00  -1.2019093e+00  -1.2018587e+00  -1.2018653e+00  -1.2018677e+00  -1.2018694e+00  -1.2018673e+00  -1.2018663e+00  -1.2018752e+00  -1.2018683e+00  -1.2018722e+00  -1.2018698e+00  -1.2018700e+00  -1.2018698e+00  -1.2018698e+00
-  -2.0413049e-02  -2.0562134e-02  -1.7547668e-02  -2.0537501e-02  -2.0569791e-02  -2.0588852e-02  -2.0548297e-02  -2.0556447e-02  -2.0346674e-02  -2.0372902e-02  -2.0489268e-02  -2.0523869e-02  -2.0533443e-02  -2.0522965e-02  -2.0517510e-02  -2.0548418e-02  -2.0517292e-02  -2.0524072e-02  -2.0531316e-02  -2.0530517e-02  -2.0528735e-02  -2.0529396e-02  -2.0526383e-02  -2.0524546e-02  -2.0524181e-02  -2.0523385e-02  -2.0523538e-02  -2.0523458e-02  -2.0523451e-02  -2.0634717e-02  -2.0478571e-02  -2.3500055e-02  -2.0506497e-02  -2.0476864e-02  -2.0457791e-02  -2.0498796e-02  -2.0475377e-02  -2.0695157e-02  -2.0615073e-02  -2.0562133e-02  -2.0522904e-02  -2.0513341e-02  -2.0523952e-02  -2.0529396e-02  -2.0498483e-02  -2.0529600e-02  -2.0522820e-02  -2.0515587e-02  -2.0516385e-02  -2.0518166e-02  -2.0517505e-02  -2.0520519e-02  -2.0522354e-02  -2.0522721e-02  -2.0523516e-02  -2.0523363e-02  -2.0523443e-02  -2.0523451e-02
-   1.5981103e+00   1.5985616e+00   1.5981744e+00   1.6012677e+00   1.5983720e+00   1.5983095e+00   1.5982981e+00   1.5981186e+00   1.5982583e+00   1.5984438e+00   1.5985013e+00   1.5985274e+00   1.5985045e+00   1.5985088e+00   1.5984663e+00   1.5984658e+00   1.5984648e+00   1.5984893e+00   1.5984609e+00   1.5984602e+00   1.5984614e+00   1.5984617e+00   1.5985010e+00   1.5984899e+00   1.5985003e+00   1.5985006e+00   1.5985001e+00   1.5985001e+00   1.5985001e+00   1.5988874e+00   1.5984300e+00   1.5988232e+00   1.5956907e+00   1.5986291e+00   1.5986899e+00   1.5987019e+00   1.5988603e+00   1.5987399e+00   1.5984655e+00   1.5985016e+00   1.5984726e+00   1.5984956e+00   1.5984914e+00   1.5985338e+00   1.5985343e+00   1.5985354e+00   1.5985108e+00   1.5985393e+00   1.5985400e+00   1.5985388e+00   1.5985385e+00   1.5984992e+00   1.5985103e+00   1.5984999e+00   1.5984997e+00   1.5985001e+00   1.5985001e+00   1.5985001e+00
-  -4.6456521e-02  -4.9202346e-02  -4.6881027e-02  -4.3060649e-02  -4.5272753e-02  -4.7375534e-02  -4.7273876e-02  -5.4416124e-02  -4.6653425e-02  -3.4236157e-02  -4.7693860e-02  -4.7779197e-02  -4.7697327e-02  -4.7445772e-02  -4.7391571e-02  -4.7449058e-02  -4.7425623e-02  -4.7461620e-02  -4.7467762e-02  -4.7460071e-02  -4.7460100e-02  -4.7460555e-02  -4.7415504e-02  -4.7423865e-02  -4.7421638e-02  -4.7424515e-02  -4.7424151e-02  -4.7424408e-02  -4.7424427e-02  -4.7895644e-02  -4.5466440e-02  -4.7738829e-02  -5.1679609e-02  -4.9552084e-02  -4.7454606e-02  -4.7565515e-02  -3.9754609e-02  -4.7244528e-02  -6.0606763e-02  -4.7303388e-02  -4.7069175e-02  -4.7144329e-02  -4.7403383e-02  -4.7457288e-02  -4.7399802e-02  -4.7423238e-02  -4.7387242e-02  -4.7381090e-02  -4.7388782e-02  -4.7388754e-02  -4.7388298e-02  -4.7433350e-02  -4.7424988e-02  -4.7427216e-02  -4.7424338e-02  -4.7424702e-02  -4.7424446e-02  -4.7424427e-02
-   1.1680496e+00   1.1681363e+00   1.1678689e+00   1.1682065e+00   1.1679826e+00   1.1714501e+00   1.1684978e+00   1.1676188e+00   1.1680951e+00   1.1692520e+00   1.1681678e+00   1.1680135e+00   1.1683920e+00   1.1681931e+00   1.1681691e+00   1.1681370e+00   1.1681697e+00   1.1681866e+00   1.1681743e+00   1.1681666e+00   1.1681743e+00   1.1681740e+00   1.1682002e+00   1.1681940e+00   1.1681985e+00   1.1681973e+00   1.1681973e+00   1.1681972e+00   1.1681972e+00   1.1683889e+00   1.1682670e+00   1.1685430e+00   1.1681914e+00   1.1684134e+00   1.1649447e+00   1.1678957e+00   1.1688247e+00   1.1683812e+00   1.1670758e+00   1.1682163e+00   1.1683807e+00   1.1680043e+00   1.1682013e+00   1.1682254e+00   1.1682574e+00   1.1682247e+00   1.1682078e+00   1.1682202e+00   1.1682278e+00   1.1682201e+00   1.1682205e+00   1.1681943e+00   1.1682004e+00   1.1681959e+00   1.1681971e+00   1.1681971e+00   1.1681972e+00   1.1681972e+00
-   5.1353747e-02   5.3104975e-02   4.8470557e-02   4.6878414e-02   4.9163758e-02   5.2306321e-02   5.0807017e-02   5.2114942e-02   5.1885050e-02   4.7276409e-02   5.0419238e-02   4.8413685e-02   5.3290894e-02   5.0323330e-02   5.0330071e-02   5.0334166e-02   5.0339721e-02   5.0358912e-02   5.0353897e-02   5.0352301e-02   5.0345674e-02   5.0352379e-02   5.0376381e-02   5.0371826e-02   5.0373831e-02   5.0372507e-02   5.0372641e-02   5.0372527e-02   5.0372517e-02   4.9231880e-02   4.7645563e-02   5.2169224e-02   5.4018275e-02   5.1560962e-02   4.8425423e-02   4.9948961e-02   4.8425578e-02   4.8598710e-02   5.4135780e-02   5.0337885e-02   5.2330321e-02   4.7471204e-02   5.0422002e-02   5.0414956e-02   5.0410865e-02   5.0405320e-02   5.0386130e-02   5.0391135e-02   5.0392732e-02   5.0399359e-02   5.0392654e-02   5.0368652e-02   5.0373207e-02   5.0371202e-02   5.0372526e-02   5.0372392e-02   5.0372506e-02   5.0372517e-02
-   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02   8.0000000e-02
-  -3.5599350e-02  -3.5384051e-02  -3.5571540e-02  -3.6170462e-02  -3.5559631e-02  -3.5645563e-02  -3.5652210e-02  -3.4853471e-02  -3.2316180e-02  -3.7167775e-02  -3.5628585e-02  -3.5590868e-02  -3.5581178e-02  -3.5632116e-02  -3.5666723e-02  -3.5618886e-02  -3.5649649e-02  -3.5637143e-02  -3.5632569e-02  -3.5633283e-02  -3.5634280e-02  -3.5634365e-02  -3.5626447e-02  -3.5633461e-02  -3.5632418e-02  -3.5634521e-02  -3.5634203e-02  -3.5634435e-02  -3.5634442e-02  -3.5728260e-02  -3.5899239e-02  -3.5724073e-02  -3.5080868e-02  -3.5712136e-02  -3.5624917e-02  -3.5617400e-02  -3.6471017e-02  -3.9066183e-02  -3.3997539e-02  -3.5627222e-02  -3.5677916e-02  -3.5688457e-02  -3.5636715e-02  -3.5602160e-02  -3.5649999e-02  -3.5619243e-02  -3.5631748e-02  -3.5636315e-02  -3.5635601e-02  -3.5634604e-02  -3.5634519e-02  -3.5642437e-02  -3.5635424e-02  -3.5636466e-02  -3.5634363e-02  -3.5634681e-02  -3.5634449e-02  -3.5634442e-02
-   7.8387660e-01   7.8415209e-01   7.8397627e-01   7.8411106e-01   7.8428197e-01   7.8418127e-01   7.8417580e-01   7.8408103e-01   7.8371240e-01   7.8686410e-01   7.8414549e-01   7.8415937e-01   7.8416567e-01   7.8416194e-01   7.8415927e-01   7.8417474e-01   7.8416490e-01   7.8416420e-01   7.8417087e-01   7.8417130e-01   7.8417072e-01   7.8417054e-01   7.8416385e-01   7.8416651e-01   7.8416367e-01   7.8416338e-01   7.8416352e-01   7.8416352e-01   7.8416351e-01   7.8444466e-01   7.8415812e-01   7.8434794e-01   7.8419881e-01   7.8404491e-01   7.8414446e-01   7.8415070e-01   7.8419949e-01   7.8459217e-01   7.8129670e-01   7.8419078e-01   7.8416731e-01   7.8416091e-01   7.8416510e-01   7.8416777e-01   7.8415230e-01   7.8416213e-01   7.8416282e-01   7.8415616e-01   7.8415573e-01   7.8415630e-01   7.8415649e-01   7.8416318e-01   7.8416052e-01   7.8416335e-01   7.8416365e-01   7.8416350e-01   7.8416350e-01   7.8416351e-01
-   9.2136704e-02   9.2436491e-02   9.2189173e-02   9.1978894e-02   9.2226035e-02   9.2238033e-02   9.2218004e-02   9.2325677e-02   9.2129250e-02   9.1813980e-02   9.2381799e-02   9.2158483e-02   9.2203520e-02   9.2174861e-02   9.2170194e-02   9.2185289e-02   9.2175112e-02   9.2177113e-02   9.2179968e-02   9.2179916e-02   9.2179515e-02   9.2179465e-02   9.2179852e-02   9.2178966e-02   9.2178768e-02   9.2178017e-02   9.2178139e-02   9.2178092e-02   9.2178082e-02   9.2207887e-02   9.1919570e-02   9.2161659e-02   9.2388680e-02   9.2129708e-02   9.2117405e-02   9.2137730e-02   9.2013990e-02   9.2202200e-02   9.2531509e-02   9.1977681e-02   9.2197863e-02   9.2152347e-02   9.2181264e-02   9.2185973e-02   9.2170877e-02   9.2181049e-02   9.2179048e-02   9.2176195e-02   9.2176247e-02   9.2176648e-02   9.2176699e-02   9.2176312e-02   9.2177197e-02   9.2177395e-02   9.2178146e-02   9.2178025e-02   9.2178071e-02   9.2178082e-02
-  -6.4187282e-02  -7.3350074e-02  -6.5790946e-02  -5.9363928e-02  -6.6917613e-02  -6.7284318e-02  -6.6672152e-02  -6.9963109e-02  -6.3959453e-02  -5.4323437e-02  -7.1678437e-02  -6.4273151e-02  -6.7040583e-02  -6.5353531e-02  -6.5210885e-02  -6.5672257e-02  -6.5361205e-02  -6.5422363e-02  -6.5509617e-02  -6.5508029e-02  -6.5495772e-02  -6.5494228e-02  -6.5506052e-02  -6.5478994e-02  -6.5472950e-02  -6.5449992e-02  -6.5453702e-02  -6.5452279e-02  -6.5451958e-02  -6.6362948e-02  -5.7550728e-02  -6.4950019e-02  -7.1888751e-02  -6.3973444e-02  -6.3597417e-02  -6.4218634e-02  -6.0436621e-02  -6.6189117e-02  -7.6254219e-02  -5.9326839e-02  -6.6629861e-02  -6.3854851e-02  -6.5549213e-02  -6.5693161e-02  -6.5231755e-02  -6.5542645e-02  -6.5481501e-02  -6.5394305e-02  -6.5395895e-02  -6.5408143e-02  -6.5409688e-02  -6.5397863e-02  -6.5424918e-02  -6.5430966e-02  -6.5453924e-02  -6.5450214e-02  -6.5451637e-02  -6.5451958e-02
-   6.4189923e-02   7.3352210e-02   6.5793499e-02   5.9366836e-02   6.6920104e-02   6.7286788e-02   6.6674656e-02   6.9965432e-02   6.3962107e-02   5.4326622e-02   7.1680665e-02   6.4266688e-02   6.7041492e-02   6.5356109e-02   6.5213470e-02   6.5674817e-02   6.5363782e-02   6.5424936e-02   6.5512186e-02   6.5510598e-02   6.5498341e-02   6.5496797e-02   6.5508621e-02   6.5481564e-02   6.5475520e-02   6.5452564e-02   6.5456274e-02   6.5454850e-02   6.5454530e-02   6.6365470e-02   5.7553736e-02   6.4952618e-02   7.1890968e-02   6.3976098e-02   6.3600091e-02   6.4221273e-02   6.0439469e-02   6.6191648e-02   7.6256195e-02   5.9329749e-02   6.6641003e-02   6.3859638e-02   6.5551779e-02   6.5695720e-02   6.5234339e-02   6.5545211e-02   6.5484071e-02   6.5396879e-02   6.5398470e-02   6.5410717e-02   6.5412262e-02   6.5400438e-02   6.5427491e-02   6.5433539e-02   6.5456495e-02   6.5452786e-02   6.5454209e-02   6.5454530e-02
-  -1.0464643e-03  -1.3685173e-03  -9.0874304e-04  -6.3271552e-04  -1.1809613e-03  -1.1258380e-03  -1.1340139e-03  -7.8033024e-04  -1.3921434e-03  -1.9471984e-03   7.5555493e-04   3.6381530e-04  -5.8592464e-04   1.5572422e-03  -1.7553495e-03  -1.1627533e-03  -1.6066804e-03  -1.6221027e-03  -1.4712182e-03  -1.4697822e-03  -1.4893845e-03  -1.4914287e-03  -1.5092508e-03  -1.5154895e-03  -1.5227374e-03  -1.5632656e-03  -1.5569551e-03  -1.5576603e-03  -1.5588517e-03  -2.0352133e-03  -1.6915001e-03  -2.1704628e-03  -1.7840755e-03  -1.9389450e-03  -1.9915947e-03  -1.9812612e-03  -2.2031652e-03  -1.7162911e-03  -7.6903168e-04  -3.8949061e-03  -3.3993183e-03  -2.6076176e-03  -4.6755179e-03  -1.3621407e-03  -1.9547971e-03  -1.5111501e-03  -1.4957067e-03  -1.6464715e-03  -1.6479071e-03  -1.6283211e-03  -1.6262746e-03  -1.6084525e-03  -1.6022187e-03  -1.5949659e-03  -1.5544377e-03  -1.5607482e-03  -1.5600431e-03  -1.5588517e-03
-  -1.7519289e-02  -1.7705658e-02  -1.7098350e-02  -1.7373012e-02  -1.7486249e-02  -1.7457412e-02  -1.7481025e-02  -1.7630783e-02  -1.7399221e-02  -1.7214291e-02  -1.6993050e-02  -1.7280524e-02  -1.7399340e-02  -1.7291637e-02  -1.6950574e-02  -1.7383347e-02  -1.7161576e-02  -1.7319154e-02  -1.7343874e-02  -1.7329226e-02  -1.7325657e-02  -1.7324043e-02  -1.7335032e-02  -1.7305303e-02  -1.7307289e-02  -1.7296183e-02  -1.7297968e-02  -1.7296869e-02  -1.7296794e-02  -1.7088280e-02  -1.6891404e-02  -1.7505788e-02  -1.7313591e-02  -1.7108575e-02  -1.7138019e-02  -1.7115205e-02  -1.7000564e-02  -1.7210596e-02  -1.7448264e-02  -1.7600626e-02  -1.7313028e-02  -1.7194457e-02  -1.7302055e-02  -1.7643015e-02  -1.7210235e-02  -1.7431975e-02  -1.7274408e-02  -1.7249710e-02  -1.7264363e-02  -1.7267930e-02  -1.7269544e-02  -1.7258556e-02  -1.7288282e-02  -1.7286299e-02  -1.7297404e-02  -1.7295620e-02  -1.7296719e-02  -1.7296794e-02
-   1.1630027e-02   1.2229335e-02   1.1835319e-02   1.1613019e-02   1.1797207e-02   1.1723224e-02   1.1755356e-02   1.1728154e-02   1.1686499e-02   1.1604072e-02   1.1699759e-02   1.1810430e-02   1.1800378e-02   1.1798167e-02   1.1699693e-02   1.1978364e-02   1.1750428e-02   1.1780283e-02   1.1791155e-02   1.1798675e-02   1.1789325e-02   1.1785027e-02   1.1825094e-02   1.1793875e-02   1.1811669e-02   1.1800476e-02   1.1801355e-02   1.1800670e-02   1.1800560e-02   1.1978160e-02   1.1369486e-02   1.1769975e-02   1.2055010e-02   1.1805890e-02   1.1877393e-02   1.1846316e-02   1.1874480e-02   1.1927851e-02   1.1956874e-02   1.1900078e-02   1.1790176e-02   1.1799844e-02   1.1802911e-02   1.1901319e-02   1.1622626e-02   1.1850557e-02   1.1820704e-02   1.1809963e-02   1.1802441e-02   1.1811794e-02   1.1816092e-02   1.1776025e-02   1.1807242e-02   1.1789450e-02   1.1800644e-02   1.1799765e-02   1.1800449e-02   1.1800560e-02
-   6.3054492e-03   5.6338964e-03   4.9680789e-03   5.7448574e-03   5.5994064e-03   5.5135443e-03   5.6962240e-03   5.6595129e-03   6.6044385e-03   6.4862920e-03   5.9621224e-03   5.8062617e-03   5.7631332e-03   5.8103351e-03   5.8349051e-03   5.6956807e-03   5.8358893e-03   5.8053461e-03   5.7727182e-03   5.7763175e-03   5.7843422e-03   5.7813627e-03   5.7949383e-03   5.8032124e-03   5.8048569e-03   5.8084415e-03   5.8077505e-03   5.8081131e-03   5.8081455e-03   5.3069482e-03   6.0103085e-03   6.6445125e-03   5.8845121e-03   6.0179977e-03   6.1039095e-03   5.9192011e-03   6.0246946e-03   5.0346949e-03   5.3954328e-03   5.6339002e-03   5.8106103e-03   5.8536834e-03   5.8058895e-03   5.7813632e-03   5.9206107e-03   5.7804447e-03   5.8109863e-03   5.8435694e-03   5.8399709e-03   5.8319485e-03   5.8349283e-03   5.8213527e-03   5.8130836e-03   5.8114341e-03   5.8078496e-03   5.8085405e-03   5.8081780e-03   5.8081455e-03
-   2.6729194e-02   2.8762061e-02   2.7018058e-02   2.6707319e-02   2.7907961e-02   2.7626766e-02   2.7575224e-02   2.6766844e-02   2.7396035e-02   2.8231334e-02   2.8490758e-02   2.8608282e-02   2.8505123e-02   2.8524430e-02   2.8332918e-02   2.8330657e-02   2.8326102e-02   2.8436682e-02   2.8308600e-02   2.8305570e-02   2.8311034e-02   2.8312217e-02   2.8489396e-02   2.8439126e-02   2.8486225e-02   2.8487167e-02   2.8485318e-02   2.8485038e-02   2.8485152e-02   3.0229594e-02   2.8169194e-02   2.9940452e-02   3.0074656e-02   2.9066277e-02   2.9340028e-02   2.9394070e-02   3.0107710e-02   2.9565526e-02   2.8329327e-02   2.8491877e-02   2.8361224e-02   2.8464747e-02   2.8446001e-02   2.8636979e-02   2.8639260e-02   2.8644083e-02   2.8533491e-02   2.8661687e-02   2.8664715e-02   2.8659270e-02   2.8658087e-02   2.8480908e-02   2.8531179e-02   2.8484079e-02   2.8483138e-02   2.8484986e-02   2.8485267e-02   2.8485152e-02
-  -6.2364748e-01  -6.3601606e-01  -6.2555967e-01  -6.0835076e-01  -6.3255969e-01  -6.2778718e-01  -6.2732926e-01  -6.5950155e-01  -6.2453443e-01  -5.6860079e-01  -6.2922108e-01  -6.2960548e-01  -6.2923670e-01  -6.2810356e-01  -6.2785941e-01  -6.2811836e-01  -6.2801280e-01  -6.2817495e-01  -6.2820262e-01  -6.2816798e-01  -6.2816810e-01  -6.2817016e-01  -6.2796722e-01  -6.2800488e-01  -6.2799485e-01  -6.2800781e-01  -6.2800617e-01  -6.2800733e-01  -6.2800741e-01  -6.3013001e-01  -6.1918765e-01  -6.2942364e-01  -6.4717490e-01  -6.2334696e-01  -6.2814336e-01  -6.2864295e-01  -5.9345868e-01  -6.2719706e-01  -6.8738730e-01  -6.2746219e-01  -6.2640718e-01  -6.2674571e-01  -6.2791262e-01  -6.2815544e-01  -6.2789649e-01  -6.2800206e-01  -6.2783991e-01  -6.2781220e-01  -6.2784685e-01  -6.2784672e-01  -6.2784467e-01  -6.2804761e-01  -6.2800994e-01  -6.2801998e-01  -6.2800701e-01  -6.2800866e-01  -6.2800750e-01  -6.2800741e-01
-  -2.9274318e-02  -2.8883938e-02  -3.0088418e-02  -2.8567753e-02  -2.9576133e-02  -2.8201127e-02  -2.7255561e-02  -3.1214669e-02  -2.9069219e-02  -2.3857901e-02  -2.8741925e-02  -2.9436934e-02  -2.7731969e-02  -2.8627868e-02  -2.8736178e-02  -2.8880640e-02  -2.8733255e-02  -2.8657042e-02  -2.8712714e-02  -2.8747152e-02  -2.8712526e-02  -2.8714183e-02  -2.8596067e-02  -2.8623773e-02  -2.8603457e-02  -2.8608920e-02  -2.8608917e-02  -2.8609321e-02  -2.8609355e-02  -2.7746094e-02  -2.8294957e-02  -2.7051950e-02  -2.8635382e-02  -2.7635467e-02  -2.9015980e-02  -2.9967584e-02  -2.5782881e-02  -2.7780613e-02  -3.3660949e-02  -2.8523327e-02  -2.7783058e-02  -2.9478418e-02  -2.8590852e-02  -2.8482603e-02  -2.8338126e-02  -2.8485393e-02  -2.8561609e-02  -2.8506001e-02  -2.8471563e-02  -2.8506183e-02  -2.8504527e-02  -2.8622643e-02  -2.8594937e-02  -2.8615252e-02  -2.8609789e-02  -2.8609793e-02  -2.8609388e-02  -2.8609355e-02
-   9.4672609e-02   1.0256102e-01   8.1685265e-02   7.4513449e-02   8.4807794e-02   9.8963482e-02   7.7965367e-02   9.8101416e-02   9.7065864e-02   7.6306219e-02   9.0463106e-02   8.1429085e-02   1.0339849e-01   9.0031088e-02   9.0061456e-02   9.0079900e-02   9.0104924e-02   9.0191369e-02   9.0168781e-02   9.0161588e-02   9.0131739e-02   9.0161944e-02   9.0270060e-02   9.0249541e-02   9.0258573e-02   9.0252610e-02   9.0253213e-02   9.0252696e-02   9.0252651e-02   8.5114650e-02   7.7969076e-02   9.8345926e-02   1.0667499e-01   9.5606007e-02   8.1481960e-02   1.0258924e-01   8.1482659e-02   8.2262530e-02   1.0720429e-01   9.0096654e-02   9.9071589e-02   7.7183677e-02   9.0475559e-02   9.0443822e-02   9.0425393e-02   9.0400415e-02   9.0313971e-02   9.0336517e-02   9.0343713e-02   9.0373562e-02   9.0343358e-02   9.0235242e-02   9.0255763e-02   9.0246729e-02   9.0252692e-02   9.0252089e-02   9.0252606e-02   9.0252651e-02
-  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.6783436e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.3934537e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01  -4.5358986e-01
-   5.8036358e-02   5.9006171e-02   5.8161625e-02   5.5463779e-02   5.8215272e-02   5.7828191e-02   5.7798246e-02   6.1396171e-02   5.8580917e-02   5.0971379e-02   5.7904668e-02   5.8074562e-02   5.8118213e-02   5.7888760e-02   5.7732876e-02   5.7948354e-02   5.7809783e-02   5.7866117e-02   5.7886719e-02   5.7883506e-02   5.7879015e-02   5.7878630e-02   5.7914298e-02   5.7882704e-02   5.7887399e-02   5.7877928e-02   5.7879361e-02   5.7878317e-02   5.7878284e-02   5.7455679e-02   5.6685506e-02   5.7474542e-02   6.0371861e-02   5.7528309e-02   5.7921187e-02   5.7955049e-02   5.4109930e-02   5.6664485e-02   6.5251721e-02   5.7910807e-02   5.7682457e-02   5.7634974e-02   5.7868044e-02   5.8023698e-02   5.7808208e-02   5.7946746e-02   5.7890418e-02   5.7869849e-02   5.7873063e-02   5.7877553e-02   5.7877937e-02   5.7842270e-02   5.7873862e-02   5.7869169e-02   5.7878639e-02   5.7877207e-02   5.7878251e-02   5.7878284e-02
-   3.1361362e-02   3.2602307e-02   3.1810336e-02   3.2417459e-02   3.3187359e-02   3.2733717e-02   3.2709093e-02   3.2282222e-02   3.0621718e-02   3.0574083e-02   3.2572588e-02   3.2635092e-02   3.2663465e-02   3.2646669e-02   3.2634654e-02   3.2704323e-02   3.2659988e-02   3.2656869e-02   3.2686885e-02   3.2688812e-02   3.2686231e-02   3.2685390e-02   3.2655260e-02   3.2667234e-02   3.2654477e-02   3.2653148e-02   3.2653796e-02   3.2653796e-02   3.2653749e-02   3.3920186e-02   3.2629475e-02   3.3484507e-02   3.2812739e-02   3.2119513e-02   3.2567950e-02   3.2596049e-02   3.2815824e-02   3.4584630e-02   3.3984682e-02   3.2776575e-02   3.2670866e-02   3.2642010e-02   3.2660921e-02   3.2672926e-02   3.2603249e-02   3.2647522e-02   3.2650645e-02   3.2620617e-02   3.2618691e-02   3.2621268e-02   3.2622109e-02   3.2652239e-02   3.2640264e-02   3.2653021e-02   3.2654351e-02   3.2653703e-02   3.2653703e-02   3.2653749e-02
-   4.2723487e-02   4.4073880e-02   4.2959832e-02   4.2012631e-02   4.3125878e-02   4.3179922e-02   4.3089702e-02   4.3574716e-02   4.2689910e-02   4.1269774e-02   2.9583024e-02   4.2821589e-02   4.3024461e-02   4.2895367e-02   4.2874344e-02   4.2942340e-02   4.2896497e-02   4.2905511e-02   4.2918370e-02   4.2918136e-02   4.2916330e-02   4.2916102e-02   4.2917845e-02   4.2913857e-02   4.2912966e-02   4.2909583e-02   4.2910129e-02   4.2909920e-02   4.2909872e-02   4.3044132e-02   4.1745406e-02   4.2835898e-02   4.3858514e-02   4.2691972e-02   4.2636554e-02   4.2728108e-02   4.2170723e-02   4.3018513e-02   4.4501887e-02   5.6251659e-02   4.2998975e-02   4.2793952e-02   4.2924206e-02   4.2945420e-02   4.2877419e-02   4.2923238e-02   4.2914226e-02   4.2901376e-02   4.2901610e-02   4.2903415e-02   4.2903643e-02   4.2901900e-02   4.2905887e-02   4.2906779e-02   4.2910162e-02   4.2909615e-02   4.2909825e-02   4.2909872e-02
-  -2.9757574e-01  -3.3884958e-01  -3.0479946e-01  -2.7584893e-01  -3.0987453e-01  -3.1152635e-01  -3.0876885e-01  -3.2359298e-01  -2.9654949e-01  -2.5314401e-01  -3.3131969e-01  -3.1220703e-01  -3.1042845e-01  -3.0282912e-01  -3.0218657e-01  -3.0426482e-01  -3.0286369e-01  -3.0313917e-01  -3.0353221e-01  -3.0352506e-01  -3.0346984e-01  -3.0346289e-01  -3.0351615e-01  -3.0339426e-01  -3.0336704e-01  -3.0326363e-01  -3.0328034e-01  -3.0327393e-01  -3.0327248e-01  -3.0737604e-01  -2.6768136e-01  -3.0101150e-01  -3.3226705e-01  -2.9661251e-01  -2.9491869e-01  -2.9771697e-01  -2.8068087e-01  -3.0659302e-01  -3.5193132e-01  -2.7568186e-01  -2.9433386e-01  -2.9607831e-01  -3.0371057e-01  -3.0435898e-01  -3.0228058e-01  -3.0368098e-01  -3.0340556e-01  -3.0301278e-01  -3.0301995e-01  -3.0307512e-01  -3.0308208e-01  -3.0302881e-01  -3.0315068e-01  -3.0317792e-01  -3.0328134e-01  -3.0326463e-01  -3.0327104e-01  -3.0327248e-01
-   4.1745078e-01   4.5872234e-01   4.2467409e-01   3.9572516e-01   4.2974889e-01   4.3140062e-01   4.2864327e-01   4.4346658e-01   4.1642458e-01   3.7302149e-01   4.5119286e-01   4.1779656e-01   4.1605118e-01   4.2270386e-01   4.2206135e-01   4.2413948e-01   4.2273843e-01   4.2301390e-01   4.2340691e-01   4.2339976e-01   4.2334455e-01   4.2333760e-01   4.2339086e-01   4.2326898e-01   4.2324175e-01   4.2313835e-01   4.2315506e-01   4.2314865e-01   4.2314720e-01   4.2725053e-01   3.8755804e-01   4.2088634e-01   4.5214017e-01   4.1648760e-01   4.1479387e-01   4.1759199e-01   4.0055684e-01   4.2646756e-01   4.7180335e-01   3.9555810e-01   4.2849167e-01   4.3020750e-01   4.2358526e-01   4.2423364e-01   4.2215535e-01   4.2355568e-01   4.2328027e-01   4.2288752e-01   4.2289468e-01   4.2294985e-01   4.2295681e-01   4.2290354e-01   4.2302541e-01   4.2305265e-01   4.2315606e-01   4.2313934e-01   4.2314576e-01   4.2314720e-01
-  -7.5217911e-03  -8.9724802e-03  -6.9014249e-03  -5.6580577e-03  -8.1276332e-03  -7.8793301e-03  -7.9161586e-03  -6.3229889e-03  -9.0789040e-03  -1.1579152e-02   5.9541279e-04  -1.1691801e-03  -5.4472880e-03  -1.0037877e-02  -1.0714968e-02  -8.0456151e-03  -1.0045287e-02  -1.0114757e-02  -9.4350970e-03  -9.4286285e-03  -9.5169269e-03  -9.5261352e-03  -9.6064150e-03  -9.6345171e-03  -9.6671653e-03  -9.8497248e-03  -9.8212990e-03  -9.8244757e-03  -9.8298421e-03  -1.1975615e-02  -1.0427358e-02  -1.2584847e-02  -1.0844364e-02  -1.1541974e-02  -1.1779135e-02  -1.1732588e-02  -1.2732155e-02  -1.0539029e-02  -6.2720945e-03  -2.0352610e-02  -1.8120233e-02  -1.4554013e-02  -9.6243853e-03  -8.9437566e-03  -1.1613380e-02  -9.6149701e-03  -9.5454055e-03  -1.0224526e-02  -1.0230993e-02  -1.0142767e-02  -1.0133549e-02  -1.0053269e-02  -1.0025189e-02  -9.9925189e-03  -9.8099594e-03  -9.8383852e-03  -9.8352088e-03  -9.8298421e-03
diff --git a/drake/matlab/solvers/trajectoryOptimization/RobustContactImplicitTrajectoryOptimization_Kuka.m b/drake/matlab/solvers/trajectoryOptimization/RobustContactImplicitTrajectoryOptimization_Kuka.m
index 626627650..090b80ec9 100644
--- a/drake/matlab/solvers/trajectoryOptimization/RobustContactImplicitTrajectoryOptimization_Kuka.m
+++ b/drake/matlab/solvers/trajectoryOptimization/RobustContactImplicitTrajectoryOptimization_Kuka.m
@@ -238,6 +238,9 @@
             function [c,dc] = robustVariancecost(obj, x_full, u_full)
                 global timestep_updated
                 global time_step
+                global x_previous
+                global df_previous
+                
                 tic
                 x_full = x_full + randn(size(x_full))*0.1;
                 u_full = u_full + randn(size(u_full))*0.1;
@@ -295,24 +298,14 @@
                 % time counter
                 tStart = tic;
                 
-                Sig = load('Sig_data.dat');
-                x = load('x_data.dat');
-                u = load('u_data.dat');
-%                 xdn_par = load('x_par.dat');
-%                 xdn_nonpar = load('x_nonpar.dat');
-%                 df_par1 = load('df_par1.dat');
-%                 df_nonpar1 = load('df_nonpar1.dat');
-%                 df_par5 = load('df_par5.dat');
-%                 df_nonpar5 = load('df_nonpar5.dat');
-%                 df_par10 = load('df_par10.dat');
-%                 df_nonpar10 = load('df_nonpar10.dat');
-                
                 function [xdn,df] = objPlantUpdate(noise_index,Sig,u_fdb_k)
                     [xdn,df] = obj.plant.update(noise_index,Sig,u_fdb_k);
                 end
                 
                 plant_update = @objPlantUpdate;
                 obj.plant.time_step = time_step;
+                df_previous_full = [];
+                xdn_previous_full = [];
                 
                 for k = 1:obj.N-1%[Ye: double check the index]
                     %Propagate sigma points through nonlinear dynamics
@@ -325,10 +318,10 @@
                         %end
                         
                         [S,d] = chol(blkdiag(Px(:,:,k), Pw),'lower');
-                        % if d
-                        %    diverge = k;
-                        %    return;
-                        % end
+                        if d
+                           diverge = k;
+                           return;
+                        end
                         
                         S = scale*S;
                         try
@@ -374,118 +367,109 @@
                     nx = obj.nx;
                     nu = obj.nu;
                     nxhalf = nx/2;
-                    
-                    %save -ascii Sig_data.dat Sig
-                    %save -ascii x_data.dat x
-                    %save -ascii u_data.dat u
-                    
+                                        
                     % begin of original non-parallezied version
-%                     for j = 1:n_sig_point
-%                         %Generate sigma points from Px(i+1)
-%                         %[the sequential way to be modified]
-%                         % currently, only use the initial variance matrix for the propogation
-%                         %j
-%                     
-%                         % a hacky way to implement the control input
-%                         [H,C,B,dH,dC,dB] = obj.plant.manipulatorDynamics(Sig(1:obj.nx/2,j,k),Sig(obj.nx/2+1:obj.nx,j,k));
-%                         Hinv(:,:,j,k) = inv(H);
-%                     
-%                         if strcmp(obj.plant.uncertainty_source, 'friction_coeff')
-%                             obj.plant.friction_coeff = w_mu(j);
-%                         end
-%                     
-%                         % add feedback control
-%                         t = timestep_updated*(k-1);%[double make sure obj.h is updated correctly]
-%                         u_fdb_k = u(:,k) - K*(Sig(1:obj.nx,j,k) - x(:,k));
-%                     
-%                         tic
-%                         %[xdn(:,j),df(:,:,j)] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k,w_mu(j));
-%                         [xdn(:,j),df(:,:,j)] = feval(plant_update,t,Sig(1:nx,j,k),u(:,k) - K*(Sig(1:nx,j,k) - x(:,k)),w_mu(j));
-%                         toc
-%                     
-%                         % %numerical diff
-%                         % dt = diag(sqrt(eps(t)));
-%                         % dx = diag(sqrt(eps(Sig(1:obj.nx,j,k))));
-%                         % du = diag(sqrt(eps(u_fdb_k)));
-%                         %
-%                         % [xdnp,df] = obj.plant.update(t+dt,Sig(1:obj.nx,j,k),u_fdb_k);
-%                         % [xdnm,df] = obj.plant.update(t-dt,Sig(1:obj.nx,j,k),u_fdb_k);
-%                         % df(:,1) = (xdnp-xdnm)/(2*dt);
-%                         %
-%                         % N_finite_diff_x = length(Sig(1:obj.nx,j,k));
-%                         % tic
-%                         % for m = 1:N_finite_diff_x
-%                         %     [xdnp,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k)+dx(:,m),u_fdb_k);
-%                         %     [xdnm,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k)-dx(:,m),u_fdb_k);
-%                         %     df(:,m+1) = (xdnp-xdnm)/(2*dx(m,m));
-%                         % end
-%                         %
-%                         % N_finite_diff_u = length(u_fdb_k);
-%                         %
-%                         % for m = 1:N_finite_diff_u
-%                         %     [xdnp,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k+du(:,m));
-%                         %     [xdnm,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k-du(:,m));
-%                         %     df(:,m+1+N_finite_diff_x) = (xdnp-xdnm)/(2*du(m,m));
-%                         % end
-%                         % only columns 9,12,13,14 occasionally have value differences.
-%                     
-%                         Sig(1:obj.nx,j,k+1) = xdn(1:obj.nx,j);
-%                     
-%                         dfdu(:,:,j,k+1) = df(:,end-obj.nu+1:end,j);
-%                         dfdSig(:,:,j,k+1) = df(:,2:obj.nx+1,j) - dfdu(:,:,j,k+1)*K;
-%                         dfdx(:,:,j,k+1) = dfdu(:,:,j,k+1)*K;
-%                     end
-                    % end of original non-parallezied version
-                    
-%                     tic
-                    for jj = 1:n_sig_point
+                    for j = 1:n_sig_point
                         %Generate sigma points from Px(i+1)
                         %[the sequential way to be modified]
                         % currently, only use the initial variance matrix for the propogation
-                        noise_index = jj
+                        noise_index = j
                         
                         % a hacky way to implement the control input
-                        %[H(:,:,j),~,~,dH,dC,dB] = obj.plant.manipulatorDynamics(Sig(1:nxhalf,j,k),Sig(nxhalf+1:nx,j,k));
-                        %Hinv(:,:,j,k) = inv(H(:,:,j));
+                        [H,C,B,dH,dC,dB] = obj.plant.manipulatorDynamics(Sig(1:obj.nx/2,j,k),Sig(obj.nx/2+1:obj.nx,j,k));
+                        Hinv(:,:,j,k) = inv(H);
                         
-                        % this friction coeff samples are directly embedded
-                        % as the input argument of update() function
-                        %if strcmp(obj.plant.uncertainty_source, 'friction_coeff')
-                            %obj.plant.friction_coeff = w_mu(j);
-                        %end
+                        if strcmp(obj.plant.uncertainty_source, 'friction_coeff')
+                            obj.plant.friction_coeff = w_mu(j);
+                        end
                         
                         % add feedback control
                         t = timestep_updated*(k-1);%[double make sure obj.h is updated correctly]
-                        %u_fdb_k(:,j) = u(:,k) - K*(Sig(1:nx,j,k) - x(:,k));
-
-                        %[xdn,df] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k);
-                        [xdn(:,jj),df(:,:,jj)] = feval(plant_update,noise_index,Sig(1:nx,jj,k),u(:,k) - K*(Sig(1:nx,jj,k) - x(:,k)));
-                    end
-%                     toc
-                    
-                    tic
-                    for jj=1:n_sig_point
+                        u_fdb_k = u(:,k) - K*(Sig(1:obj.nx,j,k) - x(:,k));
                         
-                        [H(:,:,jj),~,~,dH,dC,dB] = obj.plant.manipulatorDynamics(Sig(1:nxhalf,jj,k),Sig(nxhalf+1:nx,jj,k));
-                        Hinv(:,:,jj,k) = inv(H(:,:,jj));
+                        %tic
+                        %[xdn(:,j),df(:,:,j)] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k,w_mu(j));
+                        if k > 1
+                            x_previous = xdn_previous_full(:,j);
+                            df_previous = df_previous_full(:,:,j);
+                        end
                         
-                        Sig(1:nx,jj,k+1) = xdn(1:nx,jj);
+                        [xdn(:,j),df(:,:,j)] = feval(plant_update,noise_index,Sig(1:nx,j,k),u(:,k) - K*(Sig(1:nx,j,k) - x(:,k)));
+                        %toc
                         
-                        dfdu(:,:,jj,k+1) = df(:,end-nu+1:end,jj);
-                        dfdSig(:,:,jj,k+1) = df(:,2:nx+1,jj) - dfdu(:,:,jj,k+1)*K;
-                        dfdx(:,:,jj,k+1) = dfdu(:,:,jj,k+1)*K; 
+                        % %numerical diff
+                        % dt = diag(sqrt(eps(t)));
+                        % dx = diag(sqrt(eps(Sig(1:obj.nx,j,k))));
+                        % du = diag(sqrt(eps(u_fdb_k)));
+                        %
+                        % [xdnp,df] = obj.plant.update(t+dt,Sig(1:obj.nx,j,k),u_fdb_k);
+                        % [xdnm,df] = obj.plant.update(t-dt,Sig(1:obj.nx,j,k),u_fdb_k);
+                        % df(:,1) = (xdnp-xdnm)/(2*dt);
+                        %
+                        % N_finite_diff_x = length(Sig(1:obj.nx,j,k));
+                        % tic
+                        % for m = 1:N_finite_diff_x
+                        %     [xdnp,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k)+dx(:,m),u_fdb_k);
+                        %     [xdnm,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k)-dx(:,m),u_fdb_k);
+                        %     df(:,m+1) = (xdnp-xdnm)/(2*dx(m,m));
+                        % end
+                        %
+                        % N_finite_diff_u = length(u_fdb_k);
+                        %
+                        % for m = 1:N_finite_diff_u
+                        %     [xdnp,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k+du(:,m));
+                        %     [xdnm,df_numerical] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k-du(:,m));
+                        %     df(:,m+1+N_finite_diff_x) = (xdnp-xdnm)/(2*du(m,m));
+                        % end
+                        % only columns 9,12,13,14 occasionally have value differences.
+                        
+                        Sig(1:obj.nx,j,k+1) = xdn(1:obj.nx,j);
+                        
+                        dfdu(:,:,j,k+1) = df(:,end-obj.nu+1:end,j);
+                        dfdSig(:,:,j,k+1) = df(:,2:obj.nx+1,j) - dfdu(:,:,j,k+1)*K;
+                        dfdx(:,:,j,k+1) = dfdu(:,:,j,k+1)*K;
                     end
-                    toc
-
-                    x_par = xdn;
-                    df_par1 = df(:,:,1);
-                    df_par5 = df(:,:,5);
-                    df_par10 = df(:,:,10);
-                    save -ascii x_par.dat x_par
-                    save -ascii df_par1.dat df_par1
-                    save -ascii df_par5.dat df_par5
-                    save -ascii df_par10.dat df_par10
+                    xdn_previous_full = xdn;
+                    df_previous_full = df;
+                    
+                    % end of original non-parallezied version
                     
+%                     parfor jj = 1:n_sig_point
+%                         %Generate sigma points from Px(i+1)
+%                         %[the sequential way to be modified]
+%                         % currently, only use the initial variance matrix for the propogation
+%                         noise_index = jj
+%                         
+%                         % a hacky way to implement the control input
+%                         %[H(:,:,j),~,~,dH,dC,dB] = obj.plant.manipulatorDynamics(Sig(1:nxhalf,j,k),Sig(nxhalf+1:nx,j,k));
+%                         %Hinv(:,:,j,k) = inv(H(:,:,j));
+%                         
+%                         % this friction coeff samples are directly embedded
+%                         % as the input argument of update() function
+%                         %if strcmp(obj.plant.uncertainty_source, 'friction_coeff')
+%                             %obj.plant.friction_coeff = w_mu(j);
+%                         %end
+%                         
+%                         % add feedback control
+%                         t = timestep_updated*(k-1);%[double make sure obj.h is updated correctly]
+%                         %u_fdb_k(:,j) = u(:,k) - K*(Sig(1:nx,j,k) - x(:,k));
+% 
+%                         %[xdn,df] = obj.plant.update(t,Sig(1:obj.nx,j,k),u_fdb_k);
+%                         [xdn(:,jj),df(:,:,jj)] = feval(plant_update,noise_index,Sig(1:nx,jj,k),u(:,k) - K*(Sig(1:nx,jj,k) - x(:,k)));
+%                     end
+%                     
+%                     for jj=1:n_sig_point
+%                         
+%                         [H(:,:,jj),~,~,dH,dC,dB] = obj.plant.manipulatorDynamics(Sig(1:nxhalf,jj,k),Sig(nxhalf+1:nx,jj,k));
+%                         Hinv(:,:,jj,k) = inv(H(:,:,jj));
+%                         
+%                         Sig(1:nx,jj,k+1) = xdn(1:nx,jj);
+%                         
+%                         dfdu(:,:,jj,k+1) = df(:,end-nu+1:end,jj);
+%                         dfdSig(:,:,jj,k+1) = df(:,2:nx+1,jj) - dfdu(:,:,jj,k+1)*K;
+%                         dfdx(:,:,jj,k+1) = dfdu(:,:,jj,k+1)*K; 
+%                     end
+
                     % calculate mean and variance w.r.t. [x_k] from sigma points
                     x_mean(:,k+1) = zeros(obj.nx,1);
                     for j = 1:n_sig_point
@@ -898,10 +882,10 @@ function DerivCheck(funptr, X0, ~, varargin)
                             %end
                             
                             [S,d] = chol(blkdiag(Px(:,:,k), Pw),'lower');
-                            % if d
-                            %    diverge = k;
-                            %    return;
-                            % end
+                            if d
+                               diverge = k;
+                               return;
+                            end
                             
                             S = scale*S;
                             try
diff --git a/drake/matlab/systems/plants/TimeSteppingRigidBodyManipulator_Kuka.m b/drake/matlab/systems/plants/TimeSteppingRigidBodyManipulator_Kuka.m
index 1a4e723da..7d80024f7 100644
--- a/drake/matlab/systems/plants/TimeSteppingRigidBodyManipulator_Kuka.m
+++ b/drake/matlab/systems/plants/TimeSteppingRigidBodyManipulator_Kuka.m
@@ -238,16 +238,49 @@ function checkDirty(obj)
             end
         end
         
+        function [V] = getV(obj,noise_index,q,kinsol)
+            if nargin<3
+                kinematics_options.compute_gradients = 1;
+                kinsol = doKinematics(obj, q, [], kinematics_options);
+            end
+            
+            if strcmp(obj.uncertainty_source, 'friction_coeff')
+                [normal,d,mu] = obj.contactConstraints_manual_v2(kinsol);
+            elseif nargout > 10
+                [normal,d,mu] = obj.contactConstraints_manual_v2(kinsol);
+            else
+                [normal,d,mu] = obj.manip.contactConstraints_v2(kinsol);
+            end
+            
+            % reconstruct perturbed mu
+            if ~isempty(noise_index)
+                %mu = obj.friction_coeff*ones(length(mu),1);
+                mu = obj.w_mu(noise_index)*ones(length(mu),1);% design for parallelization
+            end
+            % [double make sure that mu is not interweaving contactConstraints]
+            
+            % TODO: clean up
+            nk = length(d);
+            V = cell(1,2*nk);
+            muI = sparse(diag(mu));
+            norm_mat = sparse(diag(1./sqrt(1 + mu.^2)));
+            for k=1:nk,
+                V{k} = (normal + d{k}*muI)*norm_mat;
+                V{nk+k} = (normal - d{k}*muI)*norm_mat;
+            end
+        end
+        
         function [xdn,df] = solveQPOpt(obj,h,x,u)
             [xdn,df] = geval(@obj.solveQP,h,x,u,struct('grad_method','numerical'));
         end
         
         function [xdn,df] = solveQP(obj,X0)
+            global x_previous
+            global df_previous
             
             noise_index = X0(1);
             x = X0(2:29);
             u = X0(30:37);
-            global timestep_updated
             obj.w_mu = load('friction_coeff_noise.dat');
             % try
             %     if (nargout>1)
@@ -409,14 +442,12 @@ function checkDirty(obj)
                 kinematics_options.compute_gradients = 1;
                 kinsol_num = doKinematics(obj, q_num, [], kinematics_options);
                 
-                %tic
                 if obj.num_u > 0
-                    [phiC_num,~,V_num,~,~,xA_num,xB_num,idxA_num,idxB_num,~,~,~] = getContactTerms(obj,noise_index,q_num,kinsol_num);
+                    [~,~,V_num,~,~,xA_num,xB_num,idxA_num,idxB_num,~,~,~] = getContactTerms(obj,noise_index,q_num,kinsol_num);
                 else
-                    [phiC_num,~,V_num,~,~,xA_num,xB_num,idxA_num,idxB_num,~] = getContactTerms(obj,noise_index,q_num,kinsol_num);
+                    [~,~,V_num,~,~,xA_num,xB_num,idxA_num,idxB_num,~] = getContactTerms(obj,noise_index,q_num,kinsol_num);
                 end
-                %toc
-                
+                            
                 V_num = horzcat(V_num{:});
                 I = eye(num_c*num_d);
                 V_cell_num = cell(1,num_active);
@@ -446,47 +477,133 @@ function checkDirty(obj)
                     [~,J_num_,~] = forwardKin(obj.manip,kinsol_num,Bidx_num(k),Bpts_num(:,k));
                     JB_num = [JB_num; reshape(J_num_(index,:),[],1)];
                 end
+                
                 J_num = JA_num-JB_num;
             end
             
+            function [V_num] = V_gradient_numerical(X0)
+                h_num = X0(1);
+                x_num = X0(2:29);
+                u_num = X0(30:37);
+                
+                q_num=x_num(1:num_q);
+                v_num=x_num(num_q+(1:obj.manip.getNumVelocities));
+                
+                kinematics_options.compute_gradients = 1;
+                kinsol_num = doKinematics(obj, q_num, [], kinematics_options);
+                     
+                if obj.num_u > 0
+                    [V_num] = getV(obj,noise_index,q_num,kinsol_num);
+                else
+                    [V_num] = getV(obj,noise_index,q_num,kinsol_num);
+                end
+                
+                V_num = horzcat(V_num{:});
+                I = eye(num_c*num_d);
+                V_cell_num = cell(1,num_active);
+                for ii=1:num_c+nL
+                    if ii<=num_active
+                        % is a contact point
+                        idx_beta_num = active(ii):num_c:num_c*num_d;
+                        V_cell_num{ii} = V_num*I(idx_beta_num,:)'; % basis vectors for ith contact
+                    end
+                end
+                V_num = blkdiag(V_cell_num{:},eye(nL));
+            end
+            
+            function [JB_num] = B_gradient_numerical(X0)
+                h_num = X0(1);
+                x_num = X0(2:29);
+                u_num = X0(30:37);
+                q_num=x_num(1:num_q);
+                v_num=x_num(num_q+(1:obj.manip.getNumVelocities));
+                
+                kinematics_options.compute_gradients = 1;
+                kinsol_num = doKinematics(obj, q_num, [], kinematics_options);
+                
+                xB_num = obj.computexB(kinsol_num);
+                
+                fingercontact_num = 8;
+                for k=1:fingercontact_num
+                    JB_finger_obj_ori = dJB_finger_obj_ori_analytical(q_num,xB_num(1,4+k),xB_num(2,4+k),xB_num(3,4+k));
+                    J_num_new = [zeros(3,8),eye(3),JB_finger_obj_ori];
+                    JB_num(:,k) = reshape(J_num_new,[],1);
+                end                
+            end
+            
             fcn = @object_gradient_numerical;
+            fcnB = @B_gradient_numerical;
+            fcnV = @V_gradient_numerical;
             
             %tic
+            dV = zeros(num_full_dim,(num_d*num_c+nL),num_q);
             for i=1:num_q
                 rr = sqrt(eps(X0));
                 rr(1:i) = 0;%corresponding to time step h
                 m = i+2;% only q component affects Jacobian J
                 rr(m:end) = rr(m:end) - rr(m:end);% set all other elements (unrelated to q state) to be zero
-                
                 X0_p = X0 + rr/2;
                 X0_m = X0 - rr/2;
-                [J_object_p(:,:,i),V_num_p(:,:,i)] = feval(fcn,X0_p);
-                [J_object_m(:,:,i),V_num_m(:,:,i)] = feval(fcn,X0_m);
                 
-                dJ(:,i) = (J_object_p(:,:,i) - J_object_m(:,:,i))/rr(i+1);
-                dV(:,:,i) = (V_num_p(:,:,i) - V_num_m(:,:,i))/rr(i+1);
+                % % old approach for comparison
+                % [J_object_p,V_num_p] = feval(fcn,X0_p);
+                % [J_object_m,V_num_m] = feval(fcn,X0_m);
+                %
+                % dJ_ori(:,i) = (J_object_p - J_object_m)/rr(i+1);
+                % dV_ori(:,:,i) = (V_num_p - V_num_m)/rr(i+1);
+                
+                %% new approach, 4 times faster
+                
+                [V_num_p] = feval(fcnV,X0_p);
+                [V_num_m] = feval(fcnV,X0_m);
+                dV(:,:,i) = (V_num_p - V_num_m)/rr(i+1);
+                
+                q = X0(2:15);                
+                obj_dim = 6;
+                groundcontact_num = 4;
+                fingercontact_num = 8;
+                if i <= fingercontact_num
+                    dJA_ground = zeros(length(q)*3*groundcontact_num,1);
+                    dJA_finger = [];
+                    for fingercontactIndx = 1:fingercontact_num
+                        dJA_single_finger = [dJA_analytical(q,fingercontactIndx,i);zeros(obj_dim*3,1)];
+                        dJA_finger = [dJA_finger;dJA_single_finger];
+                    end
+                    dJA(:,i) = [dJA_ground;dJA_finger];
+                else
+                    dJA(:,i) = zeros((groundcontact_num+fingercontact_num)*3*length(q),1);
+                end
+                
+                [JB_finger_num_p] = feval(fcnB,X0_p);
+                [JB_finger_num_m] = feval(fcnB,X0_m);
+                
+                dJB_ground = zeros(length(q)*3*groundcontact_num,1);
+                dJB_finger = [];
+                
+                dJB_single_finger = (JB_finger_num_p - JB_finger_num_m)/rr(i+1);
+                dJB_finger = [dJB_finger;reshape(dJB_single_finger,[],1)];
+                dJB(:,i) = [dJB_ground;dJB_finger];
+                
+                dJ(:,i) = dJA(:,i) - dJB(:,i);
+                
+%                 tic
+%                 finger_contact_delta = 0.01;
+%                 right_finger_y_shift = 0.04;
+%                 finger_contact_right1 = [finger_contact_delta;right_finger_y_shift;0.1225];
+%                 [fr1,Jr1,dJr1] = forwardKin(obj.manip,kinsol,8,finger_contact_right1,0);
+%                 toc
+% 
+%                 disp('detail')
+%                 %tic
+%                 dJB_fr1_theta1_theta1 = dJB_fr1_theta1_theta1_func_compose(kinsol,q);
+%                 %tic
+%                 ddJB_new = dJB_new(q);
+                %toc
+                %toc
             end
             %toc
-            
-%             tic
-%             parfor i=1:num_q
-%                 rr = sqrt(eps(X0));
-%                 rr(1:i) = 0;%corresponding to time step h
-%                 m = i+2;% only q component affects Jacobian J
-%                 rr(m:end) = rr(m:end) - rr(m:end);% set all other elements (unrelated to q state) to be zero
-%                 
-%                 X0_p = X0 + rr/2;
-%                 X0_m = X0 - rr/2;
-%                 [J_object_p(:,:,i),V_num_p(:,:,i)] = feval(fcn,X0_p);
-%                 [J_object_m(:,:,i),V_num_m(:,:,i)] = feval(fcn,X0_m);
-%                 
-%                 dJ(:,i) = (J_object_p(:,:,i) - J_object_m(:,:,i))/rr(i+1);
-%                 dV(:,:,i) = (V_num_p(:,:,i) - V_num_m(:,:,i))/rr(i+1);
-%             end
-%             toc
-             
             %% end of numerical Jacobian gradient for dJ and dV
-             
+            
             % dJ new sequence, stack Aidx first and then num_q
             dJx = []; dJy = []; dJz = [];
             for j=1:length(Aidx)
@@ -604,7 +721,7 @@ function checkDirty(obj)
             S_weighting = blkdiag(S_weighting_array{:});
             
             Q = 0.5*V'*S_weighting*(A+R)*S_weighting*V + 1e-7*eye(num_params);
-
+            
             % N*(A*z + c) - v_min \ge 0
             Ain = zeros(num_active+nL,num_params);
             bin = zeros(num_active+nL,1);
@@ -643,6 +760,9 @@ function checkDirty(obj)
             catch
                 display('gurobi solve failure');
                 keyboard
+                xdn = x_previous;
+                df = df_previous;
+                return
             end
             f = S_weighting*V*(result_qp);% each 3x1 block is for one contact point, x, y, and z direction are all negative values, since it points from B to A.
             active_set = find(abs(Ain_fqp*result_qp - bin_fqp)<1e-6);
@@ -789,10 +909,10 @@ function checkDirty(obj)
                 end
                 dJdq(:,:,i) = [dJdq_tmp;zeros(nL,num_q)];%[tuned for 3D]
                 dAdq_tmp(:,:,i) = -J*vToqdot*Hinv*dHdq(:,:,i)*Hinv*vToqdot'*J' + dJdq(:,:,i)*vToqdot*Hinv*vToqdot'*J' ...
-                        +J*vToqdot*Hinv*vToqdot'*dJdq(:,:,i)';
+                    +J*vToqdot*Hinv*vToqdot'*dJdq(:,:,i)';
                 dAdq(:,:,i) = V'*S_weighting*dAdq_tmp(:,:,i)*S_weighting*V + dV(:,:,i)'*S_weighting*(A+R)*S_weighting*V ...
-                        + V'*S_weighting*(A+R)*S_weighting*dV(:,:,i);
-
+                    + V'*S_weighting*(A+R)*S_weighting*dV(:,:,i);
+                
                 dcdq(:,i) = dJdq(:,:,i)*vToqdot*(v+Hinv*tau*h) - J*vToqdot*Hinv*dHdq(:,:,i)*Hinv*tau*h ...
                     - J*vToqdot*Hinv*dCdq(:,:,i)*h;
                 dbdq(:,i) = V'*S_weighting*dcdq(:,i) + dV(:,:,i)'*S_weighting*c;
@@ -1041,14 +1161,12 @@ function checkDirty(obj)
         end
         
         function [xdn,df] = update(obj,index,x,u)
-            global timestep_updated
-            X0 = [index;x;u];
-            %X0'
+            X0 = [index;x;u];%note that the first input is sigma point index
             [xdn,df] = solveQP(obj,X0);
-            %set the gradient w.r.t t to be zero.
+            %set the gradient w.r.t index to be zero.
             df(:,1) = zeros(size(df,1),1);
             return;
-                        
+            
             % fun = @(X0) solveQP(obj,X0);
             % DerivCheck(fun, X0)
             %
